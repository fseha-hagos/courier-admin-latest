diff --git a/.env b/.env
index bb5eef6..68f66a1 100644
--- a/.env
+++ b/.env
@@ -1 +1,3 @@
 VITE_GOOGLE_MAPS_API_KEY=AIzaSyAwKog5CijtSrF54wB8njIpZccR4YhjxXk
+VITE_API_URL=http://localhost:3000/api
+VITE_PRODUCTION_API_URL=https://courier-server-q8dx.onrender.com/api
\ No newline at end of file
diff --git a/package.json b/package.json
index 55a9bee..b440434 100644
--- a/package.json
+++ b/package.json
@@ -46,6 +46,7 @@
     "cmdk": "1.0.4",
     "date-fns": "^4.1.0",
     "js-cookie": "^3.0.5",
+    "libphonenumber-js": "^1.12.6",
     "lucide-react": "^0.468.0",
     "react": "^19.0.0",
     "react-day-picker": "8.10.1",
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index abea449..d958e4d 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -73,13 +73,13 @@ importers:
         version: 2.20.6(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
       '@tabler/icons-react':
         specifier: ^3.24.0
-        version: 3.30.0(react@19.0.0)
+        version: 3.31.0(react@19.0.0)
       '@tanstack/react-query':
         specifier: ^5.62.3
-        version: 5.66.6(react@19.0.0)
+        version: 5.68.0(react@19.0.0)
       '@tanstack/react-router':
         specifier: ^1.86.1
-        version: 1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+        version: 1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
       '@tanstack/react-table':
         specifier: ^8.20.5
         version: 8.21.2(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
@@ -88,10 +88,10 @@ importers:
         version: 3.58.1
       axios:
         specifier: ^1.7.9
-        version: 1.7.9
+        version: 1.8.3
       better-auth:
         specifier: ^1.1.10
-        version: 1.1.18
+        version: 1.2.4(typescript@5.7.3)
       class-variance-authority:
         specifier: ^0.7.1
         version: 0.7.1
@@ -107,6 +107,9 @@ importers:
       js-cookie:
         specifier: ^3.0.5
         version: 3.0.5
+      libphonenumber-js:
+        specifier: ^1.12.6
+        version: 1.12.6
       lucide-react:
         specifier: ^0.468.0
         version: 0.468.0(react@19.0.0)
@@ -140,31 +143,31 @@ importers:
     devDependencies:
       '@eslint/js':
         specifier: ^9.16.0
-        version: 9.20.0
+        version: 9.22.0
       '@faker-js/faker':
         specifier: ^9.3.0
-        version: 9.5.0
+        version: 9.6.0
       '@tanstack/eslint-plugin-query':
         specifier: ^5.62.1
-        version: 5.66.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
+        version: 5.68.0(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
       '@tanstack/react-query-devtools':
         specifier: ^5.62.3
-        version: 5.66.6(@tanstack/react-query@5.66.6(react@19.0.0))(react@19.0.0)
+        version: 5.68.0(@tanstack/react-query@5.68.0(react@19.0.0))(react@19.0.0)
       '@tanstack/router-devtools':
         specifier: ^1.86.1
-        version: 1.105.0(@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(csstype@3.1.3)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+        version: 1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(@tanstack/router-core@1.114.23)(csstype@3.1.3)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(tiny-invariant@1.3.3)
       '@tanstack/router-plugin':
         specifier: ^1.86.0
-        version: 1.105.0(@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(vite@6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0))
+        version: 1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(vite@6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0))
       '@trivago/prettier-plugin-sort-imports':
         specifier: ^4.3.0
-        version: 4.3.0(prettier@3.5.1)
+        version: 4.3.0(prettier@3.5.3)
       '@types/js-cookie':
         specifier: ^3.0.6
         version: 3.0.6
       '@types/node':
         specifier: ^22.10.1
-        version: 22.13.4
+        version: 22.13.10
       '@types/react':
         specifier: ^19.0.1
         version: 19.0.10
@@ -173,34 +176,34 @@ importers:
         version: 19.0.4(@types/react@19.0.10)
       '@vitejs/plugin-react-swc':
         specifier: ^3.7.2
-        version: 3.8.0(vite@6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0))
+        version: 3.8.0(vite@6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0))
       autoprefixer:
         specifier: ^10.4.20
-        version: 10.4.20(postcss@8.5.2)
+        version: 10.4.21(postcss@8.5.3)
       eslint:
         specifier: ^9.16.0
-        version: 9.20.1(jiti@2.4.2)
+        version: 9.22.0(jiti@2.4.2)
       eslint-plugin-react-hooks:
         specifier: ^5.1.0
-        version: 5.1.0(eslint@9.20.1(jiti@2.4.2))
+        version: 5.2.0(eslint@9.22.0(jiti@2.4.2))
       eslint-plugin-react-refresh:
         specifier: ^0.4.16
-        version: 0.4.19(eslint@9.20.1(jiti@2.4.2))
+        version: 0.4.19(eslint@9.22.0(jiti@2.4.2))
       globals:
         specifier: ^15.13.0
         version: 15.15.0
       knip:
         specifier: ^5.41.1
-        version: 5.44.1(@types/node@22.13.4)(typescript@5.7.3)
+        version: 5.46.0(@types/node@22.13.10)(typescript@5.7.3)
       postcss:
         specifier: ^8.4.49
-        version: 8.5.2
+        version: 8.5.3
       prettier:
         specifier: ^3.4.2
-        version: 3.5.1
+        version: 3.5.3
       prettier-plugin-tailwindcss:
         specifier: ^0.6.9
-        version: 0.6.11(@trivago/prettier-plugin-sort-imports@4.3.0(prettier@3.5.1))(prettier@3.5.1)
+        version: 0.6.11(@trivago/prettier-plugin-sort-imports@4.3.0(prettier@3.5.3))(prettier@3.5.3)
       tailwindcss:
         specifier: ^3.4.16
         version: 3.4.17
@@ -209,10 +212,10 @@ importers:
         version: 5.7.3
       typescript-eslint:
         specifier: ^8.17.0
-        version: 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
+        version: 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
       vite:
         specifier: ^6.0.3
-        version: 6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0)
+        version: 6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0)
 
 packages:
 
@@ -232,16 +235,16 @@ packages:
     resolution: {integrity: sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==}
     engines: {node: '>=6.9.0'}
 
-  '@babel/core@7.26.9':
-    resolution: {integrity: sha512-lWBYIrF7qK5+GjY5Uy+/hEgp8OJWOD/rpy74GplYRhEauvbHDeFB8t5hPOZxCZ0Oxf4Cc36tK51/l3ymJysrKw==}
+  '@babel/core@7.26.10':
+    resolution: {integrity: sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==}
     engines: {node: '>=6.9.0'}
 
   '@babel/generator@7.17.7':
     resolution: {integrity: sha512-oLcVCTeIFadUoArDTwpluncplrYBmTCCZZgXCbgNGvOBBiSDDK3eWO4b/+eOTli5tKv1lg+a5/NAXg+nTcei1w==}
     engines: {node: '>=6.9.0'}
 
-  '@babel/generator@7.26.9':
-    resolution: {integrity: sha512-kEWdzjOAUMW4hAyrzJ0ZaTOu9OmpyDIQicIh0zg0EEcEkYXZb2TjtBhnHi2ViX7PKwZqF4xwqfAm299/QMP3lg==}
+  '@babel/generator@7.26.10':
+    resolution: {integrity: sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang==}
     engines: {node: '>=6.9.0'}
 
   '@babel/helper-compilation-targets@7.26.5':
@@ -290,12 +293,12 @@ packages:
     resolution: {integrity: sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==}
     engines: {node: '>=6.9.0'}
 
-  '@babel/helpers@7.26.9':
-    resolution: {integrity: sha512-Mz/4+y8udxBKdmzt/UjPACs4G3j5SshJJEFFKxlCGPydG4JAHXxjWjAwjd09tf6oINvl1VfMJo+nB7H2YKQ0dA==}
+  '@babel/helpers@7.26.10':
+    resolution: {integrity: sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g==}
     engines: {node: '>=6.9.0'}
 
-  '@babel/parser@7.26.9':
-    resolution: {integrity: sha512-81NWa1njQblgZbQHxWHpxxCzNsa3ZwvFqpUg7P+NNUU6f3UU2jBEg4OlF/J6rl8+PQGh1q6/zWScd001YwcA5A==}
+  '@babel/parser@7.26.10':
+    resolution: {integrity: sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA==}
     engines: {node: '>=6.0.0'}
     hasBin: true
 
@@ -311,8 +314,8 @@ packages:
     peerDependencies:
       '@babel/core': ^7.0.0-0
 
-  '@babel/runtime@7.26.9':
-    resolution: {integrity: sha512-aA63XwOkcl4xxQa3HjPMqOP6LiK0ZDv3mUPYEFXkpHbaFjtGggE1A61FjFzJnB+p7/oy2gA8E+rcBNl/zC1tMg==}
+  '@babel/runtime@7.26.10':
+    resolution: {integrity: sha512-2WJMeRQPHKSPemqk/awGrAiuFfzBmOIPXKizAsVhWH9YJqLZ0H+HS4c8loHGgW6utJ3E/ejXQUsiGaQy2NZ9Fw==}
     engines: {node: '>=6.9.0'}
 
   '@babel/template@7.26.9':
@@ -323,320 +326,176 @@ packages:
     resolution: {integrity: sha512-azpe59SQ48qG6nu2CzcMLbxUudtN+dOM9kDbUqGq3HXUJRlo7i8fvPoxQUzYgLZ4cMVmuZgm8vvBpNeRhd6XSw==}
     engines: {node: '>=6.9.0'}
 
-  '@babel/traverse@7.26.9':
-    resolution: {integrity: sha512-ZYW7L+pL8ahU5fXmNbPF+iZFHCv5scFak7MZ9bwaRPLUhHh7QQEMjZUg0HevihoqCM5iSYHN61EyCoZvqC+bxg==}
+  '@babel/traverse@7.26.10':
+    resolution: {integrity: sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A==}
     engines: {node: '>=6.9.0'}
 
   '@babel/types@7.17.0':
     resolution: {integrity: sha512-TmKSNO4D5rzhL5bjWFcVHHLETzfQ/AmbKpKPOSjlP0WoHZ6L911fgoOKY4Alp/emzG4cHJdyN49zpgkbXFEHHw==}
     engines: {node: '>=6.9.0'}
 
-  '@babel/types@7.26.9':
-    resolution: {integrity: sha512-Y3IR1cRnOxOCDvMmNiym7XpXQ93iGDDPHx+Zj+NM+rg0fBaShfQLkg+hKPaZCEvg5N/LeCo4+Rj/i3FuJsIQaw==}
+  '@babel/types@7.26.10':
+    resolution: {integrity: sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ==}
     engines: {node: '>=6.9.0'}
 
   '@better-auth/utils@0.2.3':
     resolution: {integrity: sha512-Ap1GaSmo6JYhJhxJOpUB0HobkKPTNzfta+bLV89HfpyCAHN7p8ntCrmNFHNAVD0F6v0mywFVEUg1FUhNCc81Rw==}
 
-  '@better-fetch/fetch@1.1.12':
-    resolution: {integrity: sha512-B3bfloI/2UBQWIATRN6qmlORrvx3Mp0kkNjmXLv0b+DtbtR+pP4/I5kQA/rDUv+OReLywCCldf6co4LdDmh8JA==}
+  '@better-fetch/fetch@1.1.15':
+    resolution: {integrity: sha512-0Bl8YYj1f8qCTNHeSn5+1DWv2hy7rLBrQ8rS8Y9XYloiwZEfc3k4yspIG0llRxafxqhGCwlGRg+F8q1HZRCMXA==}
 
-  '@esbuild/aix-ppc64@0.23.1':
-    resolution: {integrity: sha512-6VhYk1diRqrhBAqpJEdjASR/+WVRtfjpqKuNw11cLiaWpAT/Uu+nokB+UJnevzy/P9C/ty6AOe0dwueMrGh/iQ==}
+  '@esbuild/aix-ppc64@0.25.1':
+    resolution: {integrity: sha512-kfYGy8IdzTGy+z0vFGvExZtxkFlA4zAxgKEahG9KE1ScBjpQnFsNOX8KTU5ojNru5ed5CVoJYXFtoxaq5nFbjQ==}
     engines: {node: '>=18'}
     cpu: [ppc64]
     os: [aix]
 
-  '@esbuild/aix-ppc64@0.24.2':
-    resolution: {integrity: sha512-thpVCb/rhxE/BnMLQ7GReQLLN8q9qbHmI55F4489/ByVg2aQaQ6kbcLb6FHkocZzQhxc4gx0sCk0tJkKBFzDhA==}
-    engines: {node: '>=18'}
-    cpu: [ppc64]
-    os: [aix]
-
-  '@esbuild/android-arm64@0.23.1':
-    resolution: {integrity: sha512-xw50ipykXcLstLeWH7WRdQuysJqejuAGPd30vd1i5zSyKK3WE+ijzHmLKxdiCMtH1pHz78rOg0BKSYOSB/2Khw==}
+  '@esbuild/android-arm64@0.25.1':
+    resolution: {integrity: sha512-50tM0zCJW5kGqgG7fQ7IHvQOcAn9TKiVRuQ/lN0xR+T2lzEFvAi1ZcS8DiksFcEpf1t/GYOeOfCAgDHFpkiSmA==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [android]
 
-  '@esbuild/android-arm64@0.24.2':
-    resolution: {integrity: sha512-cNLgeqCqV8WxfcTIOeL4OAtSmL8JjcN6m09XIgro1Wi7cF4t/THaWEa7eL5CMoMBdjoHOTh/vwTO/o2TRXIyzg==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [android]
-
-  '@esbuild/android-arm@0.23.1':
-    resolution: {integrity: sha512-uz6/tEy2IFm9RYOyvKl88zdzZfwEfKZmnX9Cj1BHjeSGNuGLuMD1kR8y5bteYmwqKm1tj8m4cb/aKEorr6fHWQ==}
-    engines: {node: '>=18'}
-    cpu: [arm]
-    os: [android]
-
-  '@esbuild/android-arm@0.24.2':
-    resolution: {integrity: sha512-tmwl4hJkCfNHwFB3nBa8z1Uy3ypZpxqxfTQOcHX+xRByyYgunVbZ9MzUUfb0RxaHIMnbHagwAxuTL+tnNM+1/Q==}
+  '@esbuild/android-arm@0.25.1':
+    resolution: {integrity: sha512-dp+MshLYux6j/JjdqVLnMglQlFu+MuVeNrmT5nk6q07wNhCdSnB7QZj+7G8VMUGh1q+vj2Bq8kRsuyA00I/k+Q==}
     engines: {node: '>=18'}
     cpu: [arm]
     os: [android]
 
-  '@esbuild/android-x64@0.23.1':
-    resolution: {integrity: sha512-nlN9B69St9BwUoB+jkyU090bru8L0NA3yFvAd7k8dNsVH8bi9a8cUAUSEcEEgTp2z3dbEDGJGfP6VUnkQnlReg==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [android]
-
-  '@esbuild/android-x64@0.24.2':
-    resolution: {integrity: sha512-B6Q0YQDqMx9D7rvIcsXfmJfvUYLoP722bgfBlO5cGvNVb5V/+Y7nhBE3mHV9OpxBf4eAS2S68KZztiPaWq4XYw==}
+  '@esbuild/android-x64@0.25.1':
+    resolution: {integrity: sha512-GCj6WfUtNldqUzYkN/ITtlhwQqGWu9S45vUXs7EIYf+7rCiiqH9bCloatO9VhxsL0Pji+PF4Lz2XXCES+Q8hDw==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [android]
 
-  '@esbuild/darwin-arm64@0.23.1':
-    resolution: {integrity: sha512-YsS2e3Wtgnw7Wq53XXBLcV6JhRsEq8hkfg91ESVadIrzr9wO6jJDMZnCQbHm1Guc5t/CdDiFSSfWP58FNuvT3Q==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [darwin]
-
-  '@esbuild/darwin-arm64@0.24.2':
-    resolution: {integrity: sha512-kj3AnYWc+CekmZnS5IPu9D+HWtUI49hbnyqk0FLEJDbzCIQt7hg7ucF1SQAilhtYpIujfaHr6O0UHlzzSPdOeA==}
+  '@esbuild/darwin-arm64@0.25.1':
+    resolution: {integrity: sha512-5hEZKPf+nQjYoSr/elb62U19/l1mZDdqidGfmFutVUjjUZrOazAtwK+Kr+3y0C/oeJfLlxo9fXb1w7L+P7E4FQ==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [darwin]
 
-  '@esbuild/darwin-x64@0.23.1':
-    resolution: {integrity: sha512-aClqdgTDVPSEGgoCS8QDG37Gu8yc9lTHNAQlsztQ6ENetKEO//b8y31MMu2ZaPbn4kVsIABzVLXYLhCGekGDqw==}
+  '@esbuild/darwin-x64@0.25.1':
+    resolution: {integrity: sha512-hxVnwL2Dqs3fM1IWq8Iezh0cX7ZGdVhbTfnOy5uURtao5OIVCEyj9xIzemDi7sRvKsuSdtCAhMKarxqtlyVyfA==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [darwin]
 
-  '@esbuild/darwin-x64@0.24.2':
-    resolution: {integrity: sha512-WeSrmwwHaPkNR5H3yYfowhZcbriGqooyu3zI/3GGpF8AyUdsrrP0X6KumITGA9WOyiJavnGZUwPGvxvwfWPHIA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [darwin]
-
-  '@esbuild/freebsd-arm64@0.23.1':
-    resolution: {integrity: sha512-h1k6yS8/pN/NHlMl5+v4XPfikhJulk4G+tKGFIOwURBSFzE8bixw1ebjluLOjfwtLqY0kewfjLSrO6tN2MgIhA==}
+  '@esbuild/freebsd-arm64@0.25.1':
+    resolution: {integrity: sha512-1MrCZs0fZa2g8E+FUo2ipw6jw5qqQiH+tERoS5fAfKnRx6NXH31tXBKI3VpmLijLH6yriMZsxJtaXUyFt/8Y4A==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [freebsd]
 
-  '@esbuild/freebsd-arm64@0.24.2':
-    resolution: {integrity: sha512-UN8HXjtJ0k/Mj6a9+5u6+2eZ2ERD7Edt1Q9IZiB5UZAIdPnVKDoG7mdTVGhHJIeEml60JteamR3qhsr1r8gXvg==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [freebsd]
-
-  '@esbuild/freebsd-x64@0.23.1':
-    resolution: {integrity: sha512-lK1eJeyk1ZX8UklqFd/3A60UuZ/6UVfGT2LuGo3Wp4/z7eRTRYY+0xOu2kpClP+vMTi9wKOfXi2vjUpO1Ro76g==}
+  '@esbuild/freebsd-x64@0.25.1':
+    resolution: {integrity: sha512-0IZWLiTyz7nm0xuIs0q1Y3QWJC52R8aSXxe40VUxm6BB1RNmkODtW6LHvWRrGiICulcX7ZvyH6h5fqdLu4gkww==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [freebsd]
 
-  '@esbuild/freebsd-x64@0.24.2':
-    resolution: {integrity: sha512-TvW7wE/89PYW+IevEJXZ5sF6gJRDY/14hyIGFXdIucxCsbRmLUcjseQu1SyTko+2idmCw94TgyaEZi9HUSOe3Q==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [freebsd]
-
-  '@esbuild/linux-arm64@0.23.1':
-    resolution: {integrity: sha512-/93bf2yxencYDnItMYV/v116zff6UyTjo4EtEQjUBeGiVpMmffDNUyD9UN2zV+V3LRV3/on4xdZ26NKzn6754g==}
+  '@esbuild/linux-arm64@0.25.1':
+    resolution: {integrity: sha512-jaN3dHi0/DDPelk0nLcXRm1q7DNJpjXy7yWaWvbfkPvI+7XNSc/lDOnCLN7gzsyzgu6qSAmgSvP9oXAhP973uQ==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [linux]
 
-  '@esbuild/linux-arm64@0.24.2':
-    resolution: {integrity: sha512-7HnAD6074BW43YvvUmE/35Id9/NB7BeX5EoNkK9obndmZBUk8xmJJeU7DwmUeN7tkysslb2eSl6CTrYz6oEMQg==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [linux]
-
-  '@esbuild/linux-arm@0.23.1':
-    resolution: {integrity: sha512-CXXkzgn+dXAPs3WBwE+Kvnrf4WECwBdfjfeYHpMeVxWE0EceB6vhWGShs6wi0IYEqMSIzdOF1XjQ/Mkm5d7ZdQ==}
+  '@esbuild/linux-arm@0.25.1':
+    resolution: {integrity: sha512-NdKOhS4u7JhDKw9G3cY6sWqFcnLITn6SqivVArbzIaf3cemShqfLGHYMx8Xlm/lBit3/5d7kXvriTUGa5YViuQ==}
     engines: {node: '>=18'}
     cpu: [arm]
     os: [linux]
 
-  '@esbuild/linux-arm@0.24.2':
-    resolution: {integrity: sha512-n0WRM/gWIdU29J57hJyUdIsk0WarGd6To0s+Y+LwvlC55wt+GT/OgkwoXCXvIue1i1sSNWblHEig00GBWiJgfA==}
-    engines: {node: '>=18'}
-    cpu: [arm]
-    os: [linux]
-
-  '@esbuild/linux-ia32@0.23.1':
-    resolution: {integrity: sha512-VTN4EuOHwXEkXzX5nTvVY4s7E/Krz7COC8xkftbbKRYAl96vPiUssGkeMELQMOnLOJ8k3BY1+ZY52tttZnHcXQ==}
-    engines: {node: '>=18'}
-    cpu: [ia32]
-    os: [linux]
-
-  '@esbuild/linux-ia32@0.24.2':
-    resolution: {integrity: sha512-sfv0tGPQhcZOgTKO3oBE9xpHuUqguHvSo4jl+wjnKwFpapx+vUDcawbwPNuBIAYdRAvIDBfZVvXprIj3HA+Ugw==}
+  '@esbuild/linux-ia32@0.25.1':
+    resolution: {integrity: sha512-OJykPaF4v8JidKNGz8c/q1lBO44sQNUQtq1KktJXdBLn1hPod5rE/Hko5ugKKZd+D2+o1a9MFGUEIUwO2YfgkQ==}
     engines: {node: '>=18'}
     cpu: [ia32]
     os: [linux]
 
-  '@esbuild/linux-loong64@0.23.1':
-    resolution: {integrity: sha512-Vx09LzEoBa5zDnieH8LSMRToj7ir/Jeq0Gu6qJ/1GcBq9GkfoEAoXvLiW1U9J1qE/Y/Oyaq33w5p2ZWrNNHNEw==}
-    engines: {node: '>=18'}
-    cpu: [loong64]
-    os: [linux]
-
-  '@esbuild/linux-loong64@0.24.2':
-    resolution: {integrity: sha512-CN9AZr8kEndGooS35ntToZLTQLHEjtVB5n7dl8ZcTZMonJ7CCfStrYhrzF97eAecqVbVJ7APOEe18RPI4KLhwQ==}
+  '@esbuild/linux-loong64@0.25.1':
+    resolution: {integrity: sha512-nGfornQj4dzcq5Vp835oM/o21UMlXzn79KobKlcs3Wz9smwiifknLy4xDCLUU0BWp7b/houtdrgUz7nOGnfIYg==}
     engines: {node: '>=18'}
     cpu: [loong64]
     os: [linux]
 
-  '@esbuild/linux-mips64el@0.23.1':
-    resolution: {integrity: sha512-nrFzzMQ7W4WRLNUOU5dlWAqa6yVeI0P78WKGUo7lg2HShq/yx+UYkeNSE0SSfSure0SqgnsxPvmAUu/vu0E+3Q==}
-    engines: {node: '>=18'}
-    cpu: [mips64el]
-    os: [linux]
-
-  '@esbuild/linux-mips64el@0.24.2':
-    resolution: {integrity: sha512-iMkk7qr/wl3exJATwkISxI7kTcmHKE+BlymIAbHO8xanq/TjHaaVThFF6ipWzPHryoFsesNQJPE/3wFJw4+huw==}
+  '@esbuild/linux-mips64el@0.25.1':
+    resolution: {integrity: sha512-1osBbPEFYwIE5IVB/0g2X6i1qInZa1aIoj1TdL4AaAb55xIIgbg8Doq6a5BzYWgr+tEcDzYH67XVnTmUzL+nXg==}
     engines: {node: '>=18'}
     cpu: [mips64el]
     os: [linux]
 
-  '@esbuild/linux-ppc64@0.23.1':
-    resolution: {integrity: sha512-dKN8fgVqd0vUIjxuJI6P/9SSSe/mB9rvA98CSH2sJnlZ/OCZWO1DJvxj8jvKTfYUdGfcq2dDxoKaC6bHuTlgcw==}
+  '@esbuild/linux-ppc64@0.25.1':
+    resolution: {integrity: sha512-/6VBJOwUf3TdTvJZ82qF3tbLuWsscd7/1w+D9LH0W/SqUgM5/JJD0lrJ1fVIfZsqB6RFmLCe0Xz3fmZc3WtyVg==}
     engines: {node: '>=18'}
     cpu: [ppc64]
     os: [linux]
 
-  '@esbuild/linux-ppc64@0.24.2':
-    resolution: {integrity: sha512-shsVrgCZ57Vr2L8mm39kO5PPIb+843FStGt7sGGoqiiWYconSxwTiuswC1VJZLCjNiMLAMh34jg4VSEQb+iEbw==}
-    engines: {node: '>=18'}
-    cpu: [ppc64]
-    os: [linux]
-
-  '@esbuild/linux-riscv64@0.23.1':
-    resolution: {integrity: sha512-5AV4Pzp80fhHL83JM6LoA6pTQVWgB1HovMBsLQ9OZWLDqVY8MVobBXNSmAJi//Csh6tcY7e7Lny2Hg1tElMjIA==}
+  '@esbuild/linux-riscv64@0.25.1':
+    resolution: {integrity: sha512-nSut/Mx5gnilhcq2yIMLMe3Wl4FK5wx/o0QuuCLMtmJn+WeWYoEGDN1ipcN72g1WHsnIbxGXd4i/MF0gTcuAjQ==}
     engines: {node: '>=18'}
     cpu: [riscv64]
     os: [linux]
 
-  '@esbuild/linux-riscv64@0.24.2':
-    resolution: {integrity: sha512-4eSFWnU9Hhd68fW16GD0TINewo1L6dRrB+oLNNbYyMUAeOD2yCK5KXGK1GH4qD/kT+bTEXjsyTCiJGHPZ3eM9Q==}
-    engines: {node: '>=18'}
-    cpu: [riscv64]
-    os: [linux]
-
-  '@esbuild/linux-s390x@0.23.1':
-    resolution: {integrity: sha512-9ygs73tuFCe6f6m/Tb+9LtYxWR4c9yg7zjt2cYkjDbDpV/xVn+68cQxMXCjUpYwEkze2RcU/rMnfIXNRFmSoDw==}
-    engines: {node: '>=18'}
-    cpu: [s390x]
-    os: [linux]
-
-  '@esbuild/linux-s390x@0.24.2':
-    resolution: {integrity: sha512-S0Bh0A53b0YHL2XEXC20bHLuGMOhFDO6GN4b3YjRLK//Ep3ql3erpNcPlEFed93hsQAjAQDNsvcK+hV90FubSw==}
+  '@esbuild/linux-s390x@0.25.1':
+    resolution: {integrity: sha512-cEECeLlJNfT8kZHqLarDBQso9a27o2Zd2AQ8USAEoGtejOrCYHNtKP8XQhMDJMtthdF4GBmjR2au3x1udADQQQ==}
     engines: {node: '>=18'}
     cpu: [s390x]
     os: [linux]
 
-  '@esbuild/linux-x64@0.23.1':
-    resolution: {integrity: sha512-EV6+ovTsEXCPAp58g2dD68LxoP/wK5pRvgy0J/HxPGB009omFPv3Yet0HiaqvrIrgPTBuC6wCH1LTOY91EO5hQ==}
+  '@esbuild/linux-x64@0.25.1':
+    resolution: {integrity: sha512-xbfUhu/gnvSEg+EGovRc+kjBAkrvtk38RlerAzQxvMzlB4fXpCFCeUAYzJvrnhFtdeyVCDANSjJvOvGYoeKzFA==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [linux]
 
-  '@esbuild/linux-x64@0.24.2':
-    resolution: {integrity: sha512-8Qi4nQcCTbLnK9WoMjdC9NiTG6/E38RNICU6sUNqK0QFxCYgoARqVqxdFmWkdonVsvGqWhmm7MO0jyTqLqwj0Q==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [linux]
-
-  '@esbuild/netbsd-arm64@0.24.2':
-    resolution: {integrity: sha512-wuLK/VztRRpMt9zyHSazyCVdCXlpHkKm34WUyinD2lzK07FAHTq0KQvZZlXikNWkDGoT6x3TD51jKQ7gMVpopw==}
+  '@esbuild/netbsd-arm64@0.25.1':
+    resolution: {integrity: sha512-O96poM2XGhLtpTh+s4+nP7YCCAfb4tJNRVZHfIE7dgmax+yMP2WgMd2OecBuaATHKTHsLWHQeuaxMRnCsH8+5g==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [netbsd]
 
-  '@esbuild/netbsd-x64@0.23.1':
-    resolution: {integrity: sha512-aevEkCNu7KlPRpYLjwmdcuNz6bDFiE7Z8XC4CPqExjTvrHugh28QzUXVOZtiYghciKUacNktqxdpymplil1beA==}
+  '@esbuild/netbsd-x64@0.25.1':
+    resolution: {integrity: sha512-X53z6uXip6KFXBQ+Krbx25XHV/NCbzryM6ehOAeAil7X7oa4XIq+394PWGnwaSQ2WRA0KI6PUO6hTO5zeF5ijA==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [netbsd]
 
-  '@esbuild/netbsd-x64@0.24.2':
-    resolution: {integrity: sha512-VefFaQUc4FMmJuAxmIHgUmfNiLXY438XrL4GDNV1Y1H/RW3qow68xTwjZKfj/+Plp9NANmzbH5R40Meudu8mmw==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [netbsd]
-
-  '@esbuild/openbsd-arm64@0.23.1':
-    resolution: {integrity: sha512-3x37szhLexNA4bXhLrCC/LImN/YtWis6WXr1VESlfVtVeoFJBRINPJ3f0a/6LV8zpikqoUg4hyXw0sFBt5Cr+Q==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [openbsd]
-
-  '@esbuild/openbsd-arm64@0.24.2':
-    resolution: {integrity: sha512-YQbi46SBct6iKnszhSvdluqDmxCJA+Pu280Av9WICNwQmMxV7nLRHZfjQzwbPs3jeWnuAhE9Jy0NrnJ12Oz+0A==}
+  '@esbuild/openbsd-arm64@0.25.1':
+    resolution: {integrity: sha512-Na9T3szbXezdzM/Kfs3GcRQNjHzM6GzFBeU1/6IV/npKP5ORtp9zbQjvkDJ47s6BCgaAZnnnu/cY1x342+MvZg==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [openbsd]
 
-  '@esbuild/openbsd-x64@0.23.1':
-    resolution: {integrity: sha512-aY2gMmKmPhxfU+0EdnN+XNtGbjfQgwZj43k8G3fyrDM/UdZww6xrWxmDkuz2eCZchqVeABjV5BpildOrUbBTqA==}
+  '@esbuild/openbsd-x64@0.25.1':
+    resolution: {integrity: sha512-T3H78X2h1tszfRSf+txbt5aOp/e7TAz3ptVKu9Oyir3IAOFPGV6O9c2naym5TOriy1l0nNf6a4X5UXRZSGX/dw==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [openbsd]
 
-  '@esbuild/openbsd-x64@0.24.2':
-    resolution: {integrity: sha512-+iDS6zpNM6EnJyWv0bMGLWSWeXGN/HTaF/LXHXHwejGsVi+ooqDfMCCTerNFxEkM3wYVcExkeGXNqshc9iMaOA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [openbsd]
-
-  '@esbuild/sunos-x64@0.23.1':
-    resolution: {integrity: sha512-RBRT2gqEl0IKQABT4XTj78tpk9v7ehp+mazn2HbUeZl1YMdaGAQqhapjGTCe7uw7y0frDi4gS0uHzhvpFuI1sA==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [sunos]
-
-  '@esbuild/sunos-x64@0.24.2':
-    resolution: {integrity: sha512-hTdsW27jcktEvpwNHJU4ZwWFGkz2zRJUz8pvddmXPtXDzVKTTINmlmga3ZzwcuMpUvLw7JkLy9QLKyGpD2Yxig==}
+  '@esbuild/sunos-x64@0.25.1':
+    resolution: {integrity: sha512-2H3RUvcmULO7dIE5EWJH8eubZAI4xw54H1ilJnRNZdeo8dTADEZ21w6J22XBkXqGJbe0+wnNJtw3UXRoLJnFEg==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [sunos]
 
-  '@esbuild/win32-arm64@0.23.1':
-    resolution: {integrity: sha512-4O+gPR5rEBe2FpKOVyiJ7wNDPA8nGzDuJ6gN4okSA1gEOYZ67N8JPk58tkWtdtPeLz7lBnY6I5L3jdsr3S+A6A==}
+  '@esbuild/win32-arm64@0.25.1':
+    resolution: {integrity: sha512-GE7XvrdOzrb+yVKB9KsRMq+7a2U/K5Cf/8grVFRAGJmfADr/e/ODQ134RK2/eeHqYV5eQRFxb1hY7Nr15fv1NQ==}
     engines: {node: '>=18'}
     cpu: [arm64]
     os: [win32]
 
-  '@esbuild/win32-arm64@0.24.2':
-    resolution: {integrity: sha512-LihEQ2BBKVFLOC9ZItT9iFprsE9tqjDjnbulhHoFxYQtQfai7qfluVODIYxt1PgdoyQkz23+01rzwNwYfutxUQ==}
-    engines: {node: '>=18'}
-    cpu: [arm64]
-    os: [win32]
-
-  '@esbuild/win32-ia32@0.23.1':
-    resolution: {integrity: sha512-BcaL0Vn6QwCwre3Y717nVHZbAa4UBEigzFm6VdsVdT/MbZ38xoj1X9HPkZhbmaBGUD1W8vxAfffbDe8bA6AKnQ==}
+  '@esbuild/win32-ia32@0.25.1':
+    resolution: {integrity: sha512-uOxSJCIcavSiT6UnBhBzE8wy3n0hOkJsBOzy7HDAuTDE++1DJMRRVCPGisULScHL+a/ZwdXPpXD3IyFKjA7K8A==}
     engines: {node: '>=18'}
     cpu: [ia32]
     os: [win32]
 
-  '@esbuild/win32-ia32@0.24.2':
-    resolution: {integrity: sha512-q+iGUwfs8tncmFC9pcnD5IvRHAzmbwQ3GPS5/ceCyHdjXubwQWI12MKWSNSMYLJMq23/IUCvJMS76PDqXe1fxA==}
-    engines: {node: '>=18'}
-    cpu: [ia32]
-    os: [win32]
-
-  '@esbuild/win32-x64@0.23.1':
-    resolution: {integrity: sha512-BHpFFeslkWrXWyUPnbKm+xYYVYruCinGcftSBaa8zoF9hZO4BcSCFUvHVTtzpIY6YzUnYtuEhZ+C9iEXjxnasg==}
-    engines: {node: '>=18'}
-    cpu: [x64]
-    os: [win32]
-
-  '@esbuild/win32-x64@0.24.2':
-    resolution: {integrity: sha512-7VTgWzgMGvup6aSqDPLiW5zHaxYJGTO4OokMjIlrCtf+VpEL+cXKtCvg723iguPYI5oaUNdS+/V7OU2gvXVWEg==}
+  '@esbuild/win32-x64@0.25.1':
+    resolution: {integrity: sha512-Y1EQdcfwMSeQN/ujR5VayLOJ1BHaK+ssyk0AEzPjC+t1lITgsnccPqFjb6V+LsTp/9Iov4ysfjxLaGJ9RPtkVg==}
     engines: {node: '>=18'}
     cpu: [x64]
     os: [win32]
 
-  '@eslint-community/eslint-utils@4.4.1':
-    resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}
+  '@eslint-community/eslint-utils@4.5.1':
+    resolution: {integrity: sha512-soEIOALTfTK6EjmKMMoLugwaP0rzkad90iIWd1hMO9ARkSAyjfMfkRRhLvD5qH7vvM0Cg72pieUfR6yh6XxC4w==}
     engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}
     peerDependencies:
       eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
@@ -649,32 +508,32 @@ packages:
     resolution: {integrity: sha512-GNKqxfHG2ySmJOBSHg7LxeUx4xpuCoFjacmlCoYWEbaPXLwvfIjixRI12xCQZeULksQb23uiA8F40w5TojpV7w==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/core@0.10.0':
-    resolution: {integrity: sha512-gFHJ+xBOo4G3WRlR1e/3G8A6/KZAH6zcE/hkLRCZTi/B9avAG365QhFA8uOGzTMqgTghpn7/fSnscW++dpMSAw==}
+  '@eslint/config-helpers@0.1.0':
+    resolution: {integrity: sha512-kLrdPDJE1ckPo94kmPPf9Hfd0DU0Jw6oKYrhe+pwSC0iTUInmTa+w6fw8sGgcfkFJGNdWOUeOaDM4quW4a7OkA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/core@0.11.0':
-    resolution: {integrity: sha512-DWUB2pksgNEb6Bz2fggIy1wh6fGgZP4Xyy/Mt0QZPiloKKXerbqq9D3SBQTlCRYOrcRPu4vuz+CGjwdfqxnoWA==}
+  '@eslint/core@0.12.0':
+    resolution: {integrity: sha512-cmrR6pytBuSMTaBweKoGMwu3EiHiEC+DoyupPmlZ0HxBJBtIxwe+j/E4XPIKNx+Q74c8lXKPwYawBf5glsTkHg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/eslintrc@3.2.0':
-    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}
+  '@eslint/eslintrc@3.3.0':
+    resolution: {integrity: sha512-yaVPAiNAalnCZedKLdR21GOGILMLKPyqSLWaAjQFvYA2i/ciDi8ArYVr69Anohb6cH2Ukhqti4aFnYyPm8wdwQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/js@9.20.0':
-    resolution: {integrity: sha512-iZA07H9io9Wn836aVTytRaNqh00Sad+EamwOVJT12GTLw1VGMFV/4JaME+JjLtr9fiGaoWgYnS54wrfWsSs4oQ==}
+  '@eslint/js@9.22.0':
+    resolution: {integrity: sha512-vLFajx9o8d1/oL2ZkpMYbkLv8nDB6yaIwFNt7nI4+I80U/z03SxmfOMsLbvWr3p7C+Wnoh//aOu2pQW8cS0HCQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
   '@eslint/object-schema@2.1.6':
     resolution: {integrity: sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@eslint/plugin-kit@0.2.5':
-    resolution: {integrity: sha512-lB05FkqEdUg2AA0xEbUz0SnkXT1LcCTa438W4IWTUh4hdOnVbQyOJ81OrDXsJk/LSiJHubgGEFoR5EHq1NsH1A==}
+  '@eslint/plugin-kit@0.2.7':
+    resolution: {integrity: sha512-JubJ5B2pJ4k4yGxaNLdbjrnk9d/iDz6/q8wOilpIowd6PJPgaxCuHBnBszq7Ce2TyMrywm5r4PnKm6V3iiZF+g==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@faker-js/faker@9.5.0':
-    resolution: {integrity: sha512-3qbjLv+fzuuCg3umxc9/7YjrEXNaKwHgmig949nfyaTx8eL4FAsvFbu+1JcFUj1YAXofhaDn6JdEUBTYuk0Ssw==}
+  '@faker-js/faker@9.6.0':
+    resolution: {integrity: sha512-3vm4by+B5lvsFPSyep3ELWmZfE3kicDtmemVpuwl1yH7tqtnHdsA6hG8fbXedMVdkzgtvzWoRgjSB4Q+FHnZiw==}
     engines: {node: '>=18.0.0', npm: '>=9.0.0'}
 
   '@floating-ui/core@1.6.9':
@@ -722,8 +581,8 @@ packages:
     resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}
     engines: {node: '>=18.18'}
 
-  '@humanwhocodes/retry@0.4.1':
-    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}
+  '@humanwhocodes/retry@0.4.2':
+    resolution: {integrity: sha512-xeO57FpIu4p1Ri3Jq/EXq4ClRm86dVF2z/+kvFnyqVYRavTZmaFaUBbWCOuuTh0o/g7DSsk6kc2vrS4Vl5oPOQ==}
     engines: {node: '>=18.18'}
 
   '@isaacs/cliui@8.0.2':
@@ -1295,98 +1154,98 @@ packages:
   '@react-google-maps/marker-clusterer@2.20.0':
     resolution: {integrity: sha512-tieX9Va5w1yP88vMgfH1pHTacDQ9TgDTjox3tLlisKDXRQWdjw+QeVVghhf5XqqIxXHgPdcGwBvKY6UP+SIvLw==}
 
-  '@rollup/rollup-android-arm-eabi@4.34.8':
-    resolution: {integrity: sha512-q217OSE8DTp8AFHuNHXo0Y86e1wtlfVrXiAlwkIvGRQv9zbc6mE3sjIVfwI8sYUyNxwOg0j/Vm1RKM04JcWLJw==}
+  '@rollup/rollup-android-arm-eabi@4.35.0':
+    resolution: {integrity: sha512-uYQ2WfPaqz5QtVgMxfN6NpLD+no0MYHDBywl7itPYd3K5TjjSghNKmX8ic9S8NU8w81NVhJv/XojcHptRly7qQ==}
     cpu: [arm]
     os: [android]
 
-  '@rollup/rollup-android-arm64@4.34.8':
-    resolution: {integrity: sha512-Gigjz7mNWaOL9wCggvoK3jEIUUbGul656opstjaUSGC3eT0BM7PofdAJaBfPFWWkXNVAXbaQtC99OCg4sJv70Q==}
+  '@rollup/rollup-android-arm64@4.35.0':
+    resolution: {integrity: sha512-FtKddj9XZudurLhdJnBl9fl6BwCJ3ky8riCXjEw3/UIbjmIY58ppWwPEvU3fNu+W7FUsAsB1CdH+7EQE6CXAPA==}
     cpu: [arm64]
     os: [android]
 
-  '@rollup/rollup-darwin-arm64@4.34.8':
-    resolution: {integrity: sha512-02rVdZ5tgdUNRxIUrFdcMBZQoaPMrxtwSb+/hOfBdqkatYHR3lZ2A2EGyHq2sGOd0Owk80oV3snlDASC24He3Q==}
+  '@rollup/rollup-darwin-arm64@4.35.0':
+    resolution: {integrity: sha512-Uk+GjOJR6CY844/q6r5DR/6lkPFOw0hjfOIzVx22THJXMxktXG6CbejseJFznU8vHcEBLpiXKY3/6xc+cBm65Q==}
     cpu: [arm64]
     os: [darwin]
 
-  '@rollup/rollup-darwin-x64@4.34.8':
-    resolution: {integrity: sha512-qIP/elwR/tq/dYRx3lgwK31jkZvMiD6qUtOycLhTzCvrjbZ3LjQnEM9rNhSGpbLXVJYQ3rq39A6Re0h9tU2ynw==}
+  '@rollup/rollup-darwin-x64@4.35.0':
+    resolution: {integrity: sha512-3IrHjfAS6Vkp+5bISNQnPogRAW5GAV1n+bNCrDwXmfMHbPl5EhTmWtfmwlJxFRUCBZ+tZ/OxDyU08aF6NI/N5Q==}
     cpu: [x64]
     os: [darwin]
 
-  '@rollup/rollup-freebsd-arm64@4.34.8':
-    resolution: {integrity: sha512-IQNVXL9iY6NniYbTaOKdrlVP3XIqazBgJOVkddzJlqnCpRi/yAeSOa8PLcECFSQochzqApIOE1GHNu3pCz+BDA==}
+  '@rollup/rollup-freebsd-arm64@4.35.0':
+    resolution: {integrity: sha512-sxjoD/6F9cDLSELuLNnY0fOrM9WA0KrM0vWm57XhrIMf5FGiN8D0l7fn+bpUeBSU7dCgPV2oX4zHAsAXyHFGcQ==}
     cpu: [arm64]
     os: [freebsd]
 
-  '@rollup/rollup-freebsd-x64@4.34.8':
-    resolution: {integrity: sha512-TYXcHghgnCqYFiE3FT5QwXtOZqDj5GmaFNTNt3jNC+vh22dc/ukG2cG+pi75QO4kACohZzidsq7yKTKwq/Jq7Q==}
+  '@rollup/rollup-freebsd-x64@4.35.0':
+    resolution: {integrity: sha512-2mpHCeRuD1u/2kruUiHSsnjWtHjqVbzhBkNVQ1aVD63CcexKVcQGwJ2g5VphOd84GvxfSvnnlEyBtQCE5hxVVw==}
     cpu: [x64]
     os: [freebsd]
 
-  '@rollup/rollup-linux-arm-gnueabihf@4.34.8':
-    resolution: {integrity: sha512-A4iphFGNkWRd+5m3VIGuqHnG3MVnqKe7Al57u9mwgbyZ2/xF9Jio72MaY7xxh+Y87VAHmGQr73qoKL9HPbXj1g==}
+  '@rollup/rollup-linux-arm-gnueabihf@4.35.0':
+    resolution: {integrity: sha512-mrA0v3QMy6ZSvEuLs0dMxcO2LnaCONs1Z73GUDBHWbY8tFFocM6yl7YyMu7rz4zS81NDSqhrUuolyZXGi8TEqg==}
     cpu: [arm]
     os: [linux]
 
-  '@rollup/rollup-linux-arm-musleabihf@4.34.8':
-    resolution: {integrity: sha512-S0lqKLfTm5u+QTxlFiAnb2J/2dgQqRy/XvziPtDd1rKZFXHTyYLoVL58M/XFwDI01AQCDIevGLbQrMAtdyanpA==}
+  '@rollup/rollup-linux-arm-musleabihf@4.35.0':
+    resolution: {integrity: sha512-DnYhhzcvTAKNexIql8pFajr0PiDGrIsBYPRvCKlA5ixSS3uwo/CWNZxB09jhIapEIg945KOzcYEAGGSmTSpk7A==}
     cpu: [arm]
     os: [linux]
 
-  '@rollup/rollup-linux-arm64-gnu@4.34.8':
-    resolution: {integrity: sha512-jpz9YOuPiSkL4G4pqKrus0pn9aYwpImGkosRKwNi+sJSkz+WU3anZe6hi73StLOQdfXYXC7hUfsQlTnjMd3s1A==}
+  '@rollup/rollup-linux-arm64-gnu@4.35.0':
+    resolution: {integrity: sha512-uagpnH2M2g2b5iLsCTZ35CL1FgyuzzJQ8L9VtlJ+FckBXroTwNOaD0z0/UF+k5K3aNQjbm8LIVpxykUOQt1m/A==}
     cpu: [arm64]
     os: [linux]
 
-  '@rollup/rollup-linux-arm64-musl@4.34.8':
-    resolution: {integrity: sha512-KdSfaROOUJXgTVxJNAZ3KwkRc5nggDk+06P6lgi1HLv1hskgvxHUKZ4xtwHkVYJ1Rep4GNo+uEfycCRRxht7+Q==}
+  '@rollup/rollup-linux-arm64-musl@4.35.0':
+    resolution: {integrity: sha512-XQxVOCd6VJeHQA/7YcqyV0/88N6ysSVzRjJ9I9UA/xXpEsjvAgDTgH3wQYz5bmr7SPtVK2TsP2fQ2N9L4ukoUg==}
     cpu: [arm64]
     os: [linux]
 
-  '@rollup/rollup-linux-loongarch64-gnu@4.34.8':
-    resolution: {integrity: sha512-NyF4gcxwkMFRjgXBM6g2lkT58OWztZvw5KkV2K0qqSnUEqCVcqdh2jN4gQrTn/YUpAcNKyFHfoOZEer9nwo6uQ==}
+  '@rollup/rollup-linux-loongarch64-gnu@4.35.0':
+    resolution: {integrity: sha512-5pMT5PzfgwcXEwOaSrqVsz/LvjDZt+vQ8RT/70yhPU06PTuq8WaHhfT1LW+cdD7mW6i/J5/XIkX/1tCAkh1W6g==}
     cpu: [loong64]
     os: [linux]
 
-  '@rollup/rollup-linux-powerpc64le-gnu@4.34.8':
-    resolution: {integrity: sha512-LMJc999GkhGvktHU85zNTDImZVUCJ1z/MbAJTnviiWmmjyckP5aQsHtcujMjpNdMZPT2rQEDBlJfubhs3jsMfw==}
+  '@rollup/rollup-linux-powerpc64le-gnu@4.35.0':
+    resolution: {integrity: sha512-c+zkcvbhbXF98f4CtEIP1EBA/lCic5xB0lToneZYvMeKu5Kamq3O8gqrxiYYLzlZH6E3Aq+TSW86E4ay8iD8EA==}
     cpu: [ppc64]
     os: [linux]
 
-  '@rollup/rollup-linux-riscv64-gnu@4.34.8':
-    resolution: {integrity: sha512-xAQCAHPj8nJq1PI3z8CIZzXuXCstquz7cIOL73HHdXiRcKk8Ywwqtx2wrIy23EcTn4aZ2fLJNBB8d0tQENPCmw==}
+  '@rollup/rollup-linux-riscv64-gnu@4.35.0':
+    resolution: {integrity: sha512-s91fuAHdOwH/Tad2tzTtPX7UZyytHIRR6V4+2IGlV0Cej5rkG0R61SX4l4y9sh0JBibMiploZx3oHKPnQBKe4g==}
     cpu: [riscv64]
     os: [linux]
 
-  '@rollup/rollup-linux-s390x-gnu@4.34.8':
-    resolution: {integrity: sha512-DdePVk1NDEuc3fOe3dPPTb+rjMtuFw89gw6gVWxQFAuEqqSdDKnrwzZHrUYdac7A7dXl9Q2Vflxpme15gUWQFA==}
+  '@rollup/rollup-linux-s390x-gnu@4.35.0':
+    resolution: {integrity: sha512-hQRkPQPLYJZYGP+Hj4fR9dDBMIM7zrzJDWFEMPdTnTy95Ljnv0/4w/ixFw3pTBMEuuEuoqtBINYND4M7ujcuQw==}
     cpu: [s390x]
     os: [linux]
 
-  '@rollup/rollup-linux-x64-gnu@4.34.8':
-    resolution: {integrity: sha512-8y7ED8gjxITUltTUEJLQdgpbPh1sUQ0kMTmufRF/Ns5tI9TNMNlhWtmPKKHCU0SilX+3MJkZ0zERYYGIVBYHIA==}
+  '@rollup/rollup-linux-x64-gnu@4.35.0':
+    resolution: {integrity: sha512-Pim1T8rXOri+0HmV4CdKSGrqcBWX0d1HoPnQ0uw0bdp1aP5SdQVNBy8LjYncvnLgu3fnnCt17xjWGd4cqh8/hA==}
     cpu: [x64]
     os: [linux]
 
-  '@rollup/rollup-linux-x64-musl@4.34.8':
-    resolution: {integrity: sha512-SCXcP0ZpGFIe7Ge+McxY5zKxiEI5ra+GT3QRxL0pMMtxPfpyLAKleZODi1zdRHkz5/BhueUrYtYVgubqe9JBNQ==}
+  '@rollup/rollup-linux-x64-musl@4.35.0':
+    resolution: {integrity: sha512-QysqXzYiDvQWfUiTm8XmJNO2zm9yC9P/2Gkrwg2dH9cxotQzunBHYr6jk4SujCTqnfGxduOmQcI7c2ryuW8XVg==}
     cpu: [x64]
     os: [linux]
 
-  '@rollup/rollup-win32-arm64-msvc@4.34.8':
-    resolution: {integrity: sha512-YHYsgzZgFJzTRbth4h7Or0m5O74Yda+hLin0irAIobkLQFRQd1qWmnoVfwmKm9TXIZVAD0nZ+GEb2ICicLyCnQ==}
+  '@rollup/rollup-win32-arm64-msvc@4.35.0':
+    resolution: {integrity: sha512-OUOlGqPkVJCdJETKOCEf1mw848ZyJ5w50/rZ/3IBQVdLfR5jk/6Sr5m3iO2tdPgwo0x7VcncYuOvMhBWZq8ayg==}
     cpu: [arm64]
     os: [win32]
 
-  '@rollup/rollup-win32-ia32-msvc@4.34.8':
-    resolution: {integrity: sha512-r3NRQrXkHr4uWy5TOjTpTYojR9XmF0j/RYgKCef+Ag46FWUTltm5ziticv8LdNsDMehjJ543x/+TJAek/xBA2w==}
+  '@rollup/rollup-win32-ia32-msvc@4.35.0':
+    resolution: {integrity: sha512-2/lsgejMrtwQe44glq7AFFHLfJBPafpsTa6JvP2NGef/ifOa4KBoglVf7AKN7EV9o32evBPRqfg96fEHzWo5kw==}
     cpu: [ia32]
     os: [win32]
 
-  '@rollup/rollup-win32-x64-msvc@4.34.8':
-    resolution: {integrity: sha512-U0FaE5O1BCpZSeE6gBl3c5ObhePQSfk9vDRToMmTkbhCOgW4jqvtS5LGyQ76L1fH8sM0keRp4uDTsbjiUyjk0g==}
+  '@rollup/rollup-win32-x64-msvc@4.35.0':
+    resolution: {integrity: sha512-PIQeY5XDkrOysbQblSW7v3l1MDZzkTEzAfTPkj5VAu3FW8fS4ynyLg2sINp0fp3SjZ8xkRYpLqoKcYqAkhU1dw==}
     cpu: [x64]
     os: [win32]
 
@@ -1402,68 +1261,68 @@ packages:
     engines: {node: '>=8.10'}
     hasBin: true
 
-  '@swc/core-darwin-arm64@1.10.17':
-    resolution: {integrity: sha512-LSQhSjESleTc0c45BnVKRacp9Nl4zhJMlV/nmhpFCOv/CqHI5YBDX5c9bPk9jTRNHIf0QH92uTtswt8yN++TCQ==}
+  '@swc/core-darwin-arm64@1.11.9':
+    resolution: {integrity: sha512-moqbPCWG6SHiDMENTDYsEQJ0bFustbLtrdbDbdjnijSyhCyIcm9zKowmovE6MF8JBdOwmLxbuN1Yarq6CrPNlw==}
     engines: {node: '>=10'}
     cpu: [arm64]
     os: [darwin]
 
-  '@swc/core-darwin-x64@1.10.17':
-    resolution: {integrity: sha512-TTaZFS4jLuA3y6+D2HYv4yVGhmjkOGG6KyAwBiJEeoUaazX5MYOyQwaZBPhRGtzHZFrzi4t4jNix4kAkMajPkQ==}
+  '@swc/core-darwin-x64@1.11.9':
+    resolution: {integrity: sha512-/lgMo5l9q6y3jjLM3v30y6SBvuuyLsM/K94hv3hPvDf91N+YlZLw4D7KY0Qknfhj6WytoAcjOIDU6xwBRPyUWg==}
     engines: {node: '>=10'}
     cpu: [x64]
     os: [darwin]
 
-  '@swc/core-linux-arm-gnueabihf@1.10.17':
-    resolution: {integrity: sha512-8P+ESJyGnVdJi0nUcQfxkbTiB/7hnu6N3U72KbvHFBcuroherwzW4DId1XD4RTU2Cjsh1dztZoCcOLY8W9RW1Q==}
+  '@swc/core-linux-arm-gnueabihf@1.11.9':
+    resolution: {integrity: sha512-7bL6z/63If11IpBElQRozIGRadiy6rt3DoUyfGuFIFQKxtnZxzHuLxm1/wrCAGN9iAZxrpHxHP0VbPQvr6Mcjg==}
     engines: {node: '>=10'}
     cpu: [arm]
     os: [linux]
 
-  '@swc/core-linux-arm64-gnu@1.10.17':
-    resolution: {integrity: sha512-zT21jDQCe+IslzOtw+BD/9ElO/H4qU4fkkOeVQ68PcxuqYS2gwyDxWqa9IGwpzWexYM+Lzi1rAbl/1BM6nGW8Q==}
+  '@swc/core-linux-arm64-gnu@1.11.9':
+    resolution: {integrity: sha512-9ArpxjrNbyFTr7gG+toiGbbK2mfS+X97GIruBKPsD8CJH/yJlMknBsX3lfy9h/L119zYVnFBmZDnwsv5yW8/cw==}
     engines: {node: '>=10'}
     cpu: [arm64]
     os: [linux]
 
-  '@swc/core-linux-arm64-musl@1.10.17':
-    resolution: {integrity: sha512-C2jaW1X+93HscVcesKYgSuZ9GaKqKcQvwvD+q+4JZkaKF4Zopt/aguc6Tmn/nuavRk0WV8yVCpHXoP7lz/2akA==}
+  '@swc/core-linux-arm64-musl@1.11.9':
+    resolution: {integrity: sha512-UOnunJWu7T7oNkBr4DLMwXXbldjiwi+JxmqBKrD2+BNiHGu6P5VpqDHiTGuWuLrda0TcTmeNE6gzlIVOVBo/vw==}
     engines: {node: '>=10'}
     cpu: [arm64]
     os: [linux]
 
-  '@swc/core-linux-x64-gnu@1.10.17':
-    resolution: {integrity: sha512-vfyxqV5gddurG2NVJLemR/68s7GTe0QruozrZiDpNqr9V4VX9t3PadDKMDAvQz6jKrtiqMtshNXQTNRKAKlzFw==}
+  '@swc/core-linux-x64-gnu@1.11.9':
+    resolution: {integrity: sha512-HAqmCkNoNhRusBqSokyylXKsLJ/dr3dnMgBERdUrCIh47L8CKR2qEFUP6FI05sHVB85403ctWnfzBYblcarpqg==}
     engines: {node: '>=10'}
     cpu: [x64]
     os: [linux]
 
-  '@swc/core-linux-x64-musl@1.10.17':
-    resolution: {integrity: sha512-8M+nI5MHZGQUnXyfTLsGw85a3oQRXMsFjgMZuOEJO9ZGBIEnYVuWOxENfcP6MmlJmTOW+cJxHnMGhKY+fjcntw==}
+  '@swc/core-linux-x64-musl@1.11.9':
+    resolution: {integrity: sha512-THwUT2g2qSWUxhi3NGRCEdmh/q7WKl3d5jcN9mz/4jum76Tb46LB9p3oOVPBIcfnFQ9OaddExjCwLoUl0ju2pA==}
     engines: {node: '>=10'}
     cpu: [x64]
     os: [linux]
 
-  '@swc/core-win32-arm64-msvc@1.10.17':
-    resolution: {integrity: sha512-iUeIBFM6c/NwsreLFSAH395Dahc+54mSi0Kq//IrZ2Y16VlqCV7VHdOIMrdAyDoBFUvh0jKuLJPWt+jlKGtSLg==}
+  '@swc/core-win32-arm64-msvc@1.11.9':
+    resolution: {integrity: sha512-r4SGD9lR0MM9HSIsQ72BEL3Za3XsuVj+govuXQTlK0mty5gih4L+Qgfnb9PmhjFakK3F63gZyyEr2y8Fj0mN6Q==}
     engines: {node: '>=10'}
     cpu: [arm64]
     os: [win32]
 
-  '@swc/core-win32-ia32-msvc@1.10.17':
-    resolution: {integrity: sha512-lPXYFvkfYIN8HdNmG6dCnQqgA+rOSTgeAjIhGsYCEyLsYkkhF2FQw34OF6PnWawQ6hOdOE9v6Bw3T4enj3Lb6w==}
+  '@swc/core-win32-ia32-msvc@1.11.9':
+    resolution: {integrity: sha512-jrEh6MDSnhwfpjRlSWd2Bk8pS5EjreQD1YbkNcnXviQf3+H0wSPmeVSktZyoIdkxAuc2suFx8mj7Yja2UXAgUg==}
     engines: {node: '>=10'}
     cpu: [ia32]
     os: [win32]
 
-  '@swc/core-win32-x64-msvc@1.10.17':
-    resolution: {integrity: sha512-KrnkFEWpBmxSe8LixhAZXeeUwTNDVukrPeXJ1PiG+pmb5nI989I9J9IQVIgBv+JXXaK+rmiWjlcIkphaDJJEAA==}
+  '@swc/core-win32-x64-msvc@1.11.9':
+    resolution: {integrity: sha512-oAwuhzr+1Bmb4As2wa3k57/WPJeyVEYRQelwEMYjPgi/h6TH+Y69jQAgKOd+ec1Yl8L5nkWTZMVA/dKDac1bAQ==}
     engines: {node: '>=10'}
     cpu: [x64]
     os: [win32]
 
-  '@swc/core@1.10.17':
-    resolution: {integrity: sha512-FXZx7jHpiwz4fTuuueWwsvN7VFLSoeS3mcxCTPUNOHs/K2ecaBO+slh5T5Xvt/KGuD2I/2T8G6Zts0maPkt2lQ==}
+  '@swc/core@1.11.9':
+    resolution: {integrity: sha512-4UQ66FwTkFDr+UzYzRNKQyHMScOrc4zJbTJHyK6dP1yVMrxi5sl0FTzNKiqoYvRZ7j8TAYgtYvvuPSW/XXvp5g==}
     engines: {node: '>=10'}
     peerDependencies:
       '@swc/helpers': '*'
@@ -1474,45 +1333,53 @@ packages:
   '@swc/counter@0.1.3':
     resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}
 
-  '@swc/types@0.1.17':
-    resolution: {integrity: sha512-V5gRru+aD8YVyCOMAjMpWR1Ui577DD5KSJsHP8RAxopAH22jFz6GZd/qxqjO6MJHQhcsjvjOFXyDhyLQUnMveQ==}
+  '@swc/types@0.1.19':
+    resolution: {integrity: sha512-WkAZaAfj44kh/UFdAQcrMP1I0nwRqpt27u+08LMBYMqmQfwwMofYoMh/48NGkMMRfC4ynpfwRbJuu8ErfNloeA==}
 
-  '@tabler/icons-react@3.30.0':
-    resolution: {integrity: sha512-9KZ9D1UNAyjlLkkYp2HBPHdf6lAJ2aelDqh8YYAnnmLF3xwprWKxxW8+zw5jlI0IwdfN4XFFuzqePkaw+DpIOg==}
+  '@tabler/icons-react@3.31.0':
+    resolution: {integrity: sha512-2rrCM5y/VnaVKnORpDdAua9SEGuJKVqPtWxeQ/vUVsgaUx30LDgBZph7/lterXxDY1IKR6NO//HDhWiifXTi3w==}
     peerDependencies:
       react: '>= 16'
 
-  '@tabler/icons@3.30.0':
-    resolution: {integrity: sha512-c8OKLM48l00u9TFbh2qhSODMONIzML8ajtCyq95rW8vzkWcBrKRPM61tdkThz2j4kd5u17srPGIjqdeRUZdfdw==}
+  '@tabler/icons@3.31.0':
+    resolution: {integrity: sha512-dblAdeKY3+GA1U+Q9eziZ0ooVlZMHsE8dqP0RkwvRtEsAULoKOYaCUOcJ4oW1DjWegdxk++UAt2SlQVnmeHv+g==}
 
-  '@tanstack/eslint-plugin-query@5.66.1':
-    resolution: {integrity: sha512-pYMVTGgJ7yPk9Rm6UWEmbY6TX0EmMmxJqYkthgeDCwEznToy2m+W928nUODFirtZBZlhBsqHy33LO0kyTlgf0w==}
+  '@tanstack/eslint-plugin-query@5.68.0':
+    resolution: {integrity: sha512-w/+y5LILV1GTWBB2R/lKfUzgocKXU1B7O6jipLUJhmxCKPmJFy5zpfR1Vx7c6yCEsQoKcTbhuR/tIy+1sIGaiA==}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
 
-  '@tanstack/history@1.99.13':
-    resolution: {integrity: sha512-JMd7USmnp8zV8BRGIjALqzPxazvKtQ7PGXQC7n39HpbqdsmfV2ePCzieO84IvN+mwsTrXErpbjI4BfKCa+ZNCg==}
+  '@tanstack/history@1.114.22':
+    resolution: {integrity: sha512-CNwKraj/Xa8H7DUyzrFBQC3wL96JzIxT4i9CW0hxqFNNmLDyUcMJr8264iqqfxC0u1lFSG96URad08T2Qhadpw==}
     engines: {node: '>=12'}
 
-  '@tanstack/query-core@5.66.4':
-    resolution: {integrity: sha512-skM/gzNX4shPkqmdTCSoHtJAPMTtmIJNS0hE+xwTTUVYwezArCT34NMermABmBVUg5Ls5aiUXEDXfqwR1oVkcA==}
+  '@tanstack/query-core@5.68.0':
+    resolution: {integrity: sha512-r8rFYYo8/sY/LNaOqX84h12w7EQev4abFXDWy4UoDVUJzJ5d9Fbmb8ayTi7ScG+V0ap44SF3vNs/45mkzDGyGw==}
 
-  '@tanstack/query-devtools@5.65.0':
-    resolution: {integrity: sha512-g5y7zc07U9D3esMdqUfTEVu9kMHoIaVBsD0+M3LPdAdD710RpTcLiNvJY1JkYXqkq9+NV+CQoemVNpQPBXVsJg==}
+  '@tanstack/query-devtools@5.67.2':
+    resolution: {integrity: sha512-O4QXFFd7xqp6EX7sdvc9tsVO8nm4lpWBqwpgjpVLW5g7IeOY6VnS/xvs/YzbRhBVkKTMaJMOUGU7NhSX+YGoNg==}
 
-  '@tanstack/react-query-devtools@5.66.6':
-    resolution: {integrity: sha512-HKeLTxxeURdCHiPCfFIfK2Gh4GpGT6CtD+zg5s7dtui7ykFfPlv4B3weYVRIsFpXWItFZUpaTDUSb2yUM/k9Ww==}
+  '@tanstack/react-query-devtools@5.68.0':
+    resolution: {integrity: sha512-h9ArHkfa7SD5eGnJ9h+9M5uYWBdeVeY+WalrtGLCAtJJvHx6/RrtbbzxeoEQbPyx3f0kPcwJ58DGQ+7CBXelpg==}
     peerDependencies:
-      '@tanstack/react-query': ^5.66.6
+      '@tanstack/react-query': ^5.68.0
       react: ^18 || ^19
 
-  '@tanstack/react-query@5.66.6':
-    resolution: {integrity: sha512-Xepc53h+D5sqoO/MZiSH2ROVLTDfRwR+3E4C2oS71/lo9u2mwbneZIEyIGXEHvmfyQpqtbf9voghD+QwLDLzcA==}
+  '@tanstack/react-query@5.68.0':
+    resolution: {integrity: sha512-mMOdGDKlwTP/WV72QqSNf4PAMeoBp/DqBHQ222wBfb51Looi8QUqnCnb9O98ZgvNISmy6fzxRGBJdZ+9IBvX2Q==}
     peerDependencies:
       react: ^18 || ^19
 
-  '@tanstack/react-router@1.105.0':
-    resolution: {integrity: sha512-k4Umuy7rna/hhfHkmbq9dCmj9Hp8D0V6dPNCrCXceJb0gQWGxl1KWLXFbw8Ywe/sNyzIzPrMwrMit++MXHo8iw==}
+  '@tanstack/react-router-devtools@1.114.23':
+    resolution: {integrity: sha512-eOTlXeLlT5PfSrOrDEljTz8F7Sl3YjjI+yTGn5ern0FrFlc3GlBxJqFaKC19mT9H4ZkwETnSqDHrLZKV06ykRA==}
+    engines: {node: '>=12'}
+    peerDependencies:
+      '@tanstack/react-router': ^1.114.23
+      react: '>=18.0.0 || >=19.0.0'
+      react-dom: '>=18.0.0 || >=19.0.0'
+
+  '@tanstack/react-router@1.114.23':
+    resolution: {integrity: sha512-L9TS8HE5nvXzCyjwlwfXwnC7pfiofbDLCSAGN7Me2jUbxHPyQpAtxRYqtByANaFVclOJgYBmZkx1m6/GVk9oiA==}
     engines: {node: '>=12'}
     peerDependencies:
       react: '>=18.0.0 || >=19.0.0'
@@ -1531,15 +1398,27 @@ packages:
       react: '>=16.8'
       react-dom: '>=16.8'
 
-  '@tanstack/router-core@1.104.1':
-    resolution: {integrity: sha512-8nP/V5paP+S/17rlw+B2F12R2bB9PixU/+qnD2QdCjK1ajnG4qA0pVN3VSTQe2oCKND6GPZpm2ikmQWumwss9Q==}
+  '@tanstack/router-core@1.114.23':
+    resolution: {integrity: sha512-aJkqAtVyRbdNBuoAsiy5Jmc9MYa2Gt9r1s/xlYBDfSEWoJzhMmWVoKfgBI6Ggeu3dwe6uCr/gkBRmpRkgWjg1w==}
     engines: {node: '>=12'}
 
-  '@tanstack/router-devtools@1.105.0':
-    resolution: {integrity: sha512-X583hyUyhL30g5ax1J/lbgb3DYpgsiSUv0ERaF5Gg0PoxPYJSybmw79xwFbrTBDxXCXxfg4AFCAEcmkAQemPWA==}
+  '@tanstack/router-devtools-core@1.114.23':
+    resolution: {integrity: sha512-PP2JFokatFdL3RANKibZPWK1L1vy4LM2chEvwyJYVUhAKg+gWPIB4aE5FnhkI/sn7N/8dzt83Xbruj+NPEPfmg==}
     engines: {node: '>=12'}
     peerDependencies:
-      '@tanstack/react-router': ^1.105.0
+      '@tanstack/router-core': ^1.114.23
+      csstype: ^3.0.10
+      solid-js: '>=1.9.5'
+      tiny-invariant: ^1.3.3
+    peerDependenciesMeta:
+      csstype:
+        optional: true
+
+  '@tanstack/router-devtools@1.114.23':
+    resolution: {integrity: sha512-i7F7VkA73fVvaZuPc/hsAiTlkDu/PF11Y3ERDNGL8G9NUaDEKeW8rvK0V+KTNNg8Tnm0FOHH4xohquzBXPkcuA==}
+    engines: {node: '>=12'}
+    peerDependencies:
+      '@tanstack/react-router': ^1.114.23
       csstype: ^3.0.10
       react: '>=18.0.0 || >=19.0.0'
       react-dom: '>=18.0.0 || >=19.0.0'
@@ -1547,22 +1426,23 @@ packages:
       csstype:
         optional: true
 
-  '@tanstack/router-generator@1.105.0':
-    resolution: {integrity: sha512-P5e4S7XcaECWKDdR4Zs/FpY4Z127zGv1FcmKEzsFRSGJZm7lHshWayYJIjwkeJ+Ier2IkVN+VRaFWC5GKv0jIg==}
+  '@tanstack/router-generator@1.114.23':
+    resolution: {integrity: sha512-+6YwCXXL4H6CwdWLIrO8Bmy9HZIB8p9yJGcIBGXefN3D0vOUOi7EJa2+MQgQCQgjdygP4zuutqXD/5qxEZQQNw==}
     engines: {node: '>=12'}
     peerDependencies:
-      '@tanstack/react-router': ^1.105.0
+      '@tanstack/react-router': ^1.114.23
     peerDependenciesMeta:
       '@tanstack/react-router':
         optional: true
 
-  '@tanstack/router-plugin@1.105.0':
-    resolution: {integrity: sha512-iGwKZIyl8+os4PA9v57BlTtKVnQ5mCvxYT4p5TR/Q8zW1KBs4fC5F7EhL1BgH8fY12IL4ByuuJ+porzp+mfmJQ==}
+  '@tanstack/router-plugin@1.114.23':
+    resolution: {integrity: sha512-4D5558eQ4So2HXnVrN5inZs4tU5nlv75VH6u95NZvVSGc+zUBryzBg7ElkhzMh+UPQoJ0RTf4NxNcKG3vw2+6w==}
     engines: {node: '>=12'}
     peerDependencies:
       '@rsbuild/core': '>=1.0.2'
-      '@tanstack/react-router': ^1.105.0
+      '@tanstack/react-router': ^1.114.23
       vite: '>=5.0.0 || >=6.0.0'
+      vite-plugin-solid: ^2.11.2
       webpack: '>=5.92.0'
     peerDependenciesMeta:
       '@rsbuild/core':
@@ -1571,11 +1451,13 @@ packages:
         optional: true
       vite:
         optional: true
+      vite-plugin-solid:
+        optional: true
       webpack:
         optional: true
 
-  '@tanstack/router-utils@1.102.2':
-    resolution: {integrity: sha512-Uwl2nbrxhCzviaHHBLNPhSC/OMpZLdOTxTJndUSsXTzWUP4IoQcVmngaIsxi9iriE3ArC1VXuanUAkfGmimNOQ==}
+  '@tanstack/router-utils@1.114.12':
+    resolution: {integrity: sha512-W4tltvM9FQuDEJejz/JJD3q/pVHBXBb8VmA77pZlj4IBW97RnUNy8CUwZUgSYcb9OReoO4i/VjjQCUq9ZdiDmg==}
     engines: {node: '>=12'}
 
   '@tanstack/store@0.7.0':
@@ -1585,8 +1467,8 @@ packages:
     resolution: {integrity: sha512-uvXk/U4cBiFMxt+p9/G7yUWI/UbHYbyghLCjlpWZ3mLeIZiUBSKcUnw9UnKkdRz7Z/N4UBuFLWQdJCjUe7HjvA==}
     engines: {node: '>=12'}
 
-  '@tanstack/virtual-file-routes@1.99.0':
-    resolution: {integrity: sha512-XvX8bfdo4CYiCW+ItVdBfCorh3PwQFqYqd7ll+XKWiWOJpqUGIG7VlziVavARZpUySiY2VBlHadiUYS7jhgjRg==}
+  '@tanstack/virtual-file-routes@1.114.12':
+    resolution: {integrity: sha512-aR13V1kSE/kUkP4a8snmqvj82OUlR5Q/rzxICmObLCsERGfzikUc4wquOy1d/RzJgsLb8o+FiOjSWynt4T7Jhg==}
     engines: {node: '>=12'}
 
   '@trivago/prettier-plugin-sort-imports@4.3.0':
@@ -1649,8 +1531,8 @@ packages:
   '@types/json-schema@7.0.15':
     resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
 
-  '@types/node@22.13.4':
-    resolution: {integrity: sha512-ywP2X0DYtX3y08eFVx5fNIw7/uIv8hYUKgXoK8oayJlLnKcRfEYCxWMVE1XagUdVtCJlZT1AU4LXEABW+L1Peg==}
+  '@types/node@22.13.10':
+    resolution: {integrity: sha512-I6LPUvlRH+O6VRUqYOcMudhaIdUVWfsjnZavnsraHvpBwaEyMN29ry+0UVJhImYL16xsscu0aske3yA+uPOWfw==}
 
   '@types/react-dom@19.0.4':
     resolution: {integrity: sha512-4fSQ8vWFkg+TGhePfUzVmat3eC14TXYSsiiDSLI0dVLsrm9gZFABjPy/Qu6TKgl1tq1Bu1yDsuQgY3A3DOjCcg==}
@@ -1660,51 +1542,51 @@ packages:
   '@types/react@19.0.10':
     resolution: {integrity: sha512-JuRQ9KXLEjaUNjTWpzuR231Z2WpIwczOkBEIvbHNCzQefFIT0L8IqE6NV6ULLyC1SI/i234JnDoMkfg+RjQj2g==}
 
-  '@typescript-eslint/eslint-plugin@8.24.1':
-    resolution: {integrity: sha512-ll1StnKtBigWIGqvYDVuDmXJHVH4zLVot1yQ4fJtLpL7qacwkxJc1T0bptqw+miBQ/QfUbhl1TcQ4accW5KUyA==}
+  '@typescript-eslint/eslint-plugin@8.26.1':
+    resolution: {integrity: sha512-2X3mwqsj9Bd3Ciz508ZUtoQQYpOhU/kWoUqIf49H8Z0+Vbh6UF/y0OEYp0Q0axOGzaBGs7QxRwq0knSQ8khQNA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       '@typescript-eslint/parser': ^8.0.0 || ^8.0.0-alpha.0
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.8.0'
+      typescript: '>=4.8.4 <5.9.0'
 
-  '@typescript-eslint/parser@8.24.1':
-    resolution: {integrity: sha512-Tqoa05bu+t5s8CTZFaGpCH2ub3QeT9YDkXbPd3uQ4SfsLoh1/vv2GEYAioPoxCWJJNsenXlC88tRjwoHNts1oQ==}
+  '@typescript-eslint/parser@8.26.1':
+    resolution: {integrity: sha512-w6HZUV4NWxqd8BdeFf81t07d7/YV9s7TCWrQQbG5uhuvGUAW+fq1usZ1Hmz9UPNLniFnD8GLSsDpjP0hm1S4lQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.8.0'
+      typescript: '>=4.8.4 <5.9.0'
 
-  '@typescript-eslint/scope-manager@8.24.1':
-    resolution: {integrity: sha512-OdQr6BNBzwRjNEXMQyaGyZzgg7wzjYKfX2ZBV3E04hUCBDv3GQCHiz9RpqdUIiVrMgJGkXm3tcEh4vFSHreS2Q==}
+  '@typescript-eslint/scope-manager@8.26.1':
+    resolution: {integrity: sha512-6EIvbE5cNER8sqBu6V7+KeMZIC1664d2Yjt+B9EWUXrsyWpxx4lEZrmvxgSKRC6gX+efDL/UY9OpPZ267io3mg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@typescript-eslint/type-utils@8.24.1':
-    resolution: {integrity: sha512-/Do9fmNgCsQ+K4rCz0STI7lYB4phTtEXqqCAs3gZW0pnK7lWNkvWd5iW545GSmApm4AzmQXmSqXPO565B4WVrw==}
+  '@typescript-eslint/type-utils@8.26.1':
+    resolution: {integrity: sha512-Kcj/TagJLwoY/5w9JGEFV0dclQdyqw9+VMndxOJKtoFSjfZhLXhYjzsQEeyza03rwHx2vFEGvrJWJBXKleRvZg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.8.0'
+      typescript: '>=4.8.4 <5.9.0'
 
-  '@typescript-eslint/types@8.24.1':
-    resolution: {integrity: sha512-9kqJ+2DkUXiuhoiYIUvIYjGcwle8pcPpdlfkemGvTObzgmYfJ5d0Qm6jwb4NBXP9W1I5tss0VIAnWFumz3mC5A==}
+  '@typescript-eslint/types@8.26.1':
+    resolution: {integrity: sha512-n4THUQW27VmQMx+3P+B0Yptl7ydfceUj4ON/AQILAASwgYdZ/2dhfymRMh5egRUrvK5lSmaOm77Ry+lmXPOgBQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@typescript-eslint/typescript-estree@8.24.1':
-    resolution: {integrity: sha512-UPyy4MJ/0RE648DSKQe9g0VDSehPINiejjA6ElqnFaFIhI6ZEiZAkUI0D5MCk0bQcTf/LVqZStvQ6K4lPn/BRg==}
+  '@typescript-eslint/typescript-estree@8.26.1':
+    resolution: {integrity: sha512-yUwPpUHDgdrv1QJ7YQal3cMVBGWfnuCdKbXw1yyjArax3353rEJP1ZA+4F8nOlQ3RfS2hUN/wze3nlY+ZOhvoA==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
-      typescript: '>=4.8.4 <5.8.0'
+      typescript: '>=4.8.4 <5.9.0'
 
-  '@typescript-eslint/utils@8.24.1':
-    resolution: {integrity: sha512-OOcg3PMMQx9EXspId5iktsI3eMaXVwlhC8BvNnX6B5w9a4dVgpkQZuU8Hy67TolKcl+iFWq0XX+jbDGN4xWxjQ==}
+  '@typescript-eslint/utils@8.26.1':
+    resolution: {integrity: sha512-V4Urxa/XtSUroUrnI7q6yUTD3hDtfJ2jzVfeT3VK0ciizfK2q/zGC0iDh1lFMUZR8cImRrep6/q0xd/1ZGPQpg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.8.0'
+      typescript: '>=4.8.4 <5.9.0'
 
-  '@typescript-eslint/visitor-keys@8.24.1':
-    resolution: {integrity: sha512-EwVHlp5l+2vp8CoqJm9KikPZgi3gbdZAtabKT9KPShGeOcJhsv4Zdo3oc8T8I0uKEmYoU4ItyxbptjF08enaxg==}
+  '@typescript-eslint/visitor-keys@8.26.1':
+    resolution: {integrity: sha512-AjOC3zfnxd6S4Eiy3jwktJPclqhFHNyd8L6Gycf9WUPoKZpgM5PjkxY1X7uSy61xVpiJDhhk7XT2NVsN3ALTWg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
   '@vitejs/plugin-react-swc@3.8.0':
@@ -1717,8 +1599,8 @@ packages:
     peerDependencies:
       acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
 
-  acorn@8.14.0:
-    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}
+  acorn@8.14.1:
+    resolution: {integrity: sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==}
     engines: {node: '>=0.4.0'}
     hasBin: true
 
@@ -1745,8 +1627,8 @@ packages:
     resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
     engines: {node: '>=12'}
 
-  ansis@3.15.0:
-    resolution: {integrity: sha512-zIcWDJ+Kwqxfdnogx66Gxzr0kVmCcRAdat9nlY2IHsshqTN4fBH6tMeRMPA/2w0rpBayIJvjQAaa2/4RDrNqwg==}
+  ansis@3.17.0:
+    resolution: {integrity: sha512-0qWUglt9JEqLFr3w1I1pbrChn1grhaiAR2ocX1PP/flRmxgtwTzPFFFnfIlD6aMOLQZgSuCRlidD70lvx8yhzg==}
     engines: {node: '>=14'}
 
   any-promise@1.3.0:
@@ -1773,15 +1655,15 @@ packages:
   asynckit@0.4.0:
     resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}
 
-  autoprefixer@10.4.20:
-    resolution: {integrity: sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==}
+  autoprefixer@10.4.21:
+    resolution: {integrity: sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==}
     engines: {node: ^10 || ^12 || >=14}
     hasBin: true
     peerDependencies:
       postcss: ^8.1.0
 
-  axios@1.7.9:
-    resolution: {integrity: sha512-LhLcE7Hbiryz8oMDdDptSrWowmB4Bl6RCt6sIJKpRB4XtVf0iEgewX3au/pJqm+Py1kCASkb/FFKjxQaLtxJvw==}
+  axios@1.8.3:
+    resolution: {integrity: sha512-iP4DebzoNlP/YN2dpwCgb8zoCmhtkajzS48JvwmkSkXvPI3DHc7m+XYL5tGnSlJtR6nImXZmdCuN5aP8dh1d8A==}
 
   babel-dead-code-elimination@1.0.9:
     resolution: {integrity: sha512-JLIhax/xullfInZjtu13UJjaLHDeTzt3vOeomaSUdO/nAMEL/pWC/laKrSvWylXMnVWyL5bpmG9njqBZlUQOdg==}
@@ -1789,11 +1671,11 @@ packages:
   balanced-match@1.0.2:
     resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}
 
-  better-auth@1.1.18:
-    resolution: {integrity: sha512-cU/u7/qlSiR/OO1O53gh/bHvxyB53DE+5ZOw9DtpDI8IyIQUBqDnQ06MOwNtj8JwjXHcMFNSNd5u/W8DED0bJw==}
+  better-auth@1.2.4:
+    resolution: {integrity: sha512-/ZK2jbUjm8JwdeCLFrUWUBmexPyI9PkaLVXWLWtN60sMDHTY8B5G72wcHglo1QMFBaw4G0qFkP5ayl9k6XfDaA==}
 
-  better-call@0.3.3:
-    resolution: {integrity: sha512-N4lDVm0NGmFfDJ0XMQ4O83Zm/3dPlvIQdxvwvgSLSkjFX5PM4GUYSVAuxNzXN27QZMHDkrJTWUqxBrm4tPC3eA==}
+  better-call@1.0.4:
+    resolution: {integrity: sha512-NdAihYdkS0IOz1mtz8mw1gWacCxR9r921U8YqB+VB6++rt8edMG13vVL16Y4TBL4XkjMK/DUewEsOOFkw9LJYQ==}
 
   binary-extensions@2.3.0:
     resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
@@ -1826,8 +1708,8 @@ packages:
     resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
     engines: {node: '>= 6'}
 
-  caniuse-lite@1.0.30001700:
-    resolution: {integrity: sha512-2S6XIXwaE7K7erT8dY+kLQcpa5ms63XlRkMkReXjle+kf6c5g38vyMl+Z5y8dSxOFDhcFe+nxnn261PLxBSQsQ==}
+  caniuse-lite@1.0.30001705:
+    resolution: {integrity: sha512-S0uyMMiYvA7CxNgomYBwwwPUnWzFD83f3B1ce5jHUfHTH//QL6hHsreI8RVC5606R4ssqravelYO5TU6t8sEyg==}
 
   chalk@4.1.2:
     resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
@@ -1989,8 +1871,8 @@ packages:
   easy-table@1.2.0:
     resolution: {integrity: sha512-OFzVOv03YpvtcWGe5AayU5G2hgybsg3iqA6drU8UaoZyB9jLGMTrz9+asnLp/E+6qPh88yEI1gvyZFZ41dmgww==}
 
-  electron-to-chromium@1.5.102:
-    resolution: {integrity: sha512-eHhqaja8tE/FNpIiBrvBjFV/SSKpyWHLvxuR9dPTdo+3V9ppdLmFB7ZZQ98qNovcngPLYIz0oOBF9P0FfZef5Q==}
+  electron-to-chromium@1.5.119:
+    resolution: {integrity: sha512-Ku4NMzUjz3e3Vweh7PhApPrZSS4fyiCIbcIrG9eKrriYVLmbMepETR/v6SU7xPm98QTqMSYiCwfO89QNjXLkbQ==}
 
   emoji-regex@8.0.0:
     resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}
@@ -2018,13 +1900,8 @@ packages:
     resolution: {integrity: sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==}
     engines: {node: '>= 0.4'}
 
-  esbuild@0.23.1:
-    resolution: {integrity: sha512-VVNz/9Sa0bs5SELtn3f7qhJCDPCF5oMEl5cO9/SSinpE9hbPVvxbd572HH5AKiP7WD8INO53GgfDDhRjkylHEg==}
-    engines: {node: '>=18'}
-    hasBin: true
-
-  esbuild@0.24.2:
-    resolution: {integrity: sha512-+9egpBW8I3CD5XPe0n6BfT5fxLzxrlDzqydF3aviG+9ni1lDC/OvMHcxqEFV0+LANZG5R1bFMWfUrjVsdwxJvA==}
+  esbuild@0.25.1:
+    resolution: {integrity: sha512-BGO5LtrGC7vxnqucAe/rmvKdJllfGaYWdyABvyMoXQlfYMb2bbRuReWR5tEGE//4LcNJj9XrkovTqNYRFZHAMQ==}
     engines: {node: '>=18'}
     hasBin: true
 
@@ -2036,8 +1913,8 @@ packages:
     resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
     engines: {node: '>=10'}
 
-  eslint-plugin-react-hooks@5.1.0:
-    resolution: {integrity: sha512-mpJRtPgHN2tNAvZ35AMfqeB3Xqeo273QxrHJsbBEPWODRM4r0yB6jfoROqKEYrOn27UtRPpcpHc2UqyBSuUNTw==}
+  eslint-plugin-react-hooks@5.2.0:
+    resolution: {integrity: sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==}
     engines: {node: '>=10'}
     peerDependencies:
       eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0
@@ -2047,8 +1924,8 @@ packages:
     peerDependencies:
       eslint: '>=8.40'
 
-  eslint-scope@8.2.0:
-    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}
+  eslint-scope@8.3.0:
+    resolution: {integrity: sha512-pUNxi75F8MJ/GdeKtVLSbYg4ZI34J6C0C7sbL4YOp2exGwen7ZsuBqKzUhXd0qMQ362yET3z+uPwKeg/0C2XCQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
   eslint-visitor-keys@3.4.3:
@@ -2059,8 +1936,8 @@ packages:
     resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  eslint@9.20.1:
-    resolution: {integrity: sha512-m1mM33o6dBUjxl2qb6wv6nGNwCAsns1eKtaQ4l/NPHeTvhiUPbtdfMyktxN4B3fgHIgsYh1VT3V9txblpQHq+g==}
+  eslint@9.22.0:
+    resolution: {integrity: sha512-9V/QURhsRN40xuHXWjV64yvrzMjcz7ZyNoF2jJFmy9j/SLk0u1OLSZgXi28MrXjymnjEGSR80WCdab3RGMDveQ==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     hasBin: true
     peerDependencies:
@@ -2109,8 +1986,8 @@ packages:
   fast-levenshtein@2.0.6:
     resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}
 
-  fastq@1.19.0:
-    resolution: {integrity: sha512-7SFSRCNjBQIZH/xZR3iy5iQYR8aGBE0h3VG6/cwlbrpdciNYBMotQav8c1XI3HjHH+NikUpP53nPdlZSdWmFzA==}
+  fastq@1.19.1:
+    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}
 
   file-entry-cache@8.0.0:
     resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}
@@ -2140,8 +2017,8 @@ packages:
       debug:
         optional: true
 
-  foreground-child@3.3.0:
-    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}
+  foreground-child@3.3.1:
+    resolution: {integrity: sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==}
     engines: {node: '>=14'}
 
   form-data@4.0.2:
@@ -2163,8 +2040,8 @@ packages:
     resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
     engines: {node: '>=6.9.0'}
 
-  get-intrinsic@1.2.7:
-    resolution: {integrity: sha512-VW6Pxhsrk0KAOqs3WEd0klDiF/+V7gQOpAvY1jVU/LHmaD/kQO4523aiJuikX/QAKYiW6x8Jh+RJej1almdtCA==}
+  get-intrinsic@1.3.0:
+    resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}
     engines: {node: '>= 0.4'}
 
   get-nonce@1.0.1:
@@ -2341,22 +2218,25 @@ packages:
   keyv@4.5.4:
     resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}
 
-  knip@5.44.1:
-    resolution: {integrity: sha512-YJrz7K6AA3SwXJ5LL9ZlzQX9wcihMNwKoGBAaY5kUn4rLNOZ5ehsjFV+xm8gQuIJdjsFIKcFsy0K3U3yM/mabw==}
+  knip@5.46.0:
+    resolution: {integrity: sha512-WedHSK5xNBWYgm64Rt5B9b0CVXL2kRBcyCeet3NHgdv9en3QE4AWSDPEiX48NoPUBW3h//9S0VwLF5MG/MPi3g==}
     engines: {node: '>=18.18.0'}
     hasBin: true
     peerDependencies:
       '@types/node': '>=18'
       typescript: '>=5.0.4'
 
-  kysely@0.27.5:
-    resolution: {integrity: sha512-s7hZHcQeSNKpzCkHRm8yA+0JPLjncSWnjb+2TIElwS2JAqYr+Kv3Ess+9KFfJS0C1xcQ1i9NkNHpWwCYpHMWsA==}
+  kysely@0.27.6:
+    resolution: {integrity: sha512-FIyV/64EkKhJmjgC0g2hygpBv5RNWVPyNCqSAD7eTCv6eFWNIi4PN1UvdSJGicN/o35bnevgis4Y0UDC0qi8jQ==}
     engines: {node: '>=14.0.0'}
 
   levn@0.4.1:
     resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}
     engines: {node: '>= 0.8.0'}
 
+  libphonenumber-js@1.12.6:
+    resolution: {integrity: sha512-PJiS4ETaUfCOFLpmtKzAbqZQjCCKVu2OhTV4SVNNE7c2nu/dACvtCqj4L0i/KWNnIgRv7yrILvBj5Lonv5Ncxw==}
+
   lilconfig@3.1.3:
     resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
     engines: {node: '>=14'}
@@ -2429,8 +2309,8 @@ packages:
   mz@2.7.0:
     resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}
 
-  nanoid@3.3.8:
-    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}
+  nanoid@3.3.10:
+    resolution: {integrity: sha512-vSJJTG+t/dIKAUhUDw/dLdZ9s//5OxcHqLaDWWrW4Cdq7o6tdLIczUkMXt2MBNmk6sJRZBZRXVixs7URY1CmIg==}
     engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
     hasBin: true
 
@@ -2558,8 +2438,8 @@ packages:
   postcss-value-parser@4.2.0:
     resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}
 
-  postcss@8.5.2:
-    resolution: {integrity: sha512-MjOadfU3Ys9KYoX0AdkBlFEF1Vx37uCCeN4ZHnmwm9FfpbsGWMZeBLMmmpY+6Ocqod7mkdZ0DT31OlbsFrLlkA==}
+  postcss@8.5.3:
+    resolution: {integrity: sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==}
     engines: {node: ^10 || ^12 || >=14}
 
   prelude-ls@1.2.1:
@@ -2621,8 +2501,8 @@ packages:
       prettier-plugin-svelte:
         optional: true
 
-  prettier@3.5.1:
-    resolution: {integrity: sha512-hPpFQvHwL3Qv5AdRvBFMhnKo4tYxp0ReXiPn2bxkiohEX6mBeBwEpBSQTkD458RaaDKQMYSp4hX4UtfUTA5wDw==}
+  prettier@3.5.3:
+    resolution: {integrity: sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==}
     engines: {node: '>=14'}
     hasBin: true
 
@@ -2751,12 +2631,12 @@ packages:
     engines: {node: '>= 0.4'}
     hasBin: true
 
-  reusify@1.0.4:
-    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}
+  reusify@1.1.0:
+    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}
     engines: {iojs: '>=1.0.0', node: '>=0.10.0'}
 
-  rollup@4.34.8:
-    resolution: {integrity: sha512-489gTVMzAYdiZHFVA/ig/iYFllCcWFHMvUHI1rpFmkoUtRlQxqh6/yiNqnYibjMZ2b/+FUQwldG+aLsEt6bglQ==}
+  rollup@4.35.0:
+    resolution: {integrity: sha512-kg6oI4g+vc41vePJyO6dHt/yl0Rz3Thv0kJeVQ3D1kS3E5XSuKbPc29G4IpT/Kv1KQwgHVcN+HtyS+HYLNSvQg==}
     engines: {node: '>=18.0.0', npm: '>=8.0.0'}
     hasBin: true
 
@@ -2778,6 +2658,19 @@ packages:
     engines: {node: '>=10'}
     hasBin: true
 
+  seroval-plugins@1.2.1:
+    resolution: {integrity: sha512-H5vs53+39+x4Udwp4J5rNZfgFuA+Lt+uU+09w1gYBVWomtAl98B+E9w7yC05Xc81/HgLvJdlyqJbU0fJCKCmdw==}
+    engines: {node: '>=10'}
+    peerDependencies:
+      seroval: ^1.0
+
+  seroval@1.2.1:
+    resolution: {integrity: sha512-yBxFFs3zmkvKNmR0pFSU//rIsYjuX418TnlDmc2weaq5XFDqDIV/NOMPBoLrbxjLH42p4UzRuXHryXh9dYcKcw==}
+    engines: {node: '>=10'}
+
+  set-cookie-parser@2.7.1:
+    resolution: {integrity: sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==}
+
   shebang-command@2.0.0:
     resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
     engines: {node: '>=8'}
@@ -2794,6 +2687,9 @@ packages:
     resolution: {integrity: sha512-tEYNll18pPKHroYSmLLrksq233j021G0giwW7P3D24jC54pQ5W5BXMsQ/Mvw1OJCmEYDgY+lrzT+3nNUtoNfXQ==}
     engines: {node: '>= 18'}
 
+  solid-js@1.9.5:
+    resolution: {integrity: sha512-ogI3DaFcyn6UhYhrgcyRAMbu/buBJitYQASZz5WzfQVPP10RD2AbCoRZ517psnezrasyCbWzIxZ6kVqet768xw==}
+
   source-map-js@1.2.1:
     resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
     engines: {node: '>=0.10.0'}
@@ -2895,8 +2791,8 @@ packages:
   tslib@2.8.1:
     resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}
 
-  tsx@4.19.2:
-    resolution: {integrity: sha512-pOUl6Vo2LUq/bSa8S5q7b91cgNSjctn9ugq/+Mvow99qW6x/UZYwzxy/3NmqoT66eHYfCVvFvACC58UBPFf28g==}
+  tsx@4.19.3:
+    resolution: {integrity: sha512-4H8vUNGNjQ4V2EOoGw005+c+dGuPSnhpPBPHBtsZdGZBk/iJb4kguGlPWaZTZ3q5nMtFOEsY0nRDlh9PJyd6SQ==}
     engines: {node: '>=18.0.0'}
     hasBin: true
 
@@ -2904,12 +2800,12 @@ packages:
     resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}
     engines: {node: '>= 0.8.0'}
 
-  typescript-eslint@8.24.1:
-    resolution: {integrity: sha512-cw3rEdzDqBs70TIcb0Gdzbt6h11BSs2pS0yaq7hDWDBtCCSei1pPSUXE9qUdQ/Wm9NgFg8mKtMt1b8fTHIl1jA==}
+  typescript-eslint@8.26.1:
+    resolution: {integrity: sha512-t/oIs9mYyrwZGRpDv3g+3K6nZ5uhKEMt2oNmAPwaY4/ye0+EH4nXIPYNtkYFS6QHm+1DFg34DbglYBz5P9Xysg==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
     peerDependencies:
       eslint: ^8.57.0 || ^9.0.0
-      typescript: '>=4.8.4 <5.8.0'
+      typescript: '>=4.8.4 <5.9.0'
 
   typescript@5.7.3:
     resolution: {integrity: sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==}
@@ -2926,8 +2822,8 @@ packages:
     resolution: {integrity: sha512-m1ekpSwuOT5hxkJeZGRxO7gXbXT3gF26NjQ7GdVHoLoF8/nopLcd/QfPigpCy7i51oFHiRJg/CyHhj4vs2+KGw==}
     engines: {node: '>=18.12.0'}
 
-  update-browserslist-db@1.1.2:
-    resolution: {integrity: sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==}
+  update-browserslist-db@1.1.3:
+    resolution: {integrity: sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==}
     hasBin: true
     peerDependencies:
       browserslist: '>= 4.21.0'
@@ -2963,11 +2859,19 @@ packages:
   util-deprecate@1.0.2:
     resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}
 
+  valibot@1.0.0-beta.15:
+    resolution: {integrity: sha512-BKy8XosZkDHWmYC+cJG74LBzP++Gfntwi33pP3D3RKztz2XV9jmFWnkOi21GoqARP8wAWARwhV6eTr1JcWzjGw==}
+    peerDependencies:
+      typescript: '>=5'
+    peerDependenciesMeta:
+      typescript:
+        optional: true
+
   victory-vendor@36.9.2:
     resolution: {integrity: sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==}
 
-  vite@6.1.0:
-    resolution: {integrity: sha512-RjjMipCKVoR4hVfPY6GQTgveinjNuyLw+qruksLDvA5ktI1150VmcMBKmQaEWJhg/j6Uaf6dNCNA0AfdzUb/hQ==}
+  vite@6.2.2:
+    resolution: {integrity: sha512-yW7PeMM+LkDzc7CgJuRLMW2Jz0FxMOsVJ8Lv3gpgW9WLcb9cTW+121UEr1hvmfR7w3SegR5ItvYyzVz1vxNJgQ==}
     engines: {node: ^18.0.0 || ^20.0.0 || >=22.0.0}
     hasBin: true
     peerDependencies:
@@ -3085,18 +2989,18 @@ snapshots:
 
   '@babel/compat-data@7.26.8': {}
 
-  '@babel/core@7.26.9':
+  '@babel/core@7.26.10':
     dependencies:
       '@ampproject/remapping': 2.3.0
       '@babel/code-frame': 7.26.2
-      '@babel/generator': 7.26.9
+      '@babel/generator': 7.26.10
       '@babel/helper-compilation-targets': 7.26.5
-      '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.9)
-      '@babel/helpers': 7.26.9
-      '@babel/parser': 7.26.9
+      '@babel/helper-module-transforms': 7.26.0(@babel/core@7.26.10)
+      '@babel/helpers': 7.26.10
+      '@babel/parser': 7.26.10
       '@babel/template': 7.26.9
-      '@babel/traverse': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/traverse': 7.26.10
+      '@babel/types': 7.26.10
       convert-source-map: 2.0.0
       debug: 4.4.0
       gensync: 1.0.0-beta.2
@@ -3111,10 +3015,10 @@ snapshots:
       jsesc: 2.5.2
       source-map: 0.5.7
 
-  '@babel/generator@7.26.9':
+  '@babel/generator@7.26.10':
     dependencies:
-      '@babel/parser': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/parser': 7.26.10
+      '@babel/types': 7.26.10
       '@jridgewell/gen-mapping': 0.3.8
       '@jridgewell/trace-mapping': 0.3.25
       jsesc: 3.1.0
@@ -3129,30 +3033,30 @@ snapshots:
 
   '@babel/helper-environment-visitor@7.24.7':
     dependencies:
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
   '@babel/helper-function-name@7.24.7':
     dependencies:
       '@babel/template': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
   '@babel/helper-hoist-variables@7.24.7':
     dependencies:
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
   '@babel/helper-module-imports@7.25.9':
     dependencies:
-      '@babel/traverse': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/traverse': 7.26.10
+      '@babel/types': 7.26.10
     transitivePeerDependencies:
       - supports-color
 
-  '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.9)':
+  '@babel/helper-module-transforms@7.26.0(@babel/core@7.26.10)':
     dependencies:
-      '@babel/core': 7.26.9
+      '@babel/core': 7.26.10
       '@babel/helper-module-imports': 7.25.9
       '@babel/helper-validator-identifier': 7.25.9
-      '@babel/traverse': 7.26.9
+      '@babel/traverse': 7.26.10
     transitivePeerDependencies:
       - supports-color
 
@@ -3160,7 +3064,7 @@ snapshots:
 
   '@babel/helper-split-export-declaration@7.24.7':
     dependencies:
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
   '@babel/helper-string-parser@7.25.9': {}
 
@@ -3168,57 +3072,57 @@ snapshots:
 
   '@babel/helper-validator-option@7.25.9': {}
 
-  '@babel/helpers@7.26.9':
+  '@babel/helpers@7.26.10':
     dependencies:
       '@babel/template': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
-  '@babel/parser@7.26.9':
+  '@babel/parser@7.26.10':
     dependencies:
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
-  '@babel/plugin-syntax-jsx@7.25.9(@babel/core@7.26.9)':
+  '@babel/plugin-syntax-jsx@7.25.9(@babel/core@7.26.10)':
     dependencies:
-      '@babel/core': 7.26.9
+      '@babel/core': 7.26.10
       '@babel/helper-plugin-utils': 7.26.5
 
-  '@babel/plugin-syntax-typescript@7.25.9(@babel/core@7.26.9)':
+  '@babel/plugin-syntax-typescript@7.25.9(@babel/core@7.26.10)':
     dependencies:
-      '@babel/core': 7.26.9
+      '@babel/core': 7.26.10
       '@babel/helper-plugin-utils': 7.26.5
 
-  '@babel/runtime@7.26.9':
+  '@babel/runtime@7.26.10':
     dependencies:
       regenerator-runtime: 0.14.1
 
   '@babel/template@7.26.9':
     dependencies:
       '@babel/code-frame': 7.26.2
-      '@babel/parser': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/parser': 7.26.10
+      '@babel/types': 7.26.10
 
   '@babel/traverse@7.23.2':
     dependencies:
       '@babel/code-frame': 7.26.2
-      '@babel/generator': 7.26.9
+      '@babel/generator': 7.26.10
       '@babel/helper-environment-visitor': 7.24.7
       '@babel/helper-function-name': 7.24.7
       '@babel/helper-hoist-variables': 7.24.7
       '@babel/helper-split-export-declaration': 7.24.7
-      '@babel/parser': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/parser': 7.26.10
+      '@babel/types': 7.26.10
       debug: 4.4.0
       globals: 11.12.0
     transitivePeerDependencies:
       - supports-color
 
-  '@babel/traverse@7.26.9':
+  '@babel/traverse@7.26.10':
     dependencies:
       '@babel/code-frame': 7.26.2
-      '@babel/generator': 7.26.9
-      '@babel/parser': 7.26.9
+      '@babel/generator': 7.26.10
+      '@babel/parser': 7.26.10
       '@babel/template': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
       debug: 4.4.0
       globals: 11.12.0
     transitivePeerDependencies:
@@ -3229,7 +3133,7 @@ snapshots:
       '@babel/helper-validator-identifier': 7.25.9
       to-fast-properties: 2.0.0
 
-  '@babel/types@7.26.9':
+  '@babel/types@7.26.10':
     dependencies:
       '@babel/helper-string-parser': 7.25.9
       '@babel/helper-validator-identifier': 7.25.9
@@ -3238,158 +3142,86 @@ snapshots:
     dependencies:
       uncrypto: 0.1.3
 
-  '@better-fetch/fetch@1.1.12': {}
-
-  '@esbuild/aix-ppc64@0.23.1':
-    optional: true
-
-  '@esbuild/aix-ppc64@0.24.2':
-    optional: true
-
-  '@esbuild/android-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/android-arm64@0.24.2':
-    optional: true
-
-  '@esbuild/android-arm@0.23.1':
-    optional: true
-
-  '@esbuild/android-arm@0.24.2':
-    optional: true
-
-  '@esbuild/android-x64@0.23.1':
-    optional: true
-
-  '@esbuild/android-x64@0.24.2':
-    optional: true
-
-  '@esbuild/darwin-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/darwin-arm64@0.24.2':
-    optional: true
-
-  '@esbuild/darwin-x64@0.23.1':
-    optional: true
-
-  '@esbuild/darwin-x64@0.24.2':
-    optional: true
-
-  '@esbuild/freebsd-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/freebsd-arm64@0.24.2':
-    optional: true
+  '@better-fetch/fetch@1.1.15': {}
 
-  '@esbuild/freebsd-x64@0.23.1':
+  '@esbuild/aix-ppc64@0.25.1':
     optional: true
 
-  '@esbuild/freebsd-x64@0.24.2':
+  '@esbuild/android-arm64@0.25.1':
     optional: true
 
-  '@esbuild/linux-arm64@0.23.1':
+  '@esbuild/android-arm@0.25.1':
     optional: true
 
-  '@esbuild/linux-arm64@0.24.2':
+  '@esbuild/android-x64@0.25.1':
     optional: true
 
-  '@esbuild/linux-arm@0.23.1':
+  '@esbuild/darwin-arm64@0.25.1':
     optional: true
 
-  '@esbuild/linux-arm@0.24.2':
+  '@esbuild/darwin-x64@0.25.1':
     optional: true
 
-  '@esbuild/linux-ia32@0.23.1':
+  '@esbuild/freebsd-arm64@0.25.1':
     optional: true
 
-  '@esbuild/linux-ia32@0.24.2':
+  '@esbuild/freebsd-x64@0.25.1':
     optional: true
 
-  '@esbuild/linux-loong64@0.23.1':
+  '@esbuild/linux-arm64@0.25.1':
     optional: true
 
-  '@esbuild/linux-loong64@0.24.2':
+  '@esbuild/linux-arm@0.25.1':
     optional: true
 
-  '@esbuild/linux-mips64el@0.23.1':
+  '@esbuild/linux-ia32@0.25.1':
     optional: true
 
-  '@esbuild/linux-mips64el@0.24.2':
+  '@esbuild/linux-loong64@0.25.1':
     optional: true
 
-  '@esbuild/linux-ppc64@0.23.1':
+  '@esbuild/linux-mips64el@0.25.1':
     optional: true
 
-  '@esbuild/linux-ppc64@0.24.2':
+  '@esbuild/linux-ppc64@0.25.1':
     optional: true
 
-  '@esbuild/linux-riscv64@0.23.1':
+  '@esbuild/linux-riscv64@0.25.1':
     optional: true
 
-  '@esbuild/linux-riscv64@0.24.2':
+  '@esbuild/linux-s390x@0.25.1':
     optional: true
 
-  '@esbuild/linux-s390x@0.23.1':
+  '@esbuild/linux-x64@0.25.1':
     optional: true
 
-  '@esbuild/linux-s390x@0.24.2':
+  '@esbuild/netbsd-arm64@0.25.1':
     optional: true
 
-  '@esbuild/linux-x64@0.23.1':
+  '@esbuild/netbsd-x64@0.25.1':
     optional: true
 
-  '@esbuild/linux-x64@0.24.2':
+  '@esbuild/openbsd-arm64@0.25.1':
     optional: true
 
-  '@esbuild/netbsd-arm64@0.24.2':
+  '@esbuild/openbsd-x64@0.25.1':
     optional: true
 
-  '@esbuild/netbsd-x64@0.23.1':
+  '@esbuild/sunos-x64@0.25.1':
     optional: true
 
-  '@esbuild/netbsd-x64@0.24.2':
+  '@esbuild/win32-arm64@0.25.1':
     optional: true
 
-  '@esbuild/openbsd-arm64@0.23.1':
+  '@esbuild/win32-ia32@0.25.1':
     optional: true
 
-  '@esbuild/openbsd-arm64@0.24.2':
+  '@esbuild/win32-x64@0.25.1':
     optional: true
 
-  '@esbuild/openbsd-x64@0.23.1':
-    optional: true
-
-  '@esbuild/openbsd-x64@0.24.2':
-    optional: true
-
-  '@esbuild/sunos-x64@0.23.1':
-    optional: true
-
-  '@esbuild/sunos-x64@0.24.2':
-    optional: true
-
-  '@esbuild/win32-arm64@0.23.1':
-    optional: true
-
-  '@esbuild/win32-arm64@0.24.2':
-    optional: true
-
-  '@esbuild/win32-ia32@0.23.1':
-    optional: true
-
-  '@esbuild/win32-ia32@0.24.2':
-    optional: true
-
-  '@esbuild/win32-x64@0.23.1':
-    optional: true
-
-  '@esbuild/win32-x64@0.24.2':
-    optional: true
-
-  '@eslint-community/eslint-utils@4.4.1(eslint@9.20.1(jiti@2.4.2))':
+  '@eslint-community/eslint-utils@4.5.1(eslint@9.22.0(jiti@2.4.2))':
     dependencies:
-      eslint: 9.20.1(jiti@2.4.2)
+      eslint: 9.22.0(jiti@2.4.2)
       eslint-visitor-keys: 3.4.3
 
   '@eslint-community/regexpp@4.12.1': {}
@@ -3402,15 +3234,13 @@ snapshots:
     transitivePeerDependencies:
       - supports-color
 
-  '@eslint/core@0.10.0':
-    dependencies:
-      '@types/json-schema': 7.0.15
+  '@eslint/config-helpers@0.1.0': {}
 
-  '@eslint/core@0.11.0':
+  '@eslint/core@0.12.0':
     dependencies:
       '@types/json-schema': 7.0.15
 
-  '@eslint/eslintrc@3.2.0':
+  '@eslint/eslintrc@3.3.0':
     dependencies:
       ajv: 6.12.6
       debug: 4.4.0
@@ -3424,16 +3254,16 @@ snapshots:
     transitivePeerDependencies:
       - supports-color
 
-  '@eslint/js@9.20.0': {}
+  '@eslint/js@9.22.0': {}
 
   '@eslint/object-schema@2.1.6': {}
 
-  '@eslint/plugin-kit@0.2.5':
+  '@eslint/plugin-kit@0.2.7':
     dependencies:
-      '@eslint/core': 0.10.0
+      '@eslint/core': 0.12.0
       levn: 0.4.1
 
-  '@faker-js/faker@9.5.0': {}
+  '@faker-js/faker@9.6.0': {}
 
   '@floating-ui/core@1.6.9':
     dependencies:
@@ -3476,7 +3306,7 @@ snapshots:
 
   '@humanwhocodes/retry@0.3.1': {}
 
-  '@humanwhocodes/retry@0.4.1': {}
+  '@humanwhocodes/retry@0.4.2': {}
 
   '@isaacs/cliui@8.0.2':
     dependencies:
@@ -3527,12 +3357,12 @@ snapshots:
   '@nodelib/fs.walk@1.2.8':
     dependencies:
       '@nodelib/fs.scandir': 2.1.5
-      fastq: 1.19.0
+      fastq: 1.19.1
 
   '@nodelib/fs.walk@3.0.1':
     dependencies:
       '@nodelib/fs.scandir': 4.0.1
-      fastq: 1.19.0
+      fastq: 1.19.1
 
   '@peculiar/asn1-android@2.3.15':
     dependencies:
@@ -4094,61 +3924,61 @@ snapshots:
 
   '@react-google-maps/marker-clusterer@2.20.0': {}
 
-  '@rollup/rollup-android-arm-eabi@4.34.8':
+  '@rollup/rollup-android-arm-eabi@4.35.0':
     optional: true
 
-  '@rollup/rollup-android-arm64@4.34.8':
+  '@rollup/rollup-android-arm64@4.35.0':
     optional: true
 
-  '@rollup/rollup-darwin-arm64@4.34.8':
+  '@rollup/rollup-darwin-arm64@4.35.0':
     optional: true
 
-  '@rollup/rollup-darwin-x64@4.34.8':
+  '@rollup/rollup-darwin-x64@4.35.0':
     optional: true
 
-  '@rollup/rollup-freebsd-arm64@4.34.8':
+  '@rollup/rollup-freebsd-arm64@4.35.0':
     optional: true
 
-  '@rollup/rollup-freebsd-x64@4.34.8':
+  '@rollup/rollup-freebsd-x64@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-arm-gnueabihf@4.34.8':
+  '@rollup/rollup-linux-arm-gnueabihf@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-arm-musleabihf@4.34.8':
+  '@rollup/rollup-linux-arm-musleabihf@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-arm64-gnu@4.34.8':
+  '@rollup/rollup-linux-arm64-gnu@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-arm64-musl@4.34.8':
+  '@rollup/rollup-linux-arm64-musl@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-loongarch64-gnu@4.34.8':
+  '@rollup/rollup-linux-loongarch64-gnu@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-powerpc64le-gnu@4.34.8':
+  '@rollup/rollup-linux-powerpc64le-gnu@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-riscv64-gnu@4.34.8':
+  '@rollup/rollup-linux-riscv64-gnu@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-s390x-gnu@4.34.8':
+  '@rollup/rollup-linux-s390x-gnu@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-x64-gnu@4.34.8':
+  '@rollup/rollup-linux-x64-gnu@4.35.0':
     optional: true
 
-  '@rollup/rollup-linux-x64-musl@4.34.8':
+  '@rollup/rollup-linux-x64-musl@4.35.0':
     optional: true
 
-  '@rollup/rollup-win32-arm64-msvc@4.34.8':
+  '@rollup/rollup-win32-arm64-msvc@4.35.0':
     optional: true
 
-  '@rollup/rollup-win32-ia32-msvc@4.34.8':
+  '@rollup/rollup-win32-ia32-msvc@4.35.0':
     optional: true
 
-  '@rollup/rollup-win32-x64-msvc@4.34.8':
+  '@rollup/rollup-win32-x64-msvc@4.35.0':
     optional: true
 
   '@simplewebauthn/browser@13.1.0': {}
@@ -4169,95 +3999,107 @@ snapshots:
       ignore: 5.3.2
       p-map: 4.0.0
 
-  '@swc/core-darwin-arm64@1.10.17':
+  '@swc/core-darwin-arm64@1.11.9':
     optional: true
 
-  '@swc/core-darwin-x64@1.10.17':
+  '@swc/core-darwin-x64@1.11.9':
     optional: true
 
-  '@swc/core-linux-arm-gnueabihf@1.10.17':
+  '@swc/core-linux-arm-gnueabihf@1.11.9':
     optional: true
 
-  '@swc/core-linux-arm64-gnu@1.10.17':
+  '@swc/core-linux-arm64-gnu@1.11.9':
     optional: true
 
-  '@swc/core-linux-arm64-musl@1.10.17':
+  '@swc/core-linux-arm64-musl@1.11.9':
     optional: true
 
-  '@swc/core-linux-x64-gnu@1.10.17':
+  '@swc/core-linux-x64-gnu@1.11.9':
     optional: true
 
-  '@swc/core-linux-x64-musl@1.10.17':
+  '@swc/core-linux-x64-musl@1.11.9':
     optional: true
 
-  '@swc/core-win32-arm64-msvc@1.10.17':
+  '@swc/core-win32-arm64-msvc@1.11.9':
     optional: true
 
-  '@swc/core-win32-ia32-msvc@1.10.17':
+  '@swc/core-win32-ia32-msvc@1.11.9':
     optional: true
 
-  '@swc/core-win32-x64-msvc@1.10.17':
+  '@swc/core-win32-x64-msvc@1.11.9':
     optional: true
 
-  '@swc/core@1.10.17':
+  '@swc/core@1.11.9':
     dependencies:
       '@swc/counter': 0.1.3
-      '@swc/types': 0.1.17
+      '@swc/types': 0.1.19
     optionalDependencies:
-      '@swc/core-darwin-arm64': 1.10.17
-      '@swc/core-darwin-x64': 1.10.17
-      '@swc/core-linux-arm-gnueabihf': 1.10.17
-      '@swc/core-linux-arm64-gnu': 1.10.17
-      '@swc/core-linux-arm64-musl': 1.10.17
-      '@swc/core-linux-x64-gnu': 1.10.17
-      '@swc/core-linux-x64-musl': 1.10.17
-      '@swc/core-win32-arm64-msvc': 1.10.17
-      '@swc/core-win32-ia32-msvc': 1.10.17
-      '@swc/core-win32-x64-msvc': 1.10.17
+      '@swc/core-darwin-arm64': 1.11.9
+      '@swc/core-darwin-x64': 1.11.9
+      '@swc/core-linux-arm-gnueabihf': 1.11.9
+      '@swc/core-linux-arm64-gnu': 1.11.9
+      '@swc/core-linux-arm64-musl': 1.11.9
+      '@swc/core-linux-x64-gnu': 1.11.9
+      '@swc/core-linux-x64-musl': 1.11.9
+      '@swc/core-win32-arm64-msvc': 1.11.9
+      '@swc/core-win32-ia32-msvc': 1.11.9
+      '@swc/core-win32-x64-msvc': 1.11.9
 
   '@swc/counter@0.1.3': {}
 
-  '@swc/types@0.1.17':
+  '@swc/types@0.1.19':
     dependencies:
       '@swc/counter': 0.1.3
 
-  '@tabler/icons-react@3.30.0(react@19.0.0)':
+  '@tabler/icons-react@3.31.0(react@19.0.0)':
     dependencies:
-      '@tabler/icons': 3.30.0
+      '@tabler/icons': 3.31.0
       react: 19.0.0
 
-  '@tabler/icons@3.30.0': {}
+  '@tabler/icons@3.31.0': {}
 
-  '@tanstack/eslint-plugin-query@5.66.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)':
+  '@tanstack/eslint-plugin-query@5.68.0(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)':
     dependencies:
-      '@typescript-eslint/utils': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      eslint: 9.20.1(jiti@2.4.2)
+      '@typescript-eslint/utils': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      eslint: 9.22.0(jiti@2.4.2)
     transitivePeerDependencies:
       - supports-color
       - typescript
 
-  '@tanstack/history@1.99.13': {}
+  '@tanstack/history@1.114.22': {}
 
-  '@tanstack/query-core@5.66.4': {}
+  '@tanstack/query-core@5.68.0': {}
 
-  '@tanstack/query-devtools@5.65.0': {}
+  '@tanstack/query-devtools@5.67.2': {}
+
+  '@tanstack/react-query-devtools@5.68.0(@tanstack/react-query@5.68.0(react@19.0.0))(react@19.0.0)':
+    dependencies:
+      '@tanstack/query-devtools': 5.67.2
+      '@tanstack/react-query': 5.68.0(react@19.0.0)
+      react: 19.0.0
 
-  '@tanstack/react-query-devtools@5.66.6(@tanstack/react-query@5.66.6(react@19.0.0))(react@19.0.0)':
+  '@tanstack/react-query@5.68.0(react@19.0.0)':
     dependencies:
-      '@tanstack/query-devtools': 5.65.0
-      '@tanstack/react-query': 5.66.6(react@19.0.0)
+      '@tanstack/query-core': 5.68.0
       react: 19.0.0
 
-  '@tanstack/react-query@5.66.6(react@19.0.0)':
+  '@tanstack/react-router-devtools@1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(@tanstack/router-core@1.114.23)(csstype@3.1.3)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(tiny-invariant@1.3.3)':
     dependencies:
-      '@tanstack/query-core': 5.66.4
+      '@tanstack/react-router': 1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+      '@tanstack/router-devtools-core': 1.114.23(@tanstack/router-core@1.114.23)(csstype@3.1.3)(solid-js@1.9.5)(tiny-invariant@1.3.3)
       react: 19.0.0
+      react-dom: 19.0.0(react@19.0.0)
+      solid-js: 1.9.5
+    transitivePeerDependencies:
+      - '@tanstack/router-core'
+      - csstype
+      - tiny-invariant
 
-  '@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':
+  '@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':
     dependencies:
-      '@tanstack/history': 1.99.13
+      '@tanstack/history': 1.114.22
       '@tanstack/react-store': 0.7.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
-      '@tanstack/router-core': 1.104.1
+      '@tanstack/router-core': 1.114.23
       jsesc: 3.1.0
       react: 19.0.0
       react-dom: 19.0.0(react@19.0.0)
@@ -4277,41 +4119,56 @@ snapshots:
       react: 19.0.0
       react-dom: 19.0.0(react@19.0.0)
 
-  '@tanstack/router-core@1.104.1':
+  '@tanstack/router-core@1.114.23':
     dependencies:
-      '@tanstack/history': 1.99.13
+      '@tanstack/history': 1.114.22
       '@tanstack/store': 0.7.0
 
-  '@tanstack/router-devtools@1.105.0(@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(csstype@3.1.3)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)':
+  '@tanstack/router-devtools-core@1.114.23(@tanstack/router-core@1.114.23)(csstype@3.1.3)(solid-js@1.9.5)(tiny-invariant@1.3.3)':
     dependencies:
-      '@tanstack/react-router': 1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+      '@tanstack/router-core': 1.114.23
+      clsx: 2.1.1
+      goober: 2.1.16(csstype@3.1.3)
+      solid-js: 1.9.5
+      tiny-invariant: 1.3.3
+    optionalDependencies:
+      csstype: 3.1.3
+
+  '@tanstack/router-devtools@1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(@tanstack/router-core@1.114.23)(csstype@3.1.3)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(tiny-invariant@1.3.3)':
+    dependencies:
+      '@tanstack/react-router': 1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+      '@tanstack/react-router-devtools': 1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(@tanstack/router-core@1.114.23)(csstype@3.1.3)(react-dom@19.0.0(react@19.0.0))(react@19.0.0)(tiny-invariant@1.3.3)
       clsx: 2.1.1
       goober: 2.1.16(csstype@3.1.3)
       react: 19.0.0
       react-dom: 19.0.0(react@19.0.0)
     optionalDependencies:
       csstype: 3.1.3
+    transitivePeerDependencies:
+      - '@tanstack/router-core'
+      - tiny-invariant
 
-  '@tanstack/router-generator@1.105.0(@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))':
+  '@tanstack/router-generator@1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))':
     dependencies:
-      '@tanstack/virtual-file-routes': 1.99.0
-      prettier: 3.5.1
-      tsx: 4.19.2
+      '@tanstack/virtual-file-routes': 1.114.12
+      prettier: 3.5.3
+      tsx: 4.19.3
       zod: 3.24.2
     optionalDependencies:
-      '@tanstack/react-router': 1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+      '@tanstack/react-router': 1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
 
-  '@tanstack/router-plugin@1.105.0(@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(vite@6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0))':
+  '@tanstack/router-plugin@1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))(vite@6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0))':
     dependencies:
-      '@babel/core': 7.26.9
-      '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.9)
-      '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.9)
+      '@babel/core': 7.26.10
+      '@babel/plugin-syntax-jsx': 7.25.9(@babel/core@7.26.10)
+      '@babel/plugin-syntax-typescript': 7.25.9(@babel/core@7.26.10)
       '@babel/template': 7.26.9
-      '@babel/traverse': 7.26.9
-      '@babel/types': 7.26.9
-      '@tanstack/router-generator': 1.105.0(@tanstack/react-router@1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0))
-      '@tanstack/router-utils': 1.102.2
-      '@tanstack/virtual-file-routes': 1.99.0
+      '@babel/traverse': 7.26.10
+      '@babel/types': 7.26.10
+      '@tanstack/router-core': 1.114.23
+      '@tanstack/router-generator': 1.114.23(@tanstack/react-router@1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0))
+      '@tanstack/router-utils': 1.114.12
+      '@tanstack/virtual-file-routes': 1.114.12
       '@types/babel__core': 7.20.5
       '@types/babel__template': 7.4.4
       '@types/babel__traverse': 7.20.6
@@ -4320,56 +4177,56 @@ snapshots:
       unplugin: 2.2.0
       zod: 3.24.2
     optionalDependencies:
-      '@tanstack/react-router': 1.105.0(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
-      vite: 6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0)
+      '@tanstack/react-router': 1.114.23(react-dom@19.0.0(react@19.0.0))(react@19.0.0)
+      vite: 6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0)
     transitivePeerDependencies:
       - supports-color
 
-  '@tanstack/router-utils@1.102.2':
+  '@tanstack/router-utils@1.114.12':
     dependencies:
-      '@babel/generator': 7.26.9
-      '@babel/parser': 7.26.9
-      ansis: 3.15.0
+      '@babel/generator': 7.26.10
+      '@babel/parser': 7.26.10
+      ansis: 3.17.0
       diff: 7.0.0
 
   '@tanstack/store@0.7.0': {}
 
   '@tanstack/table-core@8.21.2': {}
 
-  '@tanstack/virtual-file-routes@1.99.0': {}
+  '@tanstack/virtual-file-routes@1.114.12': {}
 
-  '@trivago/prettier-plugin-sort-imports@4.3.0(prettier@3.5.1)':
+  '@trivago/prettier-plugin-sort-imports@4.3.0(prettier@3.5.3)':
     dependencies:
       '@babel/generator': 7.17.7
-      '@babel/parser': 7.26.9
+      '@babel/parser': 7.26.10
       '@babel/traverse': 7.23.2
       '@babel/types': 7.17.0
       javascript-natural-sort: 0.7.1
       lodash: 4.17.21
-      prettier: 3.5.1
+      prettier: 3.5.3
     transitivePeerDependencies:
       - supports-color
 
   '@types/babel__core@7.20.5':
     dependencies:
-      '@babel/parser': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/parser': 7.26.10
+      '@babel/types': 7.26.10
       '@types/babel__generator': 7.6.8
       '@types/babel__template': 7.4.4
       '@types/babel__traverse': 7.20.6
 
   '@types/babel__generator@7.6.8':
     dependencies:
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
   '@types/babel__template@7.4.4':
     dependencies:
-      '@babel/parser': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/parser': 7.26.10
+      '@babel/types': 7.26.10
 
   '@types/babel__traverse@7.20.6':
     dependencies:
-      '@babel/types': 7.26.9
+      '@babel/types': 7.26.10
 
   '@types/d3-array@3.2.1': {}
 
@@ -4403,7 +4260,7 @@ snapshots:
 
   '@types/json-schema@7.0.15': {}
 
-  '@types/node@22.13.4':
+  '@types/node@22.13.10':
     dependencies:
       undici-types: 6.20.0
 
@@ -4415,15 +4272,15 @@ snapshots:
     dependencies:
       csstype: 3.1.3
 
-  '@typescript-eslint/eslint-plugin@8.24.1(@typescript-eslint/parser@8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3))(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)':
+  '@typescript-eslint/eslint-plugin@8.26.1(@typescript-eslint/parser@8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3))(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)':
     dependencies:
       '@eslint-community/regexpp': 4.12.1
-      '@typescript-eslint/parser': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      '@typescript-eslint/scope-manager': 8.24.1
-      '@typescript-eslint/type-utils': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      '@typescript-eslint/utils': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      '@typescript-eslint/visitor-keys': 8.24.1
-      eslint: 9.20.1(jiti@2.4.2)
+      '@typescript-eslint/parser': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      '@typescript-eslint/scope-manager': 8.26.1
+      '@typescript-eslint/type-utils': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      '@typescript-eslint/utils': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      '@typescript-eslint/visitor-keys': 8.26.1
+      eslint: 9.22.0(jiti@2.4.2)
       graphemer: 1.4.0
       ignore: 5.3.2
       natural-compare: 1.4.0
@@ -4432,40 +4289,40 @@ snapshots:
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/parser@8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)':
+  '@typescript-eslint/parser@8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)':
     dependencies:
-      '@typescript-eslint/scope-manager': 8.24.1
-      '@typescript-eslint/types': 8.24.1
-      '@typescript-eslint/typescript-estree': 8.24.1(typescript@5.7.3)
-      '@typescript-eslint/visitor-keys': 8.24.1
+      '@typescript-eslint/scope-manager': 8.26.1
+      '@typescript-eslint/types': 8.26.1
+      '@typescript-eslint/typescript-estree': 8.26.1(typescript@5.7.3)
+      '@typescript-eslint/visitor-keys': 8.26.1
       debug: 4.4.0
-      eslint: 9.20.1(jiti@2.4.2)
+      eslint: 9.22.0(jiti@2.4.2)
       typescript: 5.7.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/scope-manager@8.24.1':
+  '@typescript-eslint/scope-manager@8.26.1':
     dependencies:
-      '@typescript-eslint/types': 8.24.1
-      '@typescript-eslint/visitor-keys': 8.24.1
+      '@typescript-eslint/types': 8.26.1
+      '@typescript-eslint/visitor-keys': 8.26.1
 
-  '@typescript-eslint/type-utils@8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)':
+  '@typescript-eslint/type-utils@8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)':
     dependencies:
-      '@typescript-eslint/typescript-estree': 8.24.1(typescript@5.7.3)
-      '@typescript-eslint/utils': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
+      '@typescript-eslint/typescript-estree': 8.26.1(typescript@5.7.3)
+      '@typescript-eslint/utils': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
       debug: 4.4.0
-      eslint: 9.20.1(jiti@2.4.2)
+      eslint: 9.22.0(jiti@2.4.2)
       ts-api-utils: 2.0.1(typescript@5.7.3)
       typescript: 5.7.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/types@8.24.1': {}
+  '@typescript-eslint/types@8.26.1': {}
 
-  '@typescript-eslint/typescript-estree@8.24.1(typescript@5.7.3)':
+  '@typescript-eslint/typescript-estree@8.26.1(typescript@5.7.3)':
     dependencies:
-      '@typescript-eslint/types': 8.24.1
-      '@typescript-eslint/visitor-keys': 8.24.1
+      '@typescript-eslint/types': 8.26.1
+      '@typescript-eslint/visitor-keys': 8.26.1
       debug: 4.4.0
       fast-glob: 3.3.3
       is-glob: 4.0.3
@@ -4476,34 +4333,34 @@ snapshots:
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/utils@8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)':
+  '@typescript-eslint/utils@8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)':
     dependencies:
-      '@eslint-community/eslint-utils': 4.4.1(eslint@9.20.1(jiti@2.4.2))
-      '@typescript-eslint/scope-manager': 8.24.1
-      '@typescript-eslint/types': 8.24.1
-      '@typescript-eslint/typescript-estree': 8.24.1(typescript@5.7.3)
-      eslint: 9.20.1(jiti@2.4.2)
+      '@eslint-community/eslint-utils': 4.5.1(eslint@9.22.0(jiti@2.4.2))
+      '@typescript-eslint/scope-manager': 8.26.1
+      '@typescript-eslint/types': 8.26.1
+      '@typescript-eslint/typescript-estree': 8.26.1(typescript@5.7.3)
+      eslint: 9.22.0(jiti@2.4.2)
       typescript: 5.7.3
     transitivePeerDependencies:
       - supports-color
 
-  '@typescript-eslint/visitor-keys@8.24.1':
+  '@typescript-eslint/visitor-keys@8.26.1':
     dependencies:
-      '@typescript-eslint/types': 8.24.1
+      '@typescript-eslint/types': 8.26.1
       eslint-visitor-keys: 4.2.0
 
-  '@vitejs/plugin-react-swc@3.8.0(vite@6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0))':
+  '@vitejs/plugin-react-swc@3.8.0(vite@6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0))':
     dependencies:
-      '@swc/core': 1.10.17
-      vite: 6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0)
+      '@swc/core': 1.11.9
+      vite: 6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0)
     transitivePeerDependencies:
       - '@swc/helpers'
 
-  acorn-jsx@5.3.2(acorn@8.14.0):
+  acorn-jsx@5.3.2(acorn@8.14.1):
     dependencies:
-      acorn: 8.14.0
+      acorn: 8.14.1
 
-  acorn@8.14.0: {}
+  acorn@8.14.1: {}
 
   aggregate-error@3.1.0:
     dependencies:
@@ -4527,7 +4384,7 @@ snapshots:
 
   ansi-styles@6.2.1: {}
 
-  ansis@3.15.0: {}
+  ansis@3.17.0: {}
 
   any-promise@1.3.0: {}
 
@@ -4552,17 +4409,17 @@ snapshots:
 
   asynckit@0.4.0: {}
 
-  autoprefixer@10.4.20(postcss@8.5.2):
+  autoprefixer@10.4.21(postcss@8.5.3):
     dependencies:
       browserslist: 4.24.4
-      caniuse-lite: 1.0.30001700
+      caniuse-lite: 1.0.30001705
       fraction.js: 4.3.7
       normalize-range: 0.1.2
       picocolors: 1.1.1
-      postcss: 8.5.2
+      postcss: 8.5.3
       postcss-value-parser: 4.2.0
 
-  axios@1.7.9:
+  axios@1.8.3:
     dependencies:
       follow-redirects: 1.15.9
       form-data: 4.0.2
@@ -4572,36 +4429,39 @@ snapshots:
 
   babel-dead-code-elimination@1.0.9:
     dependencies:
-      '@babel/core': 7.26.9
-      '@babel/parser': 7.26.9
-      '@babel/traverse': 7.26.9
-      '@babel/types': 7.26.9
+      '@babel/core': 7.26.10
+      '@babel/parser': 7.26.10
+      '@babel/traverse': 7.26.10
+      '@babel/types': 7.26.10
     transitivePeerDependencies:
       - supports-color
 
   balanced-match@1.0.2: {}
 
-  better-auth@1.1.18:
+  better-auth@1.2.4(typescript@5.7.3):
     dependencies:
       '@better-auth/utils': 0.2.3
-      '@better-fetch/fetch': 1.1.12
+      '@better-fetch/fetch': 1.1.15
       '@noble/ciphers': 0.6.0
       '@noble/hashes': 1.7.1
       '@simplewebauthn/browser': 13.1.0
       '@simplewebauthn/server': 13.1.1
-      better-call: 0.3.3
+      better-call: 1.0.4
       defu: 6.1.4
       jose: 5.10.0
-      kysely: 0.27.5
+      kysely: 0.27.6
       nanostores: 0.11.4
+      valibot: 1.0.0-beta.15(typescript@5.7.3)
       zod: 3.24.2
+    transitivePeerDependencies:
+      - typescript
 
-  better-call@0.3.3:
+  better-call@1.0.4:
     dependencies:
-      '@better-fetch/fetch': 1.1.12
+      '@better-fetch/fetch': 1.1.15
       rou3: 0.5.1
+      set-cookie-parser: 2.7.1
       uncrypto: 0.1.3
-      zod: 3.24.2
 
   binary-extensions@2.3.0: {}
 
@@ -4620,10 +4480,10 @@ snapshots:
 
   browserslist@4.24.4:
     dependencies:
-      caniuse-lite: 1.0.30001700
-      electron-to-chromium: 1.5.102
+      caniuse-lite: 1.0.30001705
+      electron-to-chromium: 1.5.119
       node-releases: 2.0.19
-      update-browserslist-db: 1.1.2(browserslist@4.24.4)
+      update-browserslist-db: 1.1.3(browserslist@4.24.4)
 
   call-bind-apply-helpers@1.0.2:
     dependencies:
@@ -4634,7 +4494,7 @@ snapshots:
 
   camelcase-css@2.0.1: {}
 
-  caniuse-lite@1.0.30001700: {}
+  caniuse-lite@1.0.30001705: {}
 
   chalk@4.1.2:
     dependencies:
@@ -4769,7 +4629,7 @@ snapshots:
 
   dom-helpers@5.2.1:
     dependencies:
-      '@babel/runtime': 7.26.9
+      '@babel/runtime': 7.26.10
       csstype: 3.1.3
 
   dunder-proto@1.0.1:
@@ -4786,7 +4646,7 @@ snapshots:
     optionalDependencies:
       wcwidth: 1.0.1
 
-  electron-to-chromium@1.5.102: {}
+  electron-to-chromium@1.5.119: {}
 
   emoji-regex@8.0.0: {}
 
@@ -4808,78 +4668,51 @@ snapshots:
   es-set-tostringtag@2.1.0:
     dependencies:
       es-errors: 1.3.0
-      get-intrinsic: 1.2.7
+      get-intrinsic: 1.3.0
       has-tostringtag: 1.0.2
       hasown: 2.0.2
 
-  esbuild@0.23.1:
+  esbuild@0.25.1:
     optionalDependencies:
-      '@esbuild/aix-ppc64': 0.23.1
-      '@esbuild/android-arm': 0.23.1
-      '@esbuild/android-arm64': 0.23.1
-      '@esbuild/android-x64': 0.23.1
-      '@esbuild/darwin-arm64': 0.23.1
-      '@esbuild/darwin-x64': 0.23.1
-      '@esbuild/freebsd-arm64': 0.23.1
-      '@esbuild/freebsd-x64': 0.23.1
-      '@esbuild/linux-arm': 0.23.1
-      '@esbuild/linux-arm64': 0.23.1
-      '@esbuild/linux-ia32': 0.23.1
-      '@esbuild/linux-loong64': 0.23.1
-      '@esbuild/linux-mips64el': 0.23.1
-      '@esbuild/linux-ppc64': 0.23.1
-      '@esbuild/linux-riscv64': 0.23.1
-      '@esbuild/linux-s390x': 0.23.1
-      '@esbuild/linux-x64': 0.23.1
-      '@esbuild/netbsd-x64': 0.23.1
-      '@esbuild/openbsd-arm64': 0.23.1
-      '@esbuild/openbsd-x64': 0.23.1
-      '@esbuild/sunos-x64': 0.23.1
-      '@esbuild/win32-arm64': 0.23.1
-      '@esbuild/win32-ia32': 0.23.1
-      '@esbuild/win32-x64': 0.23.1
-
-  esbuild@0.24.2:
-    optionalDependencies:
-      '@esbuild/aix-ppc64': 0.24.2
-      '@esbuild/android-arm': 0.24.2
-      '@esbuild/android-arm64': 0.24.2
-      '@esbuild/android-x64': 0.24.2
-      '@esbuild/darwin-arm64': 0.24.2
-      '@esbuild/darwin-x64': 0.24.2
-      '@esbuild/freebsd-arm64': 0.24.2
-      '@esbuild/freebsd-x64': 0.24.2
-      '@esbuild/linux-arm': 0.24.2
-      '@esbuild/linux-arm64': 0.24.2
-      '@esbuild/linux-ia32': 0.24.2
-      '@esbuild/linux-loong64': 0.24.2
-      '@esbuild/linux-mips64el': 0.24.2
-      '@esbuild/linux-ppc64': 0.24.2
-      '@esbuild/linux-riscv64': 0.24.2
-      '@esbuild/linux-s390x': 0.24.2
-      '@esbuild/linux-x64': 0.24.2
-      '@esbuild/netbsd-arm64': 0.24.2
-      '@esbuild/netbsd-x64': 0.24.2
-      '@esbuild/openbsd-arm64': 0.24.2
-      '@esbuild/openbsd-x64': 0.24.2
-      '@esbuild/sunos-x64': 0.24.2
-      '@esbuild/win32-arm64': 0.24.2
-      '@esbuild/win32-ia32': 0.24.2
-      '@esbuild/win32-x64': 0.24.2
+      '@esbuild/aix-ppc64': 0.25.1
+      '@esbuild/android-arm': 0.25.1
+      '@esbuild/android-arm64': 0.25.1
+      '@esbuild/android-x64': 0.25.1
+      '@esbuild/darwin-arm64': 0.25.1
+      '@esbuild/darwin-x64': 0.25.1
+      '@esbuild/freebsd-arm64': 0.25.1
+      '@esbuild/freebsd-x64': 0.25.1
+      '@esbuild/linux-arm': 0.25.1
+      '@esbuild/linux-arm64': 0.25.1
+      '@esbuild/linux-ia32': 0.25.1
+      '@esbuild/linux-loong64': 0.25.1
+      '@esbuild/linux-mips64el': 0.25.1
+      '@esbuild/linux-ppc64': 0.25.1
+      '@esbuild/linux-riscv64': 0.25.1
+      '@esbuild/linux-s390x': 0.25.1
+      '@esbuild/linux-x64': 0.25.1
+      '@esbuild/netbsd-arm64': 0.25.1
+      '@esbuild/netbsd-x64': 0.25.1
+      '@esbuild/openbsd-arm64': 0.25.1
+      '@esbuild/openbsd-x64': 0.25.1
+      '@esbuild/sunos-x64': 0.25.1
+      '@esbuild/win32-arm64': 0.25.1
+      '@esbuild/win32-ia32': 0.25.1
+      '@esbuild/win32-x64': 0.25.1
 
   escalade@3.2.0: {}
 
   escape-string-regexp@4.0.0: {}
 
-  eslint-plugin-react-hooks@5.1.0(eslint@9.20.1(jiti@2.4.2)):
+  eslint-plugin-react-hooks@5.2.0(eslint@9.22.0(jiti@2.4.2)):
     dependencies:
-      eslint: 9.20.1(jiti@2.4.2)
+      eslint: 9.22.0(jiti@2.4.2)
 
-  eslint-plugin-react-refresh@0.4.19(eslint@9.20.1(jiti@2.4.2)):
+  eslint-plugin-react-refresh@0.4.19(eslint@9.22.0(jiti@2.4.2)):
     dependencies:
-      eslint: 9.20.1(jiti@2.4.2)
+      eslint: 9.22.0(jiti@2.4.2)
 
-  eslint-scope@8.2.0:
+  eslint-scope@8.3.0:
     dependencies:
       esrecurse: 4.3.0
       estraverse: 5.3.0
@@ -4888,18 +4721,19 @@ snapshots:
 
   eslint-visitor-keys@4.2.0: {}
 
-  eslint@9.20.1(jiti@2.4.2):
+  eslint@9.22.0(jiti@2.4.2):
     dependencies:
-      '@eslint-community/eslint-utils': 4.4.1(eslint@9.20.1(jiti@2.4.2))
+      '@eslint-community/eslint-utils': 4.5.1(eslint@9.22.0(jiti@2.4.2))
       '@eslint-community/regexpp': 4.12.1
       '@eslint/config-array': 0.19.2
-      '@eslint/core': 0.11.0
-      '@eslint/eslintrc': 3.2.0
-      '@eslint/js': 9.20.0
-      '@eslint/plugin-kit': 0.2.5
+      '@eslint/config-helpers': 0.1.0
+      '@eslint/core': 0.12.0
+      '@eslint/eslintrc': 3.3.0
+      '@eslint/js': 9.22.0
+      '@eslint/plugin-kit': 0.2.7
       '@humanfs/node': 0.16.6
       '@humanwhocodes/module-importer': 1.0.1
-      '@humanwhocodes/retry': 0.4.1
+      '@humanwhocodes/retry': 0.4.2
       '@types/estree': 1.0.6
       '@types/json-schema': 7.0.15
       ajv: 6.12.6
@@ -4907,7 +4741,7 @@ snapshots:
       cross-spawn: 7.0.6
       debug: 4.4.0
       escape-string-regexp: 4.0.0
-      eslint-scope: 8.2.0
+      eslint-scope: 8.3.0
       eslint-visitor-keys: 4.2.0
       espree: 10.3.0
       esquery: 1.6.0
@@ -4931,8 +4765,8 @@ snapshots:
 
   espree@10.3.0:
     dependencies:
-      acorn: 8.14.0
-      acorn-jsx: 5.3.2(acorn@8.14.0)
+      acorn: 8.14.1
+      acorn-jsx: 5.3.2(acorn@8.14.1)
       eslint-visitor-keys: 4.2.0
 
   esquery@1.6.0:
@@ -4965,9 +4799,9 @@ snapshots:
 
   fast-levenshtein@2.0.6: {}
 
-  fastq@1.19.0:
+  fastq@1.19.1:
     dependencies:
-      reusify: 1.0.4
+      reusify: 1.1.0
 
   file-entry-cache@8.0.0:
     dependencies:
@@ -4991,7 +4825,7 @@ snapshots:
 
   follow-redirects@1.15.9: {}
 
-  foreground-child@3.3.0:
+  foreground-child@3.3.1:
     dependencies:
       cross-spawn: 7.0.6
       signal-exit: 4.1.0
@@ -5012,7 +4846,7 @@ snapshots:
 
   gensync@1.0.0-beta.2: {}
 
-  get-intrinsic@1.2.7:
+  get-intrinsic@1.3.0:
     dependencies:
       call-bind-apply-helpers: 1.0.2
       es-define-property: 1.0.1
@@ -5046,7 +4880,7 @@ snapshots:
 
   glob@10.4.5:
     dependencies:
-      foreground-child: 3.3.0
+      foreground-child: 3.3.1
       jackspeak: 3.4.3
       minimatch: 9.0.5
       minipass: 7.1.2
@@ -5158,11 +4992,11 @@ snapshots:
     dependencies:
       json-buffer: 3.0.1
 
-  knip@5.44.1(@types/node@22.13.4)(typescript@5.7.3):
+  knip@5.46.0(@types/node@22.13.10)(typescript@5.7.3):
     dependencies:
       '@nodelib/fs.walk': 3.0.1
       '@snyk/github-codeowners': 1.1.0
-      '@types/node': 22.13.4
+      '@types/node': 22.13.10
       easy-table: 1.2.0
       enhanced-resolve: 5.18.1
       fast-glob: 3.3.3
@@ -5179,13 +5013,15 @@ snapshots:
       zod: 3.24.2
       zod-validation-error: 3.4.0(zod@3.24.2)
 
-  kysely@0.27.5: {}
+  kysely@0.27.6: {}
 
   levn@0.4.1:
     dependencies:
       prelude-ls: 1.2.1
       type-check: 0.4.0
 
+  libphonenumber-js@1.12.6: {}
+
   lilconfig@3.1.3: {}
 
   lines-and-columns@1.2.4: {}
@@ -5247,7 +5083,7 @@ snapshots:
       object-assign: 4.1.1
       thenify-all: 1.6.0
 
-  nanoid@3.3.8: {}
+  nanoid@3.3.10: {}
 
   nanostores@0.11.4: {}
 
@@ -5313,28 +5149,28 @@ snapshots:
 
   pirates@4.0.6: {}
 
-  postcss-import@15.1.0(postcss@8.5.2):
+  postcss-import@15.1.0(postcss@8.5.3):
     dependencies:
-      postcss: 8.5.2
+      postcss: 8.5.3
       postcss-value-parser: 4.2.0
       read-cache: 1.0.0
       resolve: 1.22.10
 
-  postcss-js@4.0.1(postcss@8.5.2):
+  postcss-js@4.0.1(postcss@8.5.3):
     dependencies:
       camelcase-css: 2.0.1
-      postcss: 8.5.2
+      postcss: 8.5.3
 
-  postcss-load-config@4.0.2(postcss@8.5.2):
+  postcss-load-config@4.0.2(postcss@8.5.3):
     dependencies:
       lilconfig: 3.1.3
       yaml: 2.7.0
     optionalDependencies:
-      postcss: 8.5.2
+      postcss: 8.5.3
 
-  postcss-nested@6.2.0(postcss@8.5.2):
+  postcss-nested@6.2.0(postcss@8.5.3):
     dependencies:
-      postcss: 8.5.2
+      postcss: 8.5.3
       postcss-selector-parser: 6.1.2
 
   postcss-selector-parser@6.1.2:
@@ -5344,21 +5180,21 @@ snapshots:
 
   postcss-value-parser@4.2.0: {}
 
-  postcss@8.5.2:
+  postcss@8.5.3:
     dependencies:
-      nanoid: 3.3.8
+      nanoid: 3.3.10
       picocolors: 1.1.1
       source-map-js: 1.2.1
 
   prelude-ls@1.2.1: {}
 
-  prettier-plugin-tailwindcss@0.6.11(@trivago/prettier-plugin-sort-imports@4.3.0(prettier@3.5.1))(prettier@3.5.1):
+  prettier-plugin-tailwindcss@0.6.11(@trivago/prettier-plugin-sort-imports@4.3.0(prettier@3.5.3))(prettier@3.5.3):
     dependencies:
-      prettier: 3.5.1
+      prettier: 3.5.3
     optionalDependencies:
-      '@trivago/prettier-plugin-sort-imports': 4.3.0(prettier@3.5.1)
+      '@trivago/prettier-plugin-sort-imports': 4.3.0(prettier@3.5.3)
 
-  prettier@3.5.1: {}
+  prettier@3.5.3: {}
 
   pretty-ms@9.2.0:
     dependencies:
@@ -5437,7 +5273,7 @@ snapshots:
 
   react-transition-group@4.4.5(react-dom@19.0.0(react@19.0.0))(react@19.0.0):
     dependencies:
-      '@babel/runtime': 7.26.9
+      '@babel/runtime': 7.26.10
       dom-helpers: 5.2.1
       loose-envify: 1.4.0
       prop-types: 15.8.1
@@ -5483,31 +5319,31 @@ snapshots:
       path-parse: 1.0.7
       supports-preserve-symlinks-flag: 1.0.0
 
-  reusify@1.0.4: {}
+  reusify@1.1.0: {}
 
-  rollup@4.34.8:
+  rollup@4.35.0:
     dependencies:
       '@types/estree': 1.0.6
     optionalDependencies:
-      '@rollup/rollup-android-arm-eabi': 4.34.8
-      '@rollup/rollup-android-arm64': 4.34.8
-      '@rollup/rollup-darwin-arm64': 4.34.8
-      '@rollup/rollup-darwin-x64': 4.34.8
-      '@rollup/rollup-freebsd-arm64': 4.34.8
-      '@rollup/rollup-freebsd-x64': 4.34.8
-      '@rollup/rollup-linux-arm-gnueabihf': 4.34.8
-      '@rollup/rollup-linux-arm-musleabihf': 4.34.8
-      '@rollup/rollup-linux-arm64-gnu': 4.34.8
-      '@rollup/rollup-linux-arm64-musl': 4.34.8
-      '@rollup/rollup-linux-loongarch64-gnu': 4.34.8
-      '@rollup/rollup-linux-powerpc64le-gnu': 4.34.8
-      '@rollup/rollup-linux-riscv64-gnu': 4.34.8
-      '@rollup/rollup-linux-s390x-gnu': 4.34.8
-      '@rollup/rollup-linux-x64-gnu': 4.34.8
-      '@rollup/rollup-linux-x64-musl': 4.34.8
-      '@rollup/rollup-win32-arm64-msvc': 4.34.8
-      '@rollup/rollup-win32-ia32-msvc': 4.34.8
-      '@rollup/rollup-win32-x64-msvc': 4.34.8
+      '@rollup/rollup-android-arm-eabi': 4.35.0
+      '@rollup/rollup-android-arm64': 4.35.0
+      '@rollup/rollup-darwin-arm64': 4.35.0
+      '@rollup/rollup-darwin-x64': 4.35.0
+      '@rollup/rollup-freebsd-arm64': 4.35.0
+      '@rollup/rollup-freebsd-x64': 4.35.0
+      '@rollup/rollup-linux-arm-gnueabihf': 4.35.0
+      '@rollup/rollup-linux-arm-musleabihf': 4.35.0
+      '@rollup/rollup-linux-arm64-gnu': 4.35.0
+      '@rollup/rollup-linux-arm64-musl': 4.35.0
+      '@rollup/rollup-linux-loongarch64-gnu': 4.35.0
+      '@rollup/rollup-linux-powerpc64le-gnu': 4.35.0
+      '@rollup/rollup-linux-riscv64-gnu': 4.35.0
+      '@rollup/rollup-linux-s390x-gnu': 4.35.0
+      '@rollup/rollup-linux-x64-gnu': 4.35.0
+      '@rollup/rollup-linux-x64-musl': 4.35.0
+      '@rollup/rollup-win32-arm64-msvc': 4.35.0
+      '@rollup/rollup-win32-ia32-msvc': 4.35.0
+      '@rollup/rollup-win32-x64-msvc': 4.35.0
       fsevents: 2.3.3
 
   rou3@0.5.1: {}
@@ -5522,6 +5358,14 @@ snapshots:
 
   semver@7.7.1: {}
 
+  seroval-plugins@1.2.1(seroval@1.2.1):
+    dependencies:
+      seroval: 1.2.1
+
+  seroval@1.2.1: {}
+
+  set-cookie-parser@2.7.1: {}
+
   shebang-command@2.0.0:
     dependencies:
       shebang-regex: 3.0.0
@@ -5532,6 +5376,12 @@ snapshots:
 
   smol-toml@1.3.1: {}
 
+  solid-js@1.9.5:
+    dependencies:
+      csstype: 3.1.3
+      seroval: 1.2.1
+      seroval-plugins: 1.2.1(seroval@1.2.1)
+
   source-map-js@1.2.1: {}
 
   source-map@0.5.7: {}
@@ -5604,11 +5454,11 @@ snapshots:
       normalize-path: 3.0.0
       object-hash: 3.0.0
       picocolors: 1.1.1
-      postcss: 8.5.2
-      postcss-import: 15.1.0(postcss@8.5.2)
-      postcss-js: 4.0.1(postcss@8.5.2)
-      postcss-load-config: 4.0.2(postcss@8.5.2)
-      postcss-nested: 6.2.0(postcss@8.5.2)
+      postcss: 8.5.3
+      postcss-import: 15.1.0(postcss@8.5.3)
+      postcss-js: 4.0.1(postcss@8.5.3)
+      postcss-load-config: 4.0.2(postcss@8.5.3)
+      postcss-nested: 6.2.0(postcss@8.5.3)
       postcss-selector-parser: 6.1.2
       resolve: 1.22.10
       sucrase: 3.35.0
@@ -5643,9 +5493,9 @@ snapshots:
 
   tslib@2.8.1: {}
 
-  tsx@4.19.2:
+  tsx@4.19.3:
     dependencies:
-      esbuild: 0.23.1
+      esbuild: 0.25.1
       get-tsconfig: 4.10.0
     optionalDependencies:
       fsevents: 2.3.3
@@ -5654,12 +5504,12 @@ snapshots:
     dependencies:
       prelude-ls: 1.2.1
 
-  typescript-eslint@8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3):
+  typescript-eslint@8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3):
     dependencies:
-      '@typescript-eslint/eslint-plugin': 8.24.1(@typescript-eslint/parser@8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3))(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      '@typescript-eslint/parser': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      '@typescript-eslint/utils': 8.24.1(eslint@9.20.1(jiti@2.4.2))(typescript@5.7.3)
-      eslint: 9.20.1(jiti@2.4.2)
+      '@typescript-eslint/eslint-plugin': 8.26.1(@typescript-eslint/parser@8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3))(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      '@typescript-eslint/parser': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      '@typescript-eslint/utils': 8.26.1(eslint@9.22.0(jiti@2.4.2))(typescript@5.7.3)
+      eslint: 9.22.0(jiti@2.4.2)
       typescript: 5.7.3
     transitivePeerDependencies:
       - supports-color
@@ -5672,10 +5522,10 @@ snapshots:
 
   unplugin@2.2.0:
     dependencies:
-      acorn: 8.14.0
+      acorn: 8.14.1
       webpack-virtual-modules: 0.6.2
 
-  update-browserslist-db@1.1.2(browserslist@4.24.4):
+  update-browserslist-db@1.1.3(browserslist@4.24.4):
     dependencies:
       browserslist: 4.24.4
       escalade: 3.2.0
@@ -5706,6 +5556,10 @@ snapshots:
 
   util-deprecate@1.0.2: {}
 
+  valibot@1.0.0-beta.15(typescript@5.7.3):
+    optionalDependencies:
+      typescript: 5.7.3
+
   victory-vendor@36.9.2:
     dependencies:
       '@types/d3-array': 3.2.1
@@ -5723,16 +5577,16 @@ snapshots:
       d3-time: 3.1.0
       d3-timer: 3.0.1
 
-  vite@6.1.0(@types/node@22.13.4)(jiti@2.4.2)(tsx@4.19.2)(yaml@2.7.0):
+  vite@6.2.2(@types/node@22.13.10)(jiti@2.4.2)(tsx@4.19.3)(yaml@2.7.0):
     dependencies:
-      esbuild: 0.24.2
-      postcss: 8.5.2
-      rollup: 4.34.8
+      esbuild: 0.25.1
+      postcss: 8.5.3
+      rollup: 4.35.0
     optionalDependencies:
-      '@types/node': 22.13.4
+      '@types/node': 22.13.10
       fsevents: 2.3.3
       jiti: 2.4.2
-      tsx: 4.19.2
+      tsx: 4.19.3
       yaml: 2.7.0
 
   wcwidth@1.0.1:
diff --git a/src/components/layout/data/sidebar-data.ts b/src/components/layout/data/sidebar-data.ts
index f1fd30d..8aac1f6 100644
--- a/src/components/layout/data/sidebar-data.ts
+++ b/src/components/layout/data/sidebar-data.ts
@@ -15,6 +15,7 @@ import {
   IconServerOff,
   IconSettings,
   IconTool,
+  IconTruck,
   IconUserCog,
   IconUserOff,
   IconUsers,
@@ -55,6 +56,11 @@ export const getSidebarData = (): SidebarData => {
             url: '/packages',
             icon: IconChecklist,
           },
+          {
+            title: 'Delivery Persons',
+            url: '/delivery-persons',
+            icon: IconTruck,
+          },
           {
             title: 'Apps',
             url: '/apps',
diff --git a/src/components/layout/header.tsx b/src/components/layout/header.tsx
index 9ba54b8..ab70d08 100644
--- a/src/components/layout/header.tsx
+++ b/src/components/layout/header.tsx
@@ -1,38 +1,42 @@
-import React, { useState, useEffect } from 'react'
+import React from 'react'
 import { cn } from '@/lib/utils'
 import { Separator } from '@/components/ui/separator'
 import { SidebarTrigger } from '@/components/ui/sidebar'
 
-export function Header({
-  className,
-  fixed = false,
-  children,
-}: {
-  className?: string
+interface HeaderProps extends React.HTMLAttributes<HTMLElement> {
   fixed?: boolean
-  children?: React.ReactNode
-}) {
-  const [isScrolled, setIsScrolled] = useState(false)
+  ref?: React.Ref<HTMLElement>
+}
 
-  useEffect(() => {
-    if (!fixed) return
+export const Header = ({
+  className,
+  fixed,
+  children,
+  ...props
+}: HeaderProps) => {
+  const [offset, setOffset] = React.useState(0)
 
-    const handleScroll = () => {
-      setIsScrolled(window.scrollY > 0)
+  React.useEffect(() => {
+    const onScroll = () => {
+      setOffset(document.body.scrollTop || document.documentElement.scrollTop)
     }
 
-    window.addEventListener('scroll', handleScroll)
-    return () => window.removeEventListener('scroll', handleScroll)
-  }, [fixed])
+    // Add scroll listener to the body
+    document.addEventListener('scroll', onScroll, { passive: true })
+
+    // Clean up the event listener on unmount
+    return () => document.removeEventListener('scroll', onScroll)
+  }, [])
 
   return (
     <header
       className={cn(
-        'flex h-14 items-center gap-4 border-b bg-background',
-        fixed && 'sticky top-0 z-40',
-        isScrolled && 'shadow-sm',
+        'flex items-center gap-3 sm:gap-4 bg-background p-4 h-16',
+        fixed && 'header-fixed peer/header w-[inherit] fixed z-50 rounded-md',
+        offset > 10 && fixed ? 'shadow' : 'shadow-none',
         className
       )}
+      {...props}
     >
       <SidebarTrigger variant='outline' className='scale-125 sm:scale-100' />
       <Separator orientation='vertical' className='h-6' />
diff --git a/src/components/phone-input.tsx b/src/components/phone-input.tsx
new file mode 100644
index 0000000..bcaefa8
--- /dev/null
+++ b/src/components/phone-input.tsx
@@ -0,0 +1,48 @@
+import { forwardRef, useState } from 'react'
+import { Input } from './ui/input'
+import { AsYouType, parsePhoneNumber, CountryCode } from 'libphonenumber-js'
+import { ComponentPropsWithoutRef } from 'react'
+
+interface PhoneInputProps extends Omit<ComponentPropsWithoutRef<typeof Input>, 'onChange'> {
+  onChange?: (value: string, isValid: boolean) => void
+  defaultCountry?: CountryCode
+}
+
+export const PhoneInput = forwardRef<HTMLInputElement, PhoneInputProps>(
+  ({ onChange, defaultCountry = 'ET' as CountryCode, ...props }, ref) => {
+    const [formattedValue, setFormattedValue] = useState('')
+
+    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
+      // Remove any non-digit characters except + and spaces
+      const rawValue = e.target.value.replace(/[^\d\s+]/g, '')
+      
+      // Format the phone number as the user types
+      const formatter = new AsYouType(defaultCountry)
+      const formatted = formatter.input(rawValue)
+      setFormattedValue(formatted)
+
+      try {
+        // Try to parse the phone number to check validity
+        const phoneNumber = parsePhoneNumber(rawValue, defaultCountry)
+        const isValid = phoneNumber?.isValid() || false
+        
+        // Pass both the raw value and validity state to parent
+        onChange?.(rawValue, isValid)
+      } catch {
+        // If parsing fails, consider it invalid
+        onChange?.(rawValue, false)
+      }
+    }
+
+    return (
+      <Input
+        {...props}
+        ref={ref}
+        type="tel"
+        value={formattedValue}
+        onChange={handleChange}
+        placeholder={props.placeholder || '+251 9X XXX XXXX'}
+      />
+    )
+  }
+) 
\ No newline at end of file
diff --git a/src/components/ui/progress.tsx b/src/components/ui/progress.tsx
new file mode 100644
index 0000000..4d3998c
--- /dev/null
+++ b/src/components/ui/progress.tsx
@@ -0,0 +1,28 @@
+"use client"
+
+import * as React from "react"
+import * as ProgressPrimitive from "@radix-ui/react-progress"
+
+import { cn } from "@/lib/utils"
+
+const Progress = React.forwardRef<
+  React.ElementRef<typeof ProgressPrimitive.Root>,
+  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
+>(({ className, value, ...props }, ref) => (
+  <ProgressPrimitive.Root
+    ref={ref}
+    className={cn(
+      "relative h-2 w-full overflow-hidden rounded-full bg-secondary",
+      className
+    )}
+    {...props}
+  >
+    <ProgressPrimitive.Indicator
+      className="h-full w-full flex-1 bg-primary transition-all"
+      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
+    />
+  </ProgressPrimitive.Root>
+))
+Progress.displayName = ProgressPrimitive.Root.displayName
+
+export { Progress } 
\ No newline at end of file
diff --git a/src/features/auth/sign-in/components/user-auth-form.tsx b/src/features/auth/sign-in/components/user-auth-form.tsx
index e76c1da..f2d7b93 100644
--- a/src/features/auth/sign-in/components/user-auth-form.tsx
+++ b/src/features/auth/sign-in/components/user-auth-form.tsx
@@ -1,12 +1,12 @@
 /* eslint-disable no-console */
-import { HTMLAttributes, useState } from 'react'
+import { HTMLAttributes } from 'react'
 import { z } from 'zod'
 import { useForm } from 'react-hook-form'
 import { zodResolver } from '@hookform/resolvers/zod'
 import { Link, useNavigate } from '@tanstack/react-router'
 import { cn } from '@/lib/utils'
 import { Button } from '@/components/ui/button'
-
+import { parsePhoneNumber } from 'libphonenumber-js'
 import {
   Form,
   FormControl,
@@ -15,11 +15,12 @@ import {
   FormLabel,
   FormMessage,
 } from '@/components/ui/form'
-import { Input } from '@/components/ui/input'
+import { PhoneInput } from '@/components/phone-input'
 import { PasswordInput } from '@/components/password-input'
 import { authClient } from '@/lib/auth-client'
 import { toast } from '@/hooks/use-toast'
 import { useAuthStore } from '@/stores/authStore'
+import { Loader2 } from 'lucide-react'
 
 type UserAuthFormProps = HTMLAttributes<HTMLDivElement>
 
@@ -39,9 +40,6 @@ const formSchema = z.object({
 
 export function UserAuthForm({ className, ...props }: UserAuthFormProps) {
   const navigate = useNavigate()
-
-  const [isLoading, setIsLoading] = useState(false)
-
   const form = useForm<z.infer<typeof formSchema>>({
     resolver: zodResolver(formSchema),
     defaultValues: {
@@ -51,97 +49,149 @@ export function UserAuthForm({ className, ...props }: UserAuthFormProps) {
   })
 
   async function onSubmit(data: z.infer<typeof formSchema>) {
-    setIsLoading(true)
-    console.log(data)
+    try {
+      console.log('Raw form data:', data)
+      const phoneNumber = parsePhoneNumber(data.phoneNumber, 'ET') // Ethiopia country code
+      if (!phoneNumber?.isValid()) {
+        toast({
+          variant: 'destructive',
+          title: 'Invalid phone number',
+          description: 'Please enter a valid Ethiopian phone number',
+        })
+        return
+      }
 
-    await authClient.signIn.phoneNumber({
-      phoneNumber: data.phoneNumber,
-      password: data.password,
-      rememberMe: true //optional defaults to true
-    },
-      {
-        onRequest: () => {
-          //show loading
-          setIsLoading(true)
+      const e164PhoneNumber = phoneNumber.format('E.164') // Ensure E.164 format
+      console.log('Submission payload:', {
+        phoneNumber: e164PhoneNumber,
+        password: data.password,
+        rememberMe: true
+      })
+      
+      await authClient.signIn.phoneNumber(
+        {
+          phoneNumber: e164PhoneNumber,
+          password: data.password,
+          rememberMe: true
         },
-        onSuccess: (ctx) => {
-          try {
-            const authStore = useAuthStore.getState().auth;
-            const sessionToken = ctx.data.token;
-            const user = ctx.data.user;
-            console.log("Login user: ", user);
-            if (sessionToken) {
-              authStore.setAccessToken(sessionToken);
-            }
-            if (user) {
-              authStore.setUser(user);
+        {
+          onRequest: () => {
+            // Loading state is handled by the form's isSubmitting state
+          },
+          onSuccess: (ctx) => {
+            try {
+              const authStore = useAuthStore.getState().auth
+              const sessionToken = ctx.data.token
+              const user = ctx.data.user
+              if (sessionToken) {
+                authStore.setAccessToken(sessionToken)
+              }
+              if (user) {
+                authStore.setUser(user)
+              }
+              toast({
+                title: 'Welcome back!',
+                description: 'You have successfully logged in.',
+              })
+              navigate({ to: '/' })
+            } catch (err) {
+              console.error('Login error:', err)
+              toast({
+                variant: 'destructive',
+                title: 'Something went wrong',
+                description: 'Could not complete login. Please try again.',
+              })
             }
-          } catch (error) {
-            alert(JSON.stringify(error));
+          },
+          onError: (ctx) => {
+            toast({
+              variant: 'destructive',
+              title: 'Login failed',
+              description: ctx.error.message || 'Please check your credentials and try again.',
+            })
+          },
+          retry: {
+            type: 'linear',
+            delay: 1000,
+            attempts: 3
           }
-          setIsLoading(false)
-          navigate({ to: '/' })
-        },
-        onError: (ctx) => {
-          setIsLoading(false)
-          toast({
-            variant: 'destructive',
-            title: 'Something went wrong!',
-            description: (
-              <span>
-                {ctx.error.message}
-              </span>
-            ),
-          })
-        },
+        }
+      )
+    } catch (err) {
+      console.error('Phone number parsing error:', err)
+      toast({
+        variant: 'destructive',
+        title: 'Invalid phone number',
+        description: 'Please enter a valid phone number',
       })
+    }
   }
 
+  const isLoading = form.formState.isSubmitting
+
   return (
     <div className={cn('grid gap-6', className)} {...props}>
       <Form {...form}>
-        <form onSubmit={form.handleSubmit(onSubmit)}>
-          <div className='grid gap-2'>
-            <FormField
-              control={form.control}
-              name='phoneNumber'
-              render={({ field }) => (
-                <FormItem className='space-y-1'>
-                  <FormLabel>Phone number</FormLabel>
-                  <FormControl>
-                    <Input placeholder='911121314' {...field} />
-                  </FormControl>
-                  <FormMessage />
-                </FormItem>
-              )}
-            />
-            <FormField
-              control={form.control}
-              name='password'
-              render={({ field }) => (
-                <FormItem className='space-y-1'>
-                  <div className='flex items-center justify-between'>
-                    <FormLabel>Password</FormLabel>
-                    <Link
-                      to='/forgot-password'
-                      className='text-sm font-medium text-muted-foreground hover:opacity-75'
-                    >
-                      Forgot password?
-                    </Link>
-                  </div>
-                  <FormControl>
-                    <PasswordInput placeholder='********' {...field} />
-                  </FormControl>
-                  <FormMessage />
-                </FormItem>
-              )}
-            />
-            <Button className='mt-2' disabled={isLoading}>
-              Login
-            </Button>
-
-
-          </div>
+        <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-4">
+          <FormField
+            control={form.control}
+            name='phoneNumber'
+            render={({ field: { onChange, ...field } }) => (
+              <FormItem className='space-y-1'>
+                <FormLabel>Phone number</FormLabel>
+                <FormControl>
+                  <PhoneInput 
+                    {...field}
+                    defaultCountry="ET"
+                    placeholder="+251 9X XXX XXXX"
+                    onChange={(value: string, isValid: boolean) => {
+                      onChange(value)
+                      if (!isValid) {
+                        form.setError('phoneNumber', {
+                          type: 'manual',
+                          message: 'Please enter a valid Ethiopian phone number'
+                        })
+                      } else {
+                        form.clearErrors('phoneNumber')
+                      }
+                    }}
+                  />
+                </FormControl>
+                <FormMessage />
+              </FormItem>
+            )}
+          />
+          <FormField
+            control={form.control}
+            name='password'
+            render={({ field }) => (
+              <FormItem className='space-y-1'>
+                <div className='flex items-center justify-between'>
+                  <FormLabel>Password</FormLabel>
+                  <Link
+                    to='/forgot-password'
+                    className='text-sm font-medium text-muted-foreground hover:opacity-75'
+                  >
+                    Forgot password?
+                  </Link>
+                </div>
+                <FormControl>
+                  <PasswordInput placeholder='********' {...field} />
+                </FormControl>
+                <FormMessage />
+              </FormItem>
+            )}
+          />
+          <Button className='w-full' disabled={isLoading}>
+            {isLoading ? (
+              <>
+                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                Signing in...
+              </>
+            ) : (
+              'Sign in'
+            )}
+          </Button>
         </form>
       </Form>
     </div>
diff --git a/src/features/customers/data/customerApi.ts b/src/features/customers/data/customerApi.ts
index 061912b..1b421c8 100644
--- a/src/features/customers/data/customerApi.ts
+++ b/src/features/customers/data/customerApi.ts
@@ -1,11 +1,45 @@
 import axios from 'axios'
 import { Customer } from '../types'
+import { useAuthStore } from '@/stores/authStore'
+
+// Get the appropriate API URL based on environment
+const apiUrl = import.meta.env.DEV 
+  ? import.meta.env.VITE_API_URL 
+  : import.meta.env.VITE_PRODUCTION_API_URL
+
+if (!apiUrl) {
+  throw new Error('API URL not configured. Please check your environment variables.')
+}
+
+// Log which API URL is being used in development
+if (import.meta.env.DEV) {
+  // eslint-disable-next-line no-console
+  console.log(`🌐 Using API URL: ${apiUrl}`)
+}
 
 const api = axios.create({
-  baseURL: 'https://courier-server-q8dx.onrender.com/api',
+  baseURL: apiUrl,
   withCredentials: true,
 })
 
+// Add auth token to requests
+api.interceptors.request.use((config) => {
+  const token = useAuthStore.getState().auth.accessToken
+  if (token) {
+    config.headers.Authorization = `Bearer ${token}`
+  }
+  return config
+})
+
+// Log API requests in development
+if (import.meta.env.DEV) {
+  api.interceptors.request.use((config) => {
+    // eslint-disable-next-line no-console
+    console.log(`🌐 ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`)
+    return config
+  })
+}
+
 interface PaginationResponse {
   total: number
   pages: number
diff --git a/src/features/delivery-persons/components/columns.tsx b/src/features/delivery-persons/components/columns.tsx
new file mode 100644
index 0000000..807ae8a
--- /dev/null
+++ b/src/features/delivery-persons/components/columns.tsx
@@ -0,0 +1,124 @@
+import { ColumnDef } from '@tanstack/react-table'
+import { Badge } from '@/components/ui/badge'
+import { DeliveryPerson, DeliveryPersonStatus, DeliveryStatus } from '../types'
+import { DataTableColumnHeader } from './data-table-column-header'
+import { DataTableRowActions } from './data-table-row-actions'
+import { Star, Car, Phone } from 'lucide-react'
+import { cn } from '@/lib/utils'
+
+export const columns: ColumnDef<DeliveryPerson>[] = [
+  {
+    accessorKey: 'name',
+    header: ({ column }) => (
+      <DataTableColumnHeader column={column} title='Name' />
+    ),
+    cell: ({ row }) => {
+      const name: string = row.getValue('name')
+      return <div className="font-medium">{name}</div>
+    },
+    enableSorting: true,
+    enableHiding: false,
+  },
+  {
+    accessorKey: 'phoneNumber',
+    header: ({ column }) => (
+      <DataTableColumnHeader column={column} title='Phone' />
+    ),
+    cell: ({ row }) => {
+      const phone: string = row.getValue('phoneNumber')
+      return (
+        <div className="flex items-center gap-2">
+          <Phone className="h-4 w-4 text-muted-foreground" />
+          <span>{phone}</span>
+        </div>
+      )
+    },
+    enableSorting: false,
+  },
+  {
+    accessorKey: 'status',
+    header: ({ column }) => (
+      <DataTableColumnHeader column={column} title='Status' />
+    ),
+    cell: ({ row }) => {
+      const status = row.getValue('status') as DeliveryPersonStatus
+      return (
+        <Badge variant={status === DeliveryPersonStatus.ONLINE ? "success" : "secondary"}>
+          {status === DeliveryPersonStatus.ONLINE ? 'Online' : 'Offline'}
+        </Badge>
+      )
+    },
+    filterFn: (row, id, value) => {
+      return value.includes(row.getValue(id))
+    },
+    enableSorting: false,
+  },
+  {
+    accessorKey: 'averageRating',
+    header: ({ column }) => (
+      <DataTableColumnHeader column={column} title='Rating' />
+    ),
+    cell: ({ row }) => {
+      const rating: number = row.getValue('averageRating')
+      return (
+        <div className="flex items-center gap-1">
+          <Star className={cn(
+            "h-4 w-4",
+            rating >= 4.5 ? "text-yellow-500" : "text-muted-foreground"
+          )} />
+          <span>{rating.toFixed(1)}</span>
+        </div>
+      )
+    },
+    enableSorting: true,
+  },
+  {
+    id: 'vehicles',
+    accessorFn: (row) => row.vehicles,
+    header: ({ column }) => (
+      <DataTableColumnHeader column={column} title='Vehicles' />
+    ),
+    cell: ({ row }) => {
+      const vehicles = row.original.vehicles
+      if (!vehicles?.length) return null
+
+      return (
+        <div className="flex flex-wrap gap-1">
+          {vehicles.map((vehicle) => (
+            <Badge key={vehicle.id} variant="outline" className="flex items-center gap-1">
+              <Car className="h-3 w-3" />
+              <span>{vehicle.type}</span>
+            </Badge>
+          ))}
+        </div>
+      )
+    },
+    enableSorting: false,
+  },
+  {
+    id: 'deliveries',
+    header: ({ column }) => (
+      <DataTableColumnHeader column={column} title='Deliveries' />
+    ),
+    cell: ({ row }) => {
+      const completed = row.original.completedDeliveries
+      const failed = row.original.failedDeliveries
+      const total = completed + failed
+      const successRate = total > 0 ? (completed / total) * 100 : 0
+
+      return (
+        <div className="space-y-1">
+          <div className="text-sm font-medium">{total} total</div>
+          <div className="text-xs text-muted-foreground">
+            {successRate.toFixed(1)}% success rate
+          </div>
+        </div>
+      )
+    },
+    enableSorting: true,
+  },
+  {
+    id: 'actions',
+    cell: ({ row }) => <DataTableRowActions row={row} />,
+  },
+] 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table-column-header.tsx b/src/features/delivery-persons/components/data-table-column-header.tsx
new file mode 100644
index 0000000..7b662b6
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table-column-header.tsx
@@ -0,0 +1,62 @@
+import { Column } from '@tanstack/react-table'
+import { ChevronsUpDown, EyeOff, SortAsc, SortDesc } from 'lucide-react'
+import { Button } from '@/components/ui/button'
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from '@/components/ui/dropdown-menu'
+
+interface DataTableColumnHeaderProps<TData, TValue> {
+  column: Column<TData, TValue>
+  title: string
+}
+
+export function DataTableColumnHeader<TData, TValue>({
+  column,
+  title,
+}: DataTableColumnHeaderProps<TData, TValue>) {
+  if (!column.getCanSort()) {
+    return <div className="text-sm font-medium">{title}</div>
+  }
+
+  return (
+    <div className="flex items-center space-x-2">
+      <DropdownMenu>
+        <DropdownMenuTrigger asChild>
+          <Button
+            variant="ghost"
+            size="sm"
+            className="-ml-3 h-8 data-[state=open]:bg-accent"
+          >
+            <span>{title}</span>
+            {column.getIsSorted() === "desc" ? (
+              <SortDesc className="ml-2 h-4 w-4" />
+            ) : column.getIsSorted() === "asc" ? (
+              <SortAsc className="ml-2 h-4 w-4" />
+            ) : (
+              <ChevronsUpDown className="ml-2 h-4 w-4" />
+            )}
+          </Button>
+        </DropdownMenuTrigger>
+        <DropdownMenuContent align="start">
+          <DropdownMenuItem onClick={() => column.toggleSorting(false)}>
+            <SortAsc className="mr-2 h-3.5 w-3.5 text-muted-foreground/70" />
+            Asc
+          </DropdownMenuItem>
+          <DropdownMenuItem onClick={() => column.toggleSorting(true)}>
+            <SortDesc className="mr-2 h-3.5 w-3.5 text-muted-foreground/70" />
+            Desc
+          </DropdownMenuItem>
+          {column.getCanHide() && (
+            <DropdownMenuItem onClick={() => column.toggleVisibility(false)}>
+              <EyeOff className="mr-2 h-3.5 w-3.5 text-muted-foreground/70" />
+              Hide
+            </DropdownMenuItem>
+          )}
+        </DropdownMenuContent>
+      </DropdownMenu>
+    </div>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table-faceted-filter.tsx b/src/features/delivery-persons/components/data-table-faceted-filter.tsx
new file mode 100644
index 0000000..dac7f01
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table-faceted-filter.tsx
@@ -0,0 +1,145 @@
+import { Column } from '@tanstack/react-table'
+import { Check, PlusCircle } from 'lucide-react'
+import { cn } from '@/lib/utils'
+import { Badge } from '@/components/ui/badge'
+import { Button } from '@/components/ui/button'
+import {
+  Command,
+  CommandEmpty,
+  CommandGroup,
+  CommandInput,
+  CommandItem,
+  CommandList,
+  CommandSeparator,
+} from '@/components/ui/command'
+import {
+  Popover,
+  PopoverContent,
+  PopoverTrigger,
+} from '@/components/ui/popover'
+import { Separator } from '@/components/ui/separator'
+
+interface DataTableFacetedFilterProps<TData, TValue> {
+  column?: Column<TData, TValue>
+  title?: string
+  options: {
+    label: string
+    value: string
+    icon?: React.ComponentType<{ className?: string }>
+  }[]
+}
+
+export function DataTableFacetedFilter<TData, TValue>({
+  column,
+  title,
+  options,
+}: DataTableFacetedFilterProps<TData, TValue>) {
+  const facets = column?.getFacetedUniqueValues()
+  const selectedValues = new Set(column?.getFilterValue() as string[])
+
+  return (
+    <Popover>
+      <PopoverTrigger asChild>
+        <Button variant="outline" size="sm" className="h-8 border-dashed">
+          <PlusCircle className="mr-2 h-4 w-4" />
+          {title}
+          {selectedValues?.size > 0 && (
+            <>
+              <Separator orientation="vertical" className="mx-2 h-4" />
+              <Badge
+                variant="secondary"
+                className="rounded-sm px-1 font-normal lg:hidden"
+              >
+                {selectedValues.size}
+              </Badge>
+              <div className="hidden space-x-1 lg:flex">
+                {selectedValues.size > 2 ? (
+                  <Badge
+                    variant="secondary"
+                    className="rounded-sm px-1 font-normal"
+                  >
+                    {selectedValues.size} selected
+                  </Badge>
+                ) : (
+                  options
+                    .filter((option) => selectedValues.has(option.value))
+                    .map((option) => (
+                      <Badge
+                        variant="secondary"
+                        key={option.value}
+                        className="rounded-sm px-1 font-normal"
+                      >
+                        {option.label}
+                      </Badge>
+                    ))
+                )}
+              </div>
+            </>
+          )}
+        </Button>
+      </PopoverTrigger>
+      <PopoverContent className="w-[200px] p-0" align="start">
+        <Command>
+          <CommandInput placeholder={title} />
+          <CommandList>
+            <CommandEmpty>No results found.</CommandEmpty>
+            <CommandGroup>
+              {options.map((option) => {
+                const isSelected = selectedValues.has(option.value)
+                return (
+                  <CommandItem
+                    key={option.value}
+                    onSelect={() => {
+                      if (isSelected) {
+                        selectedValues.delete(option.value)
+                      } else {
+                        selectedValues.add(option.value)
+                      }
+                      const filterValues = Array.from(selectedValues)
+                      column?.setFilterValue(
+                        filterValues.length ? filterValues : undefined
+                      )
+                    }}
+                  >
+                    <div
+                      className={cn(
+                        'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',
+                        isSelected
+                          ? 'bg-primary text-primary-foreground'
+                          : 'opacity-50 [&_svg]:invisible'
+                      )}
+                    >
+                      <Check className={cn('h-4 w-4')} />
+                    </div>
+                    {option.icon && (
+                      <option.icon className="mr-2 h-4 w-4 text-muted-foreground" />
+                    )}
+                    <span>{option.label}</span>
+                    {facets?.get(option.value) && (
+                      <span className="ml-auto flex h-4 w-4 items-center justify-center font-mono text-xs">
+                        {facets.get(option.value)}
+                      </span>
+                    )}
+                  </CommandItem>
+                )
+              })}
+            </CommandGroup>
+            {selectedValues.size > 0 && (
+              <>
+                <CommandSeparator />
+                <CommandGroup>
+                  <CommandItem
+                    onSelect={() => column?.setFilterValue(undefined)}
+                    className="justify-center text-center"
+                  >
+                    Clear filters
+                  </CommandItem>
+                </CommandGroup>
+              </>
+            )}
+          </CommandList>
+        </Command>
+      </PopoverContent>
+    </Popover>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table-pagination.tsx b/src/features/delivery-persons/components/data-table-pagination.tsx
new file mode 100644
index 0000000..65afa4a
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table-pagination.tsx
@@ -0,0 +1,96 @@
+import { Table } from '@tanstack/react-table'
+import {
+  ChevronLeft,
+  ChevronRight,
+  ChevronsLeft,
+  ChevronsRight,
+} from 'lucide-react'
+import { Button } from '@/components/ui/button'
+import {
+  Select,
+  SelectContent,
+  SelectItem,
+  SelectTrigger,
+  SelectValue,
+} from '@/components/ui/select'
+
+interface DataTablePaginationProps<TData> {
+  table: Table<TData>
+}
+
+export function DataTablePagination<TData>({
+  table,
+}: DataTablePaginationProps<TData>) {
+  return (
+    <div className="flex items-center justify-between px-2">
+      <div className="flex-1 text-sm text-muted-foreground">
+        {table.getFilteredSelectedRowModel().rows.length} of{' '}
+        {table.getFilteredRowModel().rows.length} row(s) selected.
+      </div>
+      <div className="flex items-center space-x-6 lg:space-x-8">
+        <div className="flex items-center space-x-2">
+          <p className="text-sm font-medium">Rows per page</p>
+          <Select
+            value={`${table.getState().pagination.pageSize}`}
+            onValueChange={(value) => {
+              table.setPageSize(Number(value))
+            }}
+          >
+            <SelectTrigger className="h-8 w-[70px]">
+              <SelectValue placeholder={table.getState().pagination.pageSize} />
+            </SelectTrigger>
+            <SelectContent side="top">
+              {[10, 20, 30, 40, 50].map((pageSize) => (
+                <SelectItem key={pageSize} value={`${pageSize}`}>
+                  {pageSize}
+                </SelectItem>
+              ))}
+            </SelectContent>
+          </Select>
+        </div>
+        <div className="flex w-[100px] items-center justify-center text-sm font-medium">
+          Page {table.getState().pagination.pageIndex + 1} of{' '}
+          {table.getPageCount()}
+        </div>
+        <div className="flex items-center space-x-2">
+          <Button
+            variant="outline"
+            className="hidden h-8 w-8 p-0 lg:flex"
+            onClick={() => table.setPageIndex(0)}
+            disabled={!table.getCanPreviousPage()}
+          >
+            <span className="sr-only">Go to first page</span>
+            <ChevronsLeft className="h-4 w-4" />
+          </Button>
+          <Button
+            variant="outline"
+            className="h-8 w-8 p-0"
+            onClick={() => table.previousPage()}
+            disabled={!table.getCanPreviousPage()}
+          >
+            <span className="sr-only">Go to previous page</span>
+            <ChevronLeft className="h-4 w-4" />
+          </Button>
+          <Button
+            variant="outline"
+            className="h-8 w-8 p-0"
+            onClick={() => table.nextPage()}
+            disabled={!table.getCanNextPage()}
+          >
+            <span className="sr-only">Go to next page</span>
+            <ChevronRight className="h-4 w-4" />
+          </Button>
+          <Button
+            variant="outline"
+            className="hidden h-8 w-8 p-0 lg:flex"
+            onClick={() => table.setPageIndex(table.getPageCount() - 1)}
+            disabled={!table.getCanNextPage()}
+          >
+            <span className="sr-only">Go to last page</span>
+            <ChevronsRight className="h-4 w-4" />
+          </Button>
+        </div>
+      </div>
+    </div>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table-row-actions.tsx b/src/features/delivery-persons/components/data-table-row-actions.tsx
new file mode 100644
index 0000000..2a9a08b
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table-row-actions.tsx
@@ -0,0 +1,54 @@
+import { Row } from '@tanstack/react-table'
+import { MoreHorizontal, Eye, UserCog } from 'lucide-react'
+import { Button } from '@/components/ui/button'
+import {
+  DropdownMenu,
+  DropdownMenuContent,
+  DropdownMenuItem,
+  DropdownMenuTrigger,
+} from '@/components/ui/dropdown-menu'
+import { DeliveryPerson } from '../types'
+import { useNavigate } from '@tanstack/react-router'
+
+interface DataTableRowActionsProps {
+  row: Row<DeliveryPerson>
+}
+
+export function DataTableRowActions({ row }: DataTableRowActionsProps) {
+  const navigate = useNavigate()
+  const deliveryPerson = row.original
+
+  return (
+    <DropdownMenu>
+      <DropdownMenuTrigger asChild>
+        <Button
+          variant="ghost"
+          className="flex h-8 w-8 p-0 data-[state=open]:bg-muted"
+        >
+          <MoreHorizontal className="h-4 w-4" />
+          <span className="sr-only">Open menu</span>
+        </Button>
+      </DropdownMenuTrigger>
+      <DropdownMenuContent align="end" className="w-[160px]">
+        <DropdownMenuItem
+          onClick={() => navigate({ 
+            to: '/delivery-persons/$id',
+            params: { id: deliveryPerson.id }
+          })}
+        >
+          <Eye className="mr-2 h-4 w-4" />
+          View Details
+        </DropdownMenuItem>
+        <DropdownMenuItem
+          onClick={() => navigate({ 
+            to: '/delivery-persons/$id/edit',
+            params: { id: deliveryPerson.id }
+          })}
+        >
+          <UserCog className="mr-2 h-4 w-4" />
+          Edit Profile
+        </DropdownMenuItem>
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table-toolbar.tsx b/src/features/delivery-persons/components/data-table-toolbar.tsx
new file mode 100644
index 0000000..4d8d1e8
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table-toolbar.tsx
@@ -0,0 +1,57 @@
+import { Cross2Icon } from '@radix-ui/react-icons'
+import { Table } from '@tanstack/react-table'
+import { Button } from '@/components/ui/button'
+import { Input } from '@/components/ui/input'
+import { DataTableViewOptions } from './data-table-view-options'
+import { DeliveryPerson, DeliveryPersonStatus } from '../types'
+import { DataTableFacetedFilter } from './data-table-faceted-filter'
+
+interface DataTableToolbarProps {
+  table: Table<DeliveryPerson>
+}
+
+export function DataTableToolbar({ table }: DataTableToolbarProps) {
+  const isFiltered = table.getState().columnFilters.length > 0
+
+  return (
+    <div className="flex items-center justify-between">
+      <div className="flex flex-1 items-center space-x-2">
+        <Input
+          placeholder="Filter delivery persons..."
+          value={(table.getColumn('name')?.getFilterValue() as string) ?? ''}
+          onChange={(event) =>
+            table.getColumn('name')?.setFilterValue(event.target.value)
+          }
+          className="h-8 w-[150px] lg:w-[250px]"
+        />
+        {table.getColumn('status') && (
+          <DataTableFacetedFilter
+            column={table.getColumn('status')}
+            title="Status"
+            options={[
+              {
+                label: 'Online',
+                value: DeliveryPersonStatus.ONLINE,
+              },
+              {
+                label: 'Offline',
+                value: DeliveryPersonStatus.OFFLINE,
+              },
+            ]}
+          />
+        )}
+        {isFiltered && (
+          <Button
+            variant="ghost"
+            onClick={() => table.resetColumnFilters()}
+            className="h-8 px-2 lg:px-3"
+          >
+            Reset
+            <Cross2Icon className="ml-2 h-4 w-4" />
+          </Button>
+        )}
+      </div>
+      <DataTableViewOptions table={table} />
+    </div>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table-view-options.tsx b/src/features/delivery-persons/components/data-table-view-options.tsx
new file mode 100644
index 0000000..ec1494d
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table-view-options.tsx
@@ -0,0 +1,56 @@
+import { DropdownMenuTrigger } from '@radix-ui/react-dropdown-menu'
+import { MixerHorizontalIcon } from '@radix-ui/react-icons'
+import { Table } from '@tanstack/react-table'
+import { Button } from '@/components/ui/button'
+import {
+  DropdownMenu,
+  DropdownMenuCheckboxItem,
+  DropdownMenuContent,
+  DropdownMenuLabel,
+  DropdownMenuSeparator,
+} from '@/components/ui/dropdown-menu'
+
+interface DataTableViewOptionsProps<TData> {
+  table: Table<TData>
+}
+
+export function DataTableViewOptions<TData>({
+  table,
+}: DataTableViewOptionsProps<TData>) {
+  return (
+    <DropdownMenu>
+      <DropdownMenuTrigger asChild>
+        <Button
+          variant="outline"
+          size="sm"
+          className="ml-auto hidden h-8 lg:flex"
+        >
+          <MixerHorizontalIcon className="mr-2 h-4 w-4" />
+          View
+        </Button>
+      </DropdownMenuTrigger>
+      <DropdownMenuContent align="end" className="w-[150px]">
+        <DropdownMenuLabel>Toggle columns</DropdownMenuLabel>
+        <DropdownMenuSeparator />
+        {table
+          .getAllColumns()
+          .filter(
+            (column) =>
+              typeof column.accessorFn !== 'undefined' && column.getCanHide()
+          )
+          .map((column) => {
+            return (
+              <DropdownMenuCheckboxItem
+                key={column.id}
+                className="capitalize"
+                checked={column.getIsVisible()}
+                onCheckedChange={(value) => column.toggleVisibility(!!value)}
+              >
+                {column.id}
+              </DropdownMenuCheckboxItem>
+            )
+          })}
+      </DropdownMenuContent>
+    </DropdownMenu>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/components/data-table.tsx b/src/features/delivery-persons/components/data-table.tsx
new file mode 100644
index 0000000..7bd7f23
--- /dev/null
+++ b/src/features/delivery-persons/components/data-table.tsx
@@ -0,0 +1,119 @@
+import {
+  ColumnDef,
+  ColumnFiltersState,
+  SortingState,
+  VisibilityState,
+  flexRender,
+  getCoreRowModel,
+  getFacetedRowModel,
+  getFacetedUniqueValues,
+  getFilteredRowModel,
+  getPaginationRowModel,
+  getSortedRowModel,
+  useReactTable,
+} from '@tanstack/react-table'
+import {
+  Table,
+  TableBody,
+  TableCell,
+  TableHead,
+  TableHeader,
+  TableRow,
+} from '@/components/ui/table'
+import { useState } from 'react'
+import { DataTablePagination } from './data-table-pagination'
+import { DataTableToolbar } from './data-table-toolbar'
+
+interface DataTableProps<TData, TValue> {
+  columns: ColumnDef<TData, TValue>[]
+  data: TData[]
+}
+
+export function DataTable<TData, TValue>({
+  columns,
+  data,
+}: DataTableProps<TData, TValue>) {
+  const [rowSelection, setRowSelection] = useState({})
+  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({})
+  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([])
+  const [sorting, setSorting] = useState<SortingState>([])
+
+  const table = useReactTable({
+    data,
+    columns,
+    state: {
+      sorting,
+      columnVisibility,
+      rowSelection,
+      columnFilters,
+    },
+    enableRowSelection: true,
+    onRowSelectionChange: setRowSelection,
+    onSortingChange: setSorting,
+    onColumnFiltersChange: setColumnFilters,
+    onColumnVisibilityChange: setColumnVisibility,
+    getCoreRowModel: getCoreRowModel(),
+    getFilteredRowModel: getFilteredRowModel(),
+    getPaginationRowModel: getPaginationRowModel(),
+    getSortedRowModel: getSortedRowModel(),
+    getFacetedRowModel: getFacetedRowModel(),
+    getFacetedUniqueValues: getFacetedUniqueValues(),
+  })
+
+  return (
+    <div className="space-y-4">
+      <DataTableToolbar table={table} />
+      <div className="rounded-md border">
+        <Table>
+          <TableHeader>
+            {table.getHeaderGroups().map((headerGroup) => (
+              <TableRow key={headerGroup.id}>
+                {headerGroup.headers.map((header) => {
+                  return (
+                    <TableHead key={header.id} colSpan={header.colSpan}>
+                      {header.isPlaceholder
+                        ? null
+                        : flexRender(
+                            header.column.columnDef.header,
+                            header.getContext()
+                          )}
+                    </TableHead>
+                  )
+                })}
+              </TableRow>
+            ))}
+          </TableHeader>
+          <TableBody>
+            {table.getRowModel().rows?.length ? (
+              table.getRowModel().rows.map((row) => (
+                <TableRow
+                  key={row.id}
+                  data-state={row.getIsSelected() && "selected"}
+                >
+                  {row.getVisibleCells().map((cell) => (
+                    <TableCell key={cell.id}>
+                      {flexRender(
+                        cell.column.columnDef.cell,
+                        cell.getContext()
+                      )}
+                    </TableCell>
+                  ))}
+                </TableRow>
+              ))
+            ) : (
+              <TableRow>
+                <TableCell
+                  colSpan={columns.length}
+                  className="h-24 text-center"
+                >
+                  No results.
+                </TableCell>
+              </TableRow>
+            )}
+          </TableBody>
+        </Table>
+      </div>
+      <DataTablePagination table={table} />
+    </div>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/create/components/basic-information-form.tsx b/src/features/delivery-persons/create/components/basic-information-form.tsx
new file mode 100644
index 0000000..710d9a9
--- /dev/null
+++ b/src/features/delivery-persons/create/components/basic-information-form.tsx
@@ -0,0 +1,156 @@
+import { UseFormReturn } from 'react-hook-form'
+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
+import { FormField, FormItem, FormLabel, FormControl, FormMessage, FormDescription } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { CreateDeliveryPersonForm } from '../../types/create-form'
+import { Button } from '@/components/ui/button'
+import { ImagePlus, X } from 'lucide-react'
+import { cn } from '@/lib/utils'
+import { useState } from 'react'
+import { PhoneInput } from '@/components/phone-input'
+
+interface BasicInformationFormProps {
+  form: UseFormReturn<CreateDeliveryPersonForm>
+  className?: string
+}
+
+export function BasicInformationForm({ form, className }: BasicInformationFormProps) {
+  const [previewUrl, setPreviewUrl] = useState<string | null>(null)
+
+  const handlePhotoChange = (event: React.ChangeEvent<HTMLInputElement>) => {
+    const file = event.target.files?.[0]
+    if (file) {
+      // Update form value
+      form.setValue('basicInformation.photo', file)
+
+      // Create preview URL
+      const url = URL.createObjectURL(file)
+      setPreviewUrl(url)
+    }
+  }
+
+  const handleRemovePhoto = () => {
+    form.setValue('basicInformation.photo', null)
+    if (previewUrl) {
+      URL.revokeObjectURL(previewUrl)
+      setPreviewUrl(null)
+    }
+  }
+
+  return (
+    <Card className={className}>
+      <CardHeader>
+        <CardTitle className="text-base font-medium">Basic Information</CardTitle>
+      </CardHeader>
+      <CardContent className="space-y-4">
+        <FormField
+          control={form.control}
+          name="basicInformation.name"
+          render={({ field }) => (
+            <FormItem>
+              <FormLabel>Full Name</FormLabel>
+              <FormControl>
+                <Input placeholder="Enter full name" {...field} />
+              </FormControl>
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+
+        <FormField
+          control={form.control}
+          name="basicInformation.phoneNumber"
+          render={({ field: { onChange, ...field } }) => (
+            <FormItem>
+              <FormLabel>Phone Number</FormLabel>
+              <FormControl>
+                <PhoneInput 
+                  {...field}
+                  defaultCountry="ET"
+                  placeholder="+251 9X XXX XXXX"
+                  onChange={(value: string, isValid: boolean) => {
+                    onChange(value)
+                    if (!isValid) {
+                      form.setError('basicInformation.phoneNumber', {
+                        type: 'manual',
+                        message: 'Please enter a valid Ethiopian phone number'
+                      })
+                    } else {
+                      form.clearErrors('basicInformation.phoneNumber')
+                    }
+                  }}
+                />
+              </FormControl>
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+
+        <FormField
+          control={form.control}
+          name="basicInformation.photo"
+          render={({ field: { value, onChange, ...field } }) => (
+            <FormItem>
+              <FormLabel>Profile Photo</FormLabel>
+              <FormControl>
+                <div className="flex items-start space-x-4">
+                  <div className={cn(
+                    "flex items-center justify-center w-24 h-24 rounded-lg border-2 border-dashed",
+                    "transition-colors duration-200",
+                    previewUrl ? "border-muted" : "border-muted-foreground/25"
+                  )}>
+                    {previewUrl ? (
+                      <div className="relative w-full h-full">
+                        <img
+                          src={previewUrl}
+                          alt="Profile preview"
+                          className="w-full h-full object-cover rounded-lg"
+                        />
+                        <Button
+                          type="button"
+                          variant="secondary"
+                          size="icon"
+                          className="absolute -top-2 -right-2 h-6 w-6"
+                          onClick={handleRemovePhoto}
+                        >
+                          <X className="h-4 w-4" />
+                        </Button>
+                      </div>
+                    ) : (
+                      <Button
+                        type="button"
+                        variant="ghost"
+                        className="h-full w-full flex flex-col items-center justify-center gap-2"
+                        onClick={() => {
+                          const input = document.createElement('input')
+                          input.type = 'file'
+                          input.accept = 'image/*'
+                          input.onchange = handlePhotoChange as any
+                          input.click()
+                        }}
+                      >
+                        <ImagePlus className="h-8 w-8 text-muted-foreground" />
+                        <span className="text-xs text-muted-foreground">Upload photo</span>
+                      </Button>
+                    )}
+                  </div>
+                  <input
+                    type="file"
+                    accept="image/*"
+                    className="hidden"
+                    onChange={handlePhotoChange}
+                    {...field}
+                  />
+                </div>
+              </FormControl>
+              <FormDescription>
+                Upload a profile photo. This will be visible to customers.
+              </FormDescription>
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+      </CardContent>
+    </Card>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/create/components/review-form.tsx b/src/features/delivery-persons/create/components/review-form.tsx
new file mode 100644
index 0000000..6ea2e7e
--- /dev/null
+++ b/src/features/delivery-persons/create/components/review-form.tsx
@@ -0,0 +1,110 @@
+import { UseFormReturn } from 'react-hook-form'
+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
+import { CreateDeliveryPersonForm } from '../../types/create-form'
+import { Bike, Car, User, FileText } from 'lucide-react'
+import { cn } from '@/lib/utils'
+
+interface ReviewFormProps {
+  form: UseFormReturn<CreateDeliveryPersonForm>
+  className?: string
+}
+
+export function ReviewForm({ form, className }: ReviewFormProps) {
+  const { basicInformation, vehicle } = form.getValues()
+
+  const getVehicleIcon = () => {
+    switch (vehicle.type) {
+      case 'BICYCLE':
+      case 'MOTORCYCLE':
+        return Bike
+      case 'CAR':
+        return Car
+      default:
+        return Car
+    }
+  }
+  const VehicleIcon = getVehicleIcon()
+
+  return (
+    <Card className={className}>
+      <CardHeader>
+        <CardTitle className="text-base font-medium">Review Information</CardTitle>
+      </CardHeader>
+      <CardContent className="space-y-6">
+        {/* Basic Information Summary */}
+        <div className="space-y-4">
+          <h3 className="font-medium flex items-center gap-2">
+            <User className="h-4 w-4" />
+            Basic Information
+          </h3>
+          <div className="grid gap-4 pl-6">
+            <div className="grid grid-cols-3 gap-4 items-center">
+              <div className="text-sm text-muted-foreground">Full Name</div>
+              <div className="col-span-2 font-medium">{basicInformation.name}</div>
+            </div>
+            <div className="grid grid-cols-3 gap-4 items-center">
+              <div className="text-sm text-muted-foreground">Phone Number</div>
+              <div className="col-span-2 font-medium">{basicInformation.phoneNumber}</div>
+            </div>
+            {basicInformation.photo && (
+              <div className="grid grid-cols-3 gap-4 items-center">
+                <div className="text-sm text-muted-foreground">Profile Photo</div>
+                <div className="col-span-2">
+                  <div className="h-16 w-16 rounded-lg border bg-muted">
+                    <img 
+                      src={URL.createObjectURL(basicInformation.photo)} 
+                      alt="Profile preview"
+                      className="h-full w-full object-cover rounded-lg"
+                    />
+                  </div>
+                </div>
+              </div>
+            )}
+          </div>
+        </div>
+
+        {/* Vehicle Details Summary */}
+        <div className="space-y-4">
+          <h3 className="font-medium flex items-center gap-2">
+            <FileText className="h-4 w-4" />
+            Vehicle Details
+          </h3>
+          <div className="grid gap-4 pl-6">
+            <div className="grid grid-cols-3 gap-4 items-center">
+              <div className="text-sm text-muted-foreground">Vehicle Type</div>
+              <div className="col-span-2 flex items-center gap-2">
+                <div className={cn(
+                  "h-8 w-8 rounded-md border flex items-center justify-center",
+                  "bg-primary/5 border-primary/10"
+                )}>
+                  <VehicleIcon className="h-4 w-4 text-primary" />
+                </div>
+                <span className="font-medium">{vehicle.type.charAt(0) + vehicle.type.slice(1).toLowerCase()}</span>
+              </div>
+            </div>
+            <div className="grid grid-cols-3 gap-4 items-center">
+              <div className="text-sm text-muted-foreground">License Plate</div>
+              <div className="col-span-2 font-medium">{vehicle.licensePlate}</div>
+            </div>
+            <div className="grid grid-cols-3 gap-4 items-center">
+              <div className="text-sm text-muted-foreground">Maximum Weight</div>
+              <div className="col-span-2 font-medium">{vehicle.maxWeight} kg</div>
+            </div>
+          </div>
+        </div>
+
+        {/* Terms and Conditions */}
+        <div className="rounded-lg border bg-card p-4">
+          <p className="text-sm text-muted-foreground">
+            Please review all information carefully before submitting. By submitting this form, you confirm that:
+          </p>
+          <ul className="mt-2 space-y-1 text-sm text-muted-foreground list-disc list-inside">
+            <li>All provided information is accurate and up to date</li>
+            <li>The vehicle meets all necessary safety and regulatory requirements</li>
+            <li>The delivery person has the required licenses and permits</li>
+          </ul>
+        </div>
+      </CardContent>
+    </Card>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/create/components/vehicle-registration-form.tsx b/src/features/delivery-persons/create/components/vehicle-registration-form.tsx
new file mode 100644
index 0000000..239f09d
--- /dev/null
+++ b/src/features/delivery-persons/create/components/vehicle-registration-form.tsx
@@ -0,0 +1,155 @@
+import { UseFormReturn } from 'react-hook-form'
+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
+import { FormField, FormItem, FormLabel, FormControl, FormMessage, FormDescription } from '@/components/ui/form'
+import { Input } from '@/components/ui/input'
+import { CreateDeliveryPersonForm } from '../../types/create-form'
+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'
+import { Label } from '@/components/ui/label'
+import { cn } from '@/lib/utils'
+import { Bike, Car } from 'lucide-react'
+
+type VehicleType = 'BICYCLE' | 'MOTORCYCLE' | 'CAR'
+
+interface VehicleRegistrationFormProps {
+  form: UseFormReturn<CreateDeliveryPersonForm>
+  className?: string
+}
+
+const VEHICLE_TYPES = [
+  {
+    id: 'BICYCLE' as const,
+    label: 'Bicycle',
+    description: 'For small packages up to 5kg',
+    icon: Bike,
+    maxWeight: 5,
+  },
+  {
+    id: 'MOTORCYCLE' as const,
+    label: 'Motorcycle',
+    description: 'For medium packages up to 30kg',
+    icon: Bike,
+    maxWeight: 30,
+  },
+  {
+    id: 'CAR' as const,
+    label: 'Car',
+    description: 'For large packages up to 100kg',
+    icon: Car,
+    maxWeight: 100,
+  },
+] as const
+
+export function VehicleRegistrationForm({ form, className }: VehicleRegistrationFormProps) {
+  // Auto-set maxWeight based on vehicle type
+  const handleVehicleTypeChange = (type: VehicleType) => {
+    const vehicleType = VEHICLE_TYPES.find(t => t.id === type)
+    if (vehicleType) {
+      form.setValue('vehicle.type', type)
+      form.setValue('vehicle.maxWeight', vehicleType.maxWeight)
+    }
+  }
+
+  return (
+    <Card className={className}>
+      <CardHeader>
+        <CardTitle className="text-base font-medium">Vehicle Details</CardTitle>
+      </CardHeader>
+      <CardContent className="space-y-6">
+        {/* Vehicle Type Selection */}
+        <FormField
+          control={form.control}
+          name="vehicle.type"
+          render={({ field }) => (
+            <FormItem className="space-y-3">
+              <FormLabel>Vehicle Type</FormLabel>
+              <FormControl>
+                <RadioGroup
+                  onValueChange={handleVehicleTypeChange}
+                  value={field.value}
+                  className="grid grid-cols-3 gap-4"
+                >
+                  {VEHICLE_TYPES.map((type) => {
+                    const Icon = type.icon
+                    return (
+                      <div key={type.id}>
+                        <RadioGroupItem
+                          value={type.id}
+                          id={type.id}
+                          className="peer sr-only"
+                        />
+                        <Label
+                          htmlFor={type.id}
+                          className={cn(
+                            "flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4",
+                            "hover:bg-accent hover:text-accent-foreground",
+                            "peer-data-[state=checked]:border-primary",
+                            "[&:has([data-state=checked])]:border-primary",
+                            "cursor-pointer transition-colors"
+                          )}
+                        >
+                          <Icon className="mb-3 h-6 w-6" />
+                          <div className="space-y-1 text-center">
+                            <p className="text-sm font-medium leading-none">{type.label}</p>
+                            <p className="text-xs text-muted-foreground">{type.description}</p>
+                          </div>
+                        </Label>
+                      </div>
+                    )
+                  })}
+                </RadioGroup>
+              </FormControl>
+              <FormDescription>
+                Select the type of vehicle. Maximum weight capacity will be set automatically.
+              </FormDescription>
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+
+        {/* License Plate */}
+        <FormField
+          control={form.control}
+          name="vehicle.licensePlate"
+          render={({ field }) => (
+            <FormItem>
+              <FormLabel>License Plate</FormLabel>
+              <FormControl>
+                <Input 
+                  placeholder="Enter license plate number" 
+                  {...field} 
+                />
+              </FormControl>
+              <FormDescription>
+                Enter the vehicle's license plate number for identification
+              </FormDescription>
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+
+        {/* Maximum Weight (Read-only, set by vehicle type) */}
+        <FormField
+          control={form.control}
+          name="vehicle.maxWeight"
+          render={({ field }) => (
+            <FormItem>
+              <FormLabel>Maximum Weight Capacity</FormLabel>
+              <FormControl>
+                <Input 
+                  type="text"
+                  value={`${field.value} kg`}
+                  disabled
+                  className="bg-muted"
+                />
+              </FormControl>
+              <FormDescription>
+                Maximum weight is determined by the vehicle type
+              </FormDescription>
+              <FormMessage />
+            </FormItem>
+          )}
+        />
+      </CardContent>
+    </Card>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/create/index.tsx b/src/features/delivery-persons/create/index.tsx
new file mode 100644
index 0000000..c69034d
--- /dev/null
+++ b/src/features/delivery-persons/create/index.tsx
@@ -0,0 +1,285 @@
+/* eslint-disable no-console */
+import { useState } from 'react'
+import { useForm } from 'react-hook-form'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { Header } from '@/components/layout/header'
+import { Main } from '@/components/layout/main'
+import { ProfileDropdown } from '@/components/profile-dropdown'
+import { Search } from '@/components/search'
+import { ThemeSwitch } from '@/components/theme-switch'
+import { Button } from '@/components/ui/button'
+import { IconArrowLeft } from '@tabler/icons-react'
+import { Link, useNavigate } from '@tanstack/react-router'
+import { CreateDeliveryPersonForm, CreateDeliveryPersonStep, createDeliveryPersonSchema, basicInformationSchema, vehicleSchema } from '../types/create-form'
+import { BasicInformationForm } from './components/basic-information-form'
+import { VehicleRegistrationForm } from './components/vehicle-registration-form'
+import { Form } from '@/components/ui/form'
+import { cn } from '@/lib/utils'
+import { ReviewForm } from './components/review-form'
+import { toast } from '@/hooks/use-toast'
+import { Loader2 } from 'lucide-react'
+import deliveryPersonsApi from '../data/deliveryPersonsApi'
+import { useMutation, useQueryClient } from '@tanstack/react-query'
+import axios from 'axios'
+
+const steps: { title: string, key: CreateDeliveryPersonStep }[] = [
+  {
+    title: 'Basic Information',
+    key: 'basicInformation',
+  },
+  {
+    title: 'Vehicle Details',
+    key: 'vehicle',
+  },
+  {
+    title: 'Review',
+    key: 'review',
+  },
+]
+
+export default function CreateDeliveryPerson() {
+  const [currentStep, setCurrentStep] = useState<CreateDeliveryPersonStep>('basicInformation')
+  const navigate = useNavigate()
+  const queryClient = useQueryClient()
+  
+  const form = useForm<CreateDeliveryPersonForm>({
+    resolver: zodResolver(createDeliveryPersonSchema),
+    defaultValues: {
+      basicInformation: {
+        name: '',
+        phoneNumber: '',
+      },
+      vehicle: {
+        type: 'CAR',
+        licensePlate: '',
+        maxWeight: 0,
+      },
+    },
+    mode: 'onChange',
+  })
+
+  const { mutate: createDeliveryPerson, isPending: isSubmitting } = useMutation({
+    mutationFn: (data: CreateDeliveryPersonForm) => deliveryPersonsApi.create(data),
+    onSuccess: (response) => {
+      // Show success message
+      toast({
+        title: "Success",
+        description: response.message || "Delivery person created successfully"
+      })
+
+      // Invalidate delivery persons list query
+      queryClient.invalidateQueries({ queryKey: ['delivery-persons'] })
+
+      // Navigate back to list
+      navigate({ to: '/delivery-persons' })
+    },
+    onError: (error) => {
+      console.error('Error creating delivery person:', error)
+      
+      if (axios.isAxiosError(error)) {
+        // Handle API error responses
+        const errorMessage = error.response?.data?.message || "Failed to create delivery person"
+        toast({
+          variant: "destructive",
+          title: "Error",
+          description: errorMessage
+        })
+      } else {
+        toast({
+          variant: "destructive",
+          title: "Error",
+          description: "An unexpected error occurred while creating the delivery person"
+        })
+      }
+    },
+    retry: (failureCount, error) => {
+      // Don't retry on validation errors
+      if (axios.isAxiosError(error) && error.response?.status === 400) {
+        return false
+      }
+      
+      // Retry up to 3 times with exponential backoff
+      return failureCount < 3
+    },
+    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000), // Max 30 seconds
+  })
+
+  const currentStepIndex = steps.findIndex(step => step.key === currentStep)
+  const progress = ((currentStepIndex + 1) / steps.length) * 100
+
+  const validateCurrentStep = async () => {
+    let isValid = false
+
+    switch (currentStep) {
+      case 'basicInformation': {
+        const basicInfo = form.getValues('basicInformation')
+        const result = await basicInformationSchema.safeParseAsync(basicInfo)
+        isValid = result.success
+        break
+      }
+      case 'vehicle': {
+        const vehicle = form.getValues('vehicle')
+        const result = await vehicleSchema.safeParseAsync(vehicle)
+        isValid = result.success
+        break
+      }
+      default:
+        isValid = true
+    }
+
+    return isValid
+  }
+
+  const handleNextClick = async () => {
+    // Validate current step
+    const isValid = await validateCurrentStep()
+    if (!isValid) {
+      await form.trigger()
+      return
+    }
+    
+    // Move to next step
+    const currentIndex = steps.findIndex(step => step.key === currentStep)
+    if (currentIndex < steps.length - 1) {
+      setCurrentStep(steps[currentIndex + 1].key)
+    }
+  }
+
+  const goToPreviousStep = () => {
+    const currentIndex = steps.findIndex(step => step.key === currentStep)
+    if (currentIndex > 0) {
+      setCurrentStep(steps[currentIndex - 1].key)
+    }
+  }
+
+  const onSubmit = async (data: CreateDeliveryPersonForm) => {
+    if (currentStep === 'review') {
+      createDeliveryPerson(data)
+    }
+  }
+
+  const renderStepContent = () => {
+    switch (currentStep) {
+      case 'basicInformation':
+        return <BasicInformationForm form={form} />
+      case 'vehicle':
+        return <VehicleRegistrationForm form={form} />
+      case 'review':
+        return <ReviewForm form={form} />
+      default:
+        return null
+    }
+  }
+
+  return (
+    <>
+      <Header fixed>
+        <div className="flex items-center gap-2">
+          <Button
+            variant="ghost"
+            size="icon"
+            asChild
+          >
+            <Link to="/delivery-persons">
+              <IconArrowLeft className="h-4 w-4" />
+            </Link>
+          </Button>
+          <Search />
+        </div>
+        <div className='ml-auto flex items-center space-x-4'>
+          <ThemeSwitch />
+          <ProfileDropdown />
+        </div>
+      </Header>
+
+      <Main>
+        <div className="mb-8">
+          <h2 className="text-2xl font-bold tracking-tight">Add Delivery Person</h2>
+          <p className="text-muted-foreground">
+            Create a new delivery person account and register their vehicle
+          </p>
+        </div>
+
+        {/* Step Indicator */}
+        <div className="mb-8 space-y-4">
+          {/* Step Progress Bar */}
+          <div className="relative h-2 w-full bg-secondary rounded-full overflow-hidden">
+            <div 
+              className="absolute inset-y-0 left-0 bg-primary transition-all duration-200 ease-out rounded-full"
+              style={{ width: `${progress}%` }}
+            />
+          </div>
+          
+          {/* Step Labels */}
+          <div className="grid grid-cols-3 gap-4">
+            {steps.map((step, index) => (
+              <div
+                key={step.key}
+                className={cn(
+                  "text-sm transition-colors duration-200",
+                  currentStepIndex >= index 
+                    ? "text-foreground font-medium" 
+                    : "text-muted-foreground"
+                )}
+              >
+                <div className="flex items-center gap-2">
+                  <div className={cn(
+                    "h-6 w-6 rounded-full flex items-center justify-center text-xs border-2 transition-colors duration-200",
+                    currentStepIndex > index 
+                      ? "bg-primary border-primary text-primary-foreground"
+                      : currentStepIndex === index
+                      ? "border-primary text-primary"
+                      : "border-muted-foreground"
+                  )}>
+                    {index + 1}
+                  </div>
+                  <span>{step.title}</span>
+                </div>
+              </div>
+            ))}
+          </div>
+        </div>
+
+        {/* Form Steps */}
+        <Form {...form}>
+          <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
+            {renderStepContent()}
+
+            <div className="flex justify-between">
+              <Button
+                type="button"
+                variant="outline"
+                onClick={goToPreviousStep}
+                disabled={currentStepIndex === 0}
+              >
+                Previous
+              </Button>
+              {currentStepIndex === steps.length - 1 ? (
+                <Button
+                  type="submit"
+                  disabled={isSubmitting}
+                >
+                  {isSubmitting ? (
+                    <>
+                      <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                      Creating...
+                    </>
+                  ) : (
+                    'Create Delivery Person'
+                  )}
+                </Button>
+              ) : (
+                <Button
+                  type="button"
+                  onClick={handleNextClick}
+                >
+                  Next
+                </Button>
+              )}
+            </div>
+          </form>
+        </Form>
+      </Main>
+    </>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/data/deliveryPersonsApi.ts b/src/features/delivery-persons/data/deliveryPersonsApi.ts
new file mode 100644
index 0000000..26b0db8
--- /dev/null
+++ b/src/features/delivery-persons/data/deliveryPersonsApi.ts
@@ -0,0 +1,111 @@
+import axios from 'axios'
+import type { DeliveryPersonsResponse, DeliveryPersonResponse, DeliveryPersonStatus } from '../types'
+import type { CreateDeliveryPersonForm } from '../types/create-form'
+import { useAuthStore } from '@/stores/authStore'
+import { parsePhoneNumber } from 'libphonenumber-js'
+
+// Get the appropriate API URL based on environment
+const apiUrl = import.meta.env.DEV 
+  ? import.meta.env.VITE_API_URL 
+  : import.meta.env.VITE_PRODUCTION_API_URL
+
+if (!apiUrl) {
+  throw new Error('API URL not configured. Please check your environment variables.')
+}
+
+// Log which API URL is being used in development
+if (import.meta.env.DEV) {
+  // eslint-disable-next-line no-console
+  console.log(`🌐 Using API URL: ${apiUrl}`)
+}
+
+const api = axios.create({
+  baseURL: apiUrl,
+  withCredentials: true,
+})
+
+// Add auth token to requests
+api.interceptors.request.use((config) => {
+  const token = useAuthStore.getState().auth.accessToken
+  if (token) {
+    config.headers.Authorization = `Bearer ${token}`
+  }
+  // eslint-disable-next-line no-console
+  console.log('🔑 Auth Token:', token)
+  return config
+})
+
+// Log API requests in development
+if (import.meta.env.DEV) {
+  api.interceptors.request.use((config) => {
+    // eslint-disable-next-line no-console
+    console.log(`🌐 ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`)
+    return config
+  })
+}
+
+const deliveryPersonsApi = {
+  getAll: async (params?: { 
+    page?: number
+    limit?: number
+    status?: DeliveryPersonStatus
+    search?: string
+  }): Promise<DeliveryPersonsResponse> => {
+    const response = await api.get('/delivery-persons', { params })
+    return response.data
+  },
+
+  getById: async (id: string): Promise<DeliveryPersonResponse> => {
+    const response = await api.get(`/delivery-persons/${id}`)
+    return response.data
+  },
+
+  updateStatus: async (id: string, status: DeliveryPersonStatus): Promise<DeliveryPersonResponse> => {
+    const response = await api.put(`/delivery-persons/${id}/status`, { status })
+    return response.data
+  },
+
+  create: async (data: CreateDeliveryPersonForm): Promise<DeliveryPersonResponse> => {
+    // Format phone number to E.164
+    const phoneNumber = parsePhoneNumber(data.basicInformation.phoneNumber, 'ET')
+    if (!phoneNumber?.isValid()) {
+      throw new Error('Invalid phone number')
+    }
+
+    const payload = {
+      name: data.basicInformation.name,
+      phoneNumber: phoneNumber.format('E.164'),
+      photo: data.basicInformation.photo,
+      vehicle: {
+        type: data.vehicle.type,
+        licensePlate: data.vehicle.licensePlate,
+        maxWeight: data.vehicle.maxWeight
+      }
+    }
+    const response = await api.post('/admin/delivery-persons', payload)
+    return response.data
+  },
+
+  update: async (id: string, data: CreateDeliveryPersonForm): Promise<DeliveryPersonResponse> => {
+    // Format phone number to E.164
+    const phoneNumber = parsePhoneNumber(data.basicInformation.phoneNumber, 'ET')
+    if (!phoneNumber?.isValid()) {
+      throw new Error('Invalid phone number')
+    }
+
+    const payload = {
+      name: data.basicInformation.name,
+      phoneNumber: phoneNumber.format('E.164'),
+      photo: data.basicInformation.photo,
+      vehicle: {
+        type: data.vehicle.type,
+        licensePlate: data.vehicle.licensePlate,
+        maxWeight: data.vehicle.maxWeight
+      }
+    }
+    const response = await api.put(`/delivery-persons/${id}`, payload)
+    return response.data
+  }
+}
+
+export default deliveryPersonsApi 
\ No newline at end of file
diff --git a/src/features/delivery-persons/details/index.tsx b/src/features/delivery-persons/details/index.tsx
new file mode 100644
index 0000000..96f94b2
--- /dev/null
+++ b/src/features/delivery-persons/details/index.tsx
@@ -0,0 +1,210 @@
+import { Header } from '@/components/layout/header'
+import { Main } from '@/components/layout/main'
+import { ProfileDropdown } from '@/components/profile-dropdown'
+import { Search } from '@/components/search'
+import { ThemeSwitch } from '@/components/theme-switch'
+import { Button } from '@/components/ui/button'
+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
+import { IconArrowLeft } from '@tabler/icons-react'
+import { Link, useParams } from '@tanstack/react-router'
+import { useQuery } from '@tanstack/react-query'
+import deliveryPersonsApi from '../data/deliveryPersonsApi'
+import { Loader2, Star, Phone, Car, Package2, AlertCircle } from 'lucide-react'
+import { Alert, AlertDescription } from '@/components/ui/alert'
+import { Badge } from '@/components/ui/badge'
+import { DeliveryPersonStatus, DeliveryStatus } from '../types'
+import { cn } from '@/lib/utils'
+
+export default function DeliveryPersonDetails() {
+  const { id } = useParams({ from: '/_authenticated/delivery-persons/$id/' })
+  
+  const { 
+    data,
+    isLoading,
+    isError,
+    error,
+    refetch,
+    failureCount,
+    isRefetching
+  } = useQuery({
+    queryKey: ['delivery-person', id],
+    queryFn: () => deliveryPersonsApi.getById(id),
+    staleTime: 1000 * 60 * 5, // 5 minutes
+    gcTime: 1000 * 60 * 15, // 15 minutes
+    retry: 2,
+    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),
+  })
+
+  const deliveryPerson = data?.deliveryPerson
+
+  return (
+    <>
+      <Header fixed>
+        <div className="flex items-center gap-2">
+          <Button
+            variant="ghost"
+            size="icon"
+            asChild
+          >
+            <Link to="/delivery-persons">
+              <IconArrowLeft className="h-4 w-4" />
+            </Link>
+          </Button>
+          <Search />
+        </div>
+        <div className='ml-auto flex items-center space-x-4'>
+          <ThemeSwitch />
+          <ProfileDropdown />
+        </div>
+      </Header>
+
+      <Main>
+        {isLoading ? (
+          <div className="flex flex-col items-center justify-center min-h-[400px]">
+            <Loader2 className="h-8 w-8 animate-spin text-primary mb-4" />
+            <p className="text-muted-foreground">Loading delivery person details...</p>
+          </div>
+        ) : isError ? (
+          <div className="flex flex-col items-center justify-center min-h-[400px] max-w-md mx-auto">
+            <Alert variant="destructive" className="mb-4">
+              <AlertCircle className="h-4 w-4" />
+              <AlertDescription className="flex flex-col gap-1">
+                <span>
+                  {error instanceof Error 
+                    ? error.message || 'Failed to load delivery person details'
+                    : 'Failed to load delivery person details'}
+                </span>
+                {failureCount > 0 && (
+                  <span className="text-xs opacity-70">
+                    Failed after {failureCount} attempts
+                  </span>
+                )}
+              </AlertDescription>
+            </Alert>
+            <Button 
+              variant="outline" 
+              onClick={() => refetch()}
+              disabled={isRefetching}
+            >
+              {isRefetching ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Retrying...
+                </>
+              ) : (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4" />
+                  Retry
+                </>
+              )}
+            </Button>
+          </div>
+        ) : deliveryPerson ? (
+          <div className="space-y-6">
+            {/* Header */}
+            <div className="flex items-center justify-between">
+              <div>
+                <h2 className="text-2xl font-bold tracking-tight">{deliveryPerson.name}</h2>
+                <div className="flex items-center gap-4 mt-1 text-muted-foreground">
+                  <div className="flex items-center gap-2">
+                    <Phone className="h-4 w-4" />
+                    <span>{deliveryPerson.phoneNumber}</span>
+                  </div>
+                  <Badge variant={deliveryPerson.status === DeliveryPersonStatus.ONLINE ? "default" : "secondary"}>
+                    {deliveryPerson.status === DeliveryPersonStatus.ONLINE ? 'Online' : 'Offline'}
+                  </Badge>
+                </div>
+              </div>
+              <Button asChild>
+                <Link
+                  to="/delivery-persons/$id/edit"
+                  params={{ id }}
+                >
+                  Edit Profile
+                </Link>
+              </Button>
+            </div>
+
+            <div className="grid gap-6 md:grid-cols-2">
+              {/* Stats */}
+              <Card>
+                <CardHeader>
+                  <CardTitle className="text-base font-medium">Performance</CardTitle>
+                </CardHeader>
+                <CardContent className="grid gap-4">
+                  <div className="flex items-center justify-between">
+                    <div className="flex items-center gap-2">
+                      <Star className={cn(
+                        "h-4 w-4",
+                        deliveryPerson.averageRating >= 4.5 ? "text-yellow-500" : "text-muted-foreground"
+                      )} />
+                      <span className="font-medium">Rating</span>
+                    </div>
+                    <span>{deliveryPerson.averageRating.toFixed(1)}</span>
+                  </div>
+                  <div className="flex items-center justify-between">
+                    <div className="flex items-center gap-2">
+                      <Package2 className="h-4 w-4 text-muted-foreground" />
+                      <span className="font-medium">Deliveries</span>
+                    </div>
+                    <div className="text-right">
+                      <div>{deliveryPerson.completedDeliveries + deliveryPerson.failedDeliveries} total</div>
+                      <div className="text-sm text-muted-foreground">
+                        {((deliveryPerson.completedDeliveries / (deliveryPerson.completedDeliveries + deliveryPerson.failedDeliveries)) * 100).toFixed(1)}% success rate
+                      </div>
+                    </div>
+                  </div>
+                </CardContent>
+              </Card>
+
+              {/* Vehicles */}
+              <Card>
+                <CardHeader>
+                  <CardTitle className="text-base font-medium">Vehicles</CardTitle>
+                </CardHeader>
+                <CardContent className="grid gap-4">
+                  {deliveryPerson.vehicles.map((vehicle) => (
+                    <div key={vehicle.id} className="flex items-center justify-between">
+                      <div className="flex items-center gap-2">
+                        <Car className="h-4 w-4 text-muted-foreground" />
+                        <div>
+                          <div className="font-medium">{vehicle.type}</div>
+                          <div className="text-sm text-muted-foreground">{vehicle.licensePlate}</div>
+                        </div>
+                      </div>
+                      <div className="text-sm text-muted-foreground">
+                        Max {vehicle.maxWeight}kg
+                      </div>
+                    </div>
+                  ))}
+                </CardContent>
+              </Card>
+
+              {/* Recent Deliveries */}
+              <Card className="md:col-span-2">
+                <CardHeader>
+                  <CardTitle className="text-base font-medium">Recent Deliveries</CardTitle>
+                </CardHeader>
+                <CardContent>
+                  <div className="grid gap-4">
+                    {deliveryPerson.deliveries.map((delivery) => (
+                      <div key={delivery.id} className="flex items-center justify-between">
+                        <div>
+                          <div className="font-medium">{delivery.package.description}</div>
+                          <div className="text-sm text-muted-foreground">ID: {delivery.package.id}</div>
+                        </div>
+                        <Badge variant={delivery.status === DeliveryStatus.COMPLETED ? "default" : "secondary"}>
+                          {delivery.status}
+                        </Badge>
+                      </div>
+                    ))}
+                  </div>
+                </CardContent>
+              </Card>
+            </div>
+          </div>
+        ) : null}
+      </Main>
+    </>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/edit/index.tsx b/src/features/delivery-persons/edit/index.tsx
new file mode 100644
index 0000000..b57bc10
--- /dev/null
+++ b/src/features/delivery-persons/edit/index.tsx
@@ -0,0 +1,217 @@
+import { Header } from '@/components/layout/header'
+import { Main } from '@/components/layout/main'
+import { ProfileDropdown } from '@/components/profile-dropdown'
+import { Search } from '@/components/search'
+import { ThemeSwitch } from '@/components/theme-switch'
+import { Button } from '@/components/ui/button'
+import { IconArrowLeft } from '@tabler/icons-react'
+import { Link, useParams, useNavigate } from '@tanstack/react-router'
+import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'
+import deliveryPersonsApi from '../data/deliveryPersonsApi'
+import { Loader2, AlertCircle } from 'lucide-react'
+import { Alert, AlertDescription } from '@/components/ui/alert'
+import { Form } from '@/components/ui/form'
+import { useForm } from 'react-hook-form'
+import { zodResolver } from '@hookform/resolvers/zod'
+import { BasicInformationForm } from '../create/components/basic-information-form'
+import { VehicleRegistrationForm } from '../create/components/vehicle-registration-form'
+import { CreateDeliveryPersonForm, createDeliveryPersonSchema } from '../types/create-form'
+import { toast } from '@/hooks/use-toast'
+import axios from 'axios'
+import { useEffect } from 'react'
+
+export default function EditDeliveryPerson() {
+  const { id } = useParams({ from: '/_authenticated/delivery-persons/$id/edit' })
+  const navigate = useNavigate()
+  const queryClient = useQueryClient()
+
+  const { 
+    data,
+    isLoading,
+    isError,
+    error,
+    refetch,
+    failureCount,
+    isRefetching
+  } = useQuery({
+    queryKey: ['delivery-person', id],
+    queryFn: () => deliveryPersonsApi.getById(id),
+    staleTime: 1000 * 60 * 5, // 5 minutes
+    gcTime: 1000 * 60 * 15, // 15 minutes
+    retry: 2,
+    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),
+  })
+
+  const form = useForm<CreateDeliveryPersonForm>({
+    resolver: zodResolver(createDeliveryPersonSchema),
+    defaultValues: {
+      basicInformation: {
+        name: '',
+        phoneNumber: '',
+      },
+      vehicle: {
+        type: 'CAR',
+        licensePlate: '',
+        maxWeight: 0,
+      },
+    },
+    mode: 'onChange',
+  })
+
+  // Update form values when data is loaded
+  useEffect(() => {
+    if (data?.deliveryPerson) {
+      form.reset({
+        basicInformation: {
+          name: data.deliveryPerson.name,
+          phoneNumber: data.deliveryPerson.phoneNumber,
+        },
+        vehicle: data.deliveryPerson.vehicles[0] ? {
+          type: data.deliveryPerson.vehicles[0].type as 'BICYCLE' | 'MOTORCYCLE' | 'CAR',
+          licensePlate: data.deliveryPerson.vehicles[0].licensePlate,
+          maxWeight: data.deliveryPerson.vehicles[0].maxWeight,
+        } : {
+          type: 'CAR',
+          licensePlate: '',
+          maxWeight: 0,
+        },
+      })
+    }
+  }, [data, form])
+
+  const { mutate: updateDeliveryPerson, isPending: isSubmitting } = useMutation({
+    mutationFn: (data: CreateDeliveryPersonForm) => deliveryPersonsApi.update(id, data),
+    onSuccess: (response) => {
+      toast({
+        title: "Success",
+        description: response.message || "Delivery person updated successfully"
+      })
+
+      // Invalidate queries
+      queryClient.invalidateQueries({ queryKey: ['delivery-persons'] })
+      queryClient.invalidateQueries({ queryKey: ['delivery-person', id] })
+
+      // Navigate back to details
+      navigate({ to: '/delivery-persons/$id', params: { id } })
+    },
+    onError: (error) => {
+      if (axios.isAxiosError(error)) {
+        const errorMessage = error.response?.data?.message || "Failed to update delivery person"
+        toast({
+          variant: "destructive",
+          title: "Error",
+          description: errorMessage
+        })
+      } else {
+        toast({
+          variant: "destructive",
+          title: "Error",
+          description: "An unexpected error occurred while updating the delivery person"
+        })
+      }
+    },
+  })
+
+  const onSubmit = (data: CreateDeliveryPersonForm) => {
+    updateDeliveryPerson(data)
+  }
+
+  return (
+    <>
+      <Header fixed>
+        <div className="flex items-center gap-2">
+          <Button
+            variant="ghost"
+            size="icon"
+            asChild
+          >
+            <Link to="/delivery-persons/$id" params={{ id }}>
+              <IconArrowLeft className="h-4 w-4" />
+            </Link>
+          </Button>
+          <Search />
+        </div>
+        <div className='ml-auto flex items-center space-x-4'>
+          <ThemeSwitch />
+          <ProfileDropdown />
+        </div>
+      </Header>
+
+      <Main>
+        {isLoading ? (
+          <div className="flex flex-col items-center justify-center min-h-[400px]">
+            <Loader2 className="h-8 w-8 animate-spin text-primary mb-4" />
+            <p className="text-muted-foreground">Loading delivery person details...</p>
+          </div>
+        ) : isError ? (
+          <div className="flex flex-col items-center justify-center min-h-[400px] max-w-md mx-auto">
+            <Alert variant="destructive" className="mb-4">
+              <AlertCircle className="h-4 w-4" />
+              <AlertDescription className="flex flex-col gap-1">
+                <span>
+                  {error instanceof Error 
+                    ? error.message || 'Failed to load delivery person details'
+                    : 'Failed to load delivery person details'}
+                </span>
+                {failureCount > 0 && (
+                  <span className="text-xs opacity-70">
+                    Failed after {failureCount} attempts
+                  </span>
+                )}
+              </AlertDescription>
+            </Alert>
+            <Button 
+              variant="outline" 
+              onClick={() => refetch()}
+              disabled={isRefetching}
+            >
+              {isRefetching ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Retrying...
+                </>
+              ) : (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4" />
+                  Retry
+                </>
+              )}
+            </Button>
+          </div>
+        ) : data?.deliveryPerson ? (
+          <div className="space-y-6">
+            <div className="mb-8">
+              <h2 className="text-2xl font-bold tracking-tight">Edit Delivery Person</h2>
+              <p className="text-muted-foreground">
+                Update delivery person information and vehicle details
+              </p>
+            </div>
+
+            <Form {...form}>
+              <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
+                <BasicInformationForm form={form} />
+                <VehicleRegistrationForm form={form} />
+
+                <div className="flex justify-end">
+                  <Button
+                    type="submit"
+                    disabled={isSubmitting}
+                  >
+                    {isSubmitting ? (
+                      <>
+                        <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                        Updating...
+                      </>
+                    ) : (
+                      'Update Delivery Person'
+                    )}
+                  </Button>
+                </div>
+              </form>
+            </Form>
+          </div>
+        ) : null}
+      </Main>
+    </>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/index.tsx b/src/features/delivery-persons/index.tsx
new file mode 100644
index 0000000..789a81b
--- /dev/null
+++ b/src/features/delivery-persons/index.tsx
@@ -0,0 +1,110 @@
+import { Header } from '@/components/layout/header'
+import { Main } from '@/components/layout/main'
+import { ProfileDropdown } from '@/components/profile-dropdown'
+import { Search } from '@/components/search'
+import { ThemeSwitch } from '@/components/theme-switch'
+import { useQuery } from '@tanstack/react-query'
+import { Loader2, Plus } from 'lucide-react'
+import { Alert, AlertDescription } from '@/components/ui/alert'
+import { AlertCircle } from 'lucide-react'
+import { Button } from '@/components/ui/button'
+import { Link } from '@tanstack/react-router'
+import deliveryPersonsApi from './data/deliveryPersonsApi'
+import { columns } from './components/columns'
+import { DataTable } from './components/data-table'
+
+export default function DeliveryPersons() {
+  const { 
+    data,
+    isLoading,
+    isError,
+    error,
+    refetch,
+    failureCount,
+    isRefetching
+  } = useQuery({
+    queryKey: ['delivery-persons'],
+    queryFn: () => deliveryPersonsApi.getAll(),
+    staleTime: 1000 * 60 * 5, // 5 minutes
+    gcTime: 1000 * 60 * 15, // 15 minutes
+    retry: 2,
+    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),
+  })
+
+  const deliveryPersons = data?.deliveryPersons || []
+
+  return (
+    <>
+      <Header fixed>
+        <Search />
+        <div className='ml-auto flex items-center space-x-4'>
+          <ThemeSwitch />
+          <ProfileDropdown />
+        </div>
+      </Header>
+
+      <Main>
+        <div className='mb-2 flex items-center justify-between space-y-2 flex-wrap gap-x-4'>
+          <div>
+            <h2 className='text-2xl font-bold tracking-tight'>Delivery Persons</h2>
+            <p className='text-muted-foreground'>
+              Manage delivery persons and their assignments
+            </p>
+          </div>
+          <Button asChild>
+            <Link to="/delivery-persons/create">
+              <Plus className="mr-2 h-4 w-4" />
+              Add Delivery Person
+            </Link>
+          </Button>
+        </div>
+
+        <div className='-mx-4 flex-1 overflow-auto px-4 py-1 lg:flex-row lg:space-x-12 lg:space-y-0'>
+          {isLoading ? (
+            <div className="flex flex-col items-center justify-center min-h-[400px]">
+              <Loader2 className="h-8 w-8 animate-spin text-primary mb-4" />
+              <p className="text-muted-foreground">Loading delivery persons...</p>
+            </div>
+          ) : isError ? (
+            <div className="flex flex-col items-center justify-center min-h-[400px] max-w-md mx-auto">
+              <Alert variant="destructive" className="mb-4">
+                <AlertCircle className="h-4 w-4" />
+                <AlertDescription className="flex flex-col gap-1">
+                  <span>
+                    {error instanceof Error 
+                      ? error.message || 'Failed to load delivery persons'
+                      : 'Failed to load delivery persons'}
+                  </span>
+                  {failureCount > 0 && (
+                    <span className="text-xs opacity-70">
+                      Failed after {failureCount} attempts
+                    </span>
+                  )}
+                </AlertDescription>
+              </Alert>
+              <Button 
+                variant="outline" 
+                onClick={() => refetch()}
+                disabled={isRefetching}
+              >
+                {isRefetching ? (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                    Retrying...
+                  </>
+                ) : (
+                  <>
+                    <Loader2 className="mr-2 h-4 w-4" />
+                    Retry
+                  </>
+                )}
+              </Button>
+            </div>
+          ) : (
+            <DataTable columns={columns} data={deliveryPersons} />
+          )}
+        </div>
+      </Main>
+    </>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/delivery-persons/types/create-form.ts b/src/features/delivery-persons/types/create-form.ts
new file mode 100644
index 0000000..efa2109
--- /dev/null
+++ b/src/features/delivery-persons/types/create-form.ts
@@ -0,0 +1,49 @@
+import { z } from "zod"
+import { parsePhoneNumber } from "libphonenumber-js"
+
+// Basic Information Step Schema
+export const basicInformationSchema = z.object({
+  name: z.string()
+    .min(3, "Name must be at least 3 characters")
+    .max(50, "Name must be less than 50 characters"),
+  phoneNumber: z.string()
+    .min(1, "Phone number is required")
+    .refine((value) => {
+      try {
+        const phoneNumber = parsePhoneNumber(value, 'ET')
+        return phoneNumber?.isValid() || false
+      } catch {
+        return false
+      }
+    }, "Please enter a valid Ethiopian phone number"),
+  photo: z.any().optional(), // Will be handled separately with file upload
+})
+
+// Vehicle Information Step Schema
+export const vehicleSchema = z.object({
+  type: z.enum(["BICYCLE", "MOTORCYCLE", "CAR"], {
+    required_error: "Please select a vehicle type",
+  }),
+  licensePlate: z.string()
+    .min(3, "License plate must be at least 3 characters")
+    .max(10, "License plate must be less than 10 characters"),
+  maxWeight: z.number({
+    required_error: "Maximum weight is required",
+    invalid_type_error: "Maximum weight must be a number",
+  })
+    .min(0, "Maximum weight must be greater than 0")
+    .max(1000, "Maximum weight must be less than 1000"),
+})
+
+// Complete Form Schema
+export const createDeliveryPersonSchema = z.object({
+  basicInformation: basicInformationSchema,
+  vehicle: vehicleSchema,
+})
+
+// Types
+export type BasicInformationForm = z.infer<typeof basicInformationSchema>
+export type VehicleForm = z.infer<typeof vehicleSchema>
+export type CreateDeliveryPersonForm = z.infer<typeof createDeliveryPersonSchema>
+
+export type CreateDeliveryPersonStep = 'basicInformation' | 'vehicle' | 'review' 
\ No newline at end of file
diff --git a/src/features/delivery-persons/types/index.ts b/src/features/delivery-persons/types/index.ts
new file mode 100644
index 0000000..03f967b
--- /dev/null
+++ b/src/features/delivery-persons/types/index.ts
@@ -0,0 +1,57 @@
+export enum DeliveryPersonStatus {
+  ONLINE = 'ONLINE',
+  OFFLINE = 'OFFLINE'
+}
+
+export enum DeliveryStatus {
+  ASSIGNED = 'ASSIGNED',
+  IN_PROGRESS = 'IN_PROGRESS',
+  COMPLETED = 'COMPLETED',
+  FAILED = 'FAILED'
+}
+
+export interface Vehicle {
+  id: string
+  type: string
+  licensePlate: string
+  maxWeight: number
+  currentLatitude: number
+  currentLongitude: number
+}
+
+export interface DeliveryPerson {
+  id: string
+  name: string
+  phoneNumber: string
+  status: DeliveryPersonStatus
+  averageRating: number
+  completedDeliveries: number
+  failedDeliveries: number
+  vehicles: Vehicle[]
+  deliveries: Array<{
+    id: string
+    status: DeliveryStatus
+    package: {
+      id: string
+      description: string
+    }
+  }>
+}
+
+export interface DeliveryPersonsResponse {
+  success: boolean
+  deliveryPersons: DeliveryPerson[]
+}
+
+export interface DeliveryPersonResponse {
+  success: boolean
+  message?: string
+  deliveryPerson: DeliveryPerson
+}
+
+export interface PaginationResponse {
+  total: number
+  pages: number
+  currentPage: number
+  limit: number
+} 
\ No newline at end of file
diff --git a/src/features/packages/components/assign-delivery-person-dialog.tsx b/src/features/packages/components/assign-delivery-person-dialog.tsx
new file mode 100644
index 0000000..69d7f1f
--- /dev/null
+++ b/src/features/packages/components/assign-delivery-person-dialog.tsx
@@ -0,0 +1,249 @@
+import { Button } from '@/components/ui/button'
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogFooter,
+  DialogHeader,
+  DialogTitle,
+  DialogTrigger,
+} from '@/components/ui/dialog'
+import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'
+import { useState } from 'react'
+import packagesApi from '../data/packagesApi'
+import { toast } from '@/hooks/use-toast'
+import { Loader2, UserCheck2, Star, Phone, Car, MapPin, AlertCircle } from 'lucide-react'
+import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem } from '@/components/ui/command'
+import { ScrollArea } from '@/components/ui/scroll-area'
+import { Badge } from '@/components/ui/badge'
+import { cn } from '@/lib/utils'
+import { Package } from '../types'
+import { Alert, AlertDescription } from '@/components/ui/alert'
+import { calculateDistance } from '@/lib/utils'
+
+// Enhanced delivery person interface (extending the API interface)
+interface DeliveryPerson {
+  id: string;
+  name: string;
+  phoneNumber: string;
+  rating: number;
+  currentLocation: {
+    latitude: number;
+    longitude: number;
+  };
+  vehicle: {
+    id: string;
+    type: string;
+    plateNumber: string;
+    maxWeight: number;
+  };
+  status?: 'ONLINE' | 'OFFLINE';
+}
+
+interface AssignDeliveryPersonDialogProps {
+  package: Package;
+  onAssigned?: () => void;
+}
+
+export function AssignDeliveryPersonDialog({ package: pkg, onAssigned }: AssignDeliveryPersonDialogProps) {
+  const [open, setOpen] = useState(false)
+  const [selectedDeliveryPerson, setSelectedDeliveryPerson] = useState<DeliveryPerson | null>(null)
+  const queryClient = useQueryClient()
+
+  const { data, isLoading } = useQuery({
+    queryKey: ['available-delivery-persons', pkg.id],
+    queryFn: () => packagesApi.getAvailableDeliveryPersons(pkg.id),
+    enabled: open,
+  })
+
+  const { mutate: assignDeliveryPerson, isPending: isAssigning } = useMutation({
+    mutationFn: () => {
+      if (!selectedDeliveryPerson) throw new Error('No delivery person selected')
+      return packagesApi.assign(pkg.id, selectedDeliveryPerson.id, selectedDeliveryPerson.vehicle.id)
+    },
+    onSuccess: () => {
+      toast({
+        title: 'Success',
+        description: 'Delivery person assigned successfully',
+      })
+      queryClient.invalidateQueries({ queryKey: ['package', pkg.id] })
+      setOpen(false)
+      onAssigned?.()
+    },
+    onError: (error) => {
+      toast({
+        variant: 'destructive',
+        title: 'Error',
+        description: error instanceof Error ? error.message : 'Failed to assign delivery person',
+      })
+    },
+  })
+
+  const handleAssign = () => {
+    if (!selectedDeliveryPerson) {
+      toast({
+        variant: 'destructive',
+        title: 'Error',
+        description: 'Please select a delivery person',
+      })
+      return
+    }
+
+    // Validate vehicle capacity
+    if (selectedDeliveryPerson.vehicle.maxWeight < pkg.weight) {
+      toast({
+        variant: 'destructive',
+        title: 'Error',
+        description: 'Selected vehicle cannot handle package weight',
+      })
+      return
+    }
+
+    assignDeliveryPerson()
+  }
+
+  return (
+    <Dialog open={open} onOpenChange={setOpen}>
+      <DialogTrigger asChild>
+        <Button>
+          <UserCheck2 className="mr-2 h-4 w-4" />
+          Assign Delivery Person
+        </Button>
+      </DialogTrigger>
+      <DialogContent className="sm:max-w-xl">
+        <DialogHeader>
+          <DialogTitle>Assign Delivery Person</DialogTitle>
+          <DialogDescription>
+            Search and select a delivery person to assign to this package
+          </DialogDescription>
+        </DialogHeader>
+        {isLoading ? (
+          <div className="flex items-center justify-center py-8">
+            <Loader2 className="h-8 w-8 animate-spin text-primary" />
+          </div>
+        ) : !data?.deliveryPersons.length ? (
+          <div className="py-6 text-center text-muted-foreground">
+            No available delivery persons found
+          </div>
+        ) : (
+          <div className="mt-4">
+            <Command className="rounded-lg border shadow-md">
+              <CommandInput placeholder="Search by name, phone, or vehicle..." />
+              <CommandEmpty>No delivery person found</CommandEmpty>
+              <CommandGroup>
+                <ScrollArea className="h-[300px]">
+                  {data.deliveryPersons.map((person) => {
+                    const distance = calculateDistance(
+                      person.currentLocation.latitude,
+                      person.currentLocation.longitude,
+                      pkg.pickupLocation.latitude,
+                      pkg.pickupLocation.longitude
+                    )
+                    const canHandleWeight = person.vehicle.maxWeight >= pkg.weight
+                    // Enhanced person object with status if it comes from API
+                    const enhancedPerson = {
+                      ...person,
+                      status: person.status || 'OFFLINE' // Default to OFFLINE if status not provided
+                    }
+
+                    return (
+                      <CommandItem
+                        key={person.id}
+                        value={`${person.name} ${person.phoneNumber} ${person.vehicle.plateNumber}`}
+                        onSelect={() => setSelectedDeliveryPerson(enhancedPerson)}
+                        className={cn(
+                          "px-4 py-3 relative",
+                          selectedDeliveryPerson?.id === person.id && 
+                          "border-2 border-primary bg-primary/5 rounded-md"
+                        )}
+                      >
+                        {selectedDeliveryPerson?.id === person.id && (
+                          <div className="absolute right-2 top-2 h-5 w-5 rounded-full bg-primary flex items-center justify-center">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="3" strokeLinecap="round" strokeLinejoin="round" className="text-primary-foreground">
+                              <polyline points="20 6 9 17 4 12"></polyline>
+                            </svg>
+                          </div>
+                        )}
+                        <div className={cn(
+                          'flex flex-col w-full gap-2',
+                          selectedDeliveryPerson?.id === person.id && 'pr-6'
+                        )}>
+                          <div className="flex items-center justify-between">
+                            <div className="flex items-center gap-2">
+                              <div className="relative">
+                                <div className={cn(
+                                  "h-8 w-8 rounded-full flex items-center justify-center",
+                                  selectedDeliveryPerson?.id === person.id ? "bg-primary text-primary-foreground" : "bg-muted"
+                                )}>
+                                  {person.name.charAt(0).toUpperCase()}
+                                </div>
+                                {enhancedPerson.status === 'ONLINE' && (
+                                  <div className="absolute bottom-0 right-0 h-2.5 w-2.5 rounded-full bg-green-500 border border-background"></div>
+                                )}
+                              </div>
+                              <div className="flex flex-col">
+                                <span className="font-medium">{person.name}</span>
+                                <div className="flex items-center gap-2 text-sm text-muted-foreground">
+                                  <Phone className="h-3 w-3" />
+                                  <span>{person.phoneNumber}</span>
+                                </div>
+                              </div>
+                            </div>
+                            <Badge variant="secondary" className="flex items-center gap-1">
+                              <Star className="h-3 w-3" />
+                              {person.rating.toFixed(1)}
+                            </Badge>
+                          </div>
+
+                          <div className="flex items-center justify-between">
+                            <div className="flex items-center gap-2">
+                              <Car className="h-3 w-3" />
+                              <span>{person.vehicle.type} • {person.vehicle.plateNumber}</span>
+                              <span>({person.vehicle.maxWeight} kg max)</span>
+                            </div>
+                          </div>
+
+                          <div className="flex items-center gap-2">
+                            <MapPin className="h-3 w-3" />
+                            <span>{distance.toFixed(1)} km away</span>
+                          </div>
+
+                          {!canHandleWeight && (
+                            <Alert variant="destructive">
+                              <AlertCircle className="h-4 w-4" />
+                              <AlertDescription>
+                                Vehicle cannot handle package weight ({pkg.weight} kg)
+                              </AlertDescription>
+                            </Alert>
+                          )}
+                        </div>
+                      </CommandItem>
+                    )
+                  })}
+                </ScrollArea>
+              </CommandGroup>
+            </Command>
+          </div>
+        )}
+        <DialogFooter className="mt-4">
+          <Button
+            onClick={handleAssign}
+            disabled={!selectedDeliveryPerson || isAssigning}
+            className="w-full"
+          >
+            {isAssigning ? (
+              <>
+                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                Assigning...
+              </>
+            ) : selectedDeliveryPerson ? (
+              <>Assign to {selectedDeliveryPerson.name}</>
+            ) : (
+              'Select a Delivery Person'
+            )}
+          </Button>
+        </DialogFooter>
+      </DialogContent>
+    </Dialog>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/packages/components/assign-delivery-person.tsx b/src/features/packages/components/assign-delivery-person.tsx
new file mode 100644
index 0000000..4ff7048
--- /dev/null
+++ b/src/features/packages/components/assign-delivery-person.tsx
@@ -0,0 +1,176 @@
+import { useState } from "react"
+import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { Button } from "@/components/ui/button"
+import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem } from "@/components/ui/command"
+import { toast } from "@/hooks/use-toast"
+import { Package, DeliveryStatus } from "../types"
+import { Loader2, Car, Star, Phone, MapPin } from "lucide-react"
+import { cn } from "@/lib/utils"
+import packagesApi from "../data/packagesApi"
+import { ScrollArea } from '@/components/ui/scroll-area'
+import { Badge } from '@/components/ui/badge'
+
+interface DeliveryPerson {
+  id: string
+  name: string
+  phoneNumber: string
+  rating: number
+  currentLocation: {
+    latitude: number
+    longitude: number
+  }
+  vehicle: {
+    id: string
+    type: string
+    plateNumber: string
+    maxWeight: number
+  }
+}
+
+interface AssignDeliveryPersonProps {
+  package: Package
+  onAssigned?: () => void
+}
+
+export function AssignDeliveryPerson({ package: pkg, onAssigned }: AssignDeliveryPersonProps) {
+  const [selectedPerson, setSelectedPerson] = useState<DeliveryPerson | null>(null)
+  const queryClient = useQueryClient()
+
+  const { data, isLoading, error } = useQuery({
+    queryKey: ["delivery-persons", pkg.id],
+    queryFn: () => packagesApi.getAvailableDeliveryPersons(pkg.id),
+    enabled: !pkg.delivery?.deliveryPersonId && pkg.delivery?.status !== DeliveryStatus.IN_PROGRESS
+  })
+
+  const assignMutation = useMutation({
+    mutationFn: () => {
+      if (!selectedPerson) throw new Error("No delivery person selected")
+      return packagesApi.assign(
+        pkg.id,
+        selectedPerson.id,
+        selectedPerson.vehicle.id
+      )
+    },
+    onSuccess: (response) => {
+      toast({
+        title: "Success",
+        description: response.message || "Package assigned successfully"
+      })
+      queryClient.invalidateQueries({ queryKey: ["package", pkg.id] })
+      onAssigned?.()
+    },
+    onError: (error) => {
+      toast({
+        variant: "destructive",
+        title: "Error",
+        description: error instanceof Error ? error.message : "Failed to assign package"
+      })
+    }
+  })
+
+  // Don't show the component if package is already assigned or in progress
+  if (pkg.delivery?.deliveryPersonId || pkg.delivery?.status === DeliveryStatus.IN_PROGRESS) {
+    return null
+  }
+
+  return (
+    <Card>
+      <CardHeader>
+        <CardTitle className="text-base font-medium">Assign Delivery Person</CardTitle>
+      </CardHeader>
+      <CardContent className="space-y-4">
+        {error ? (
+          <div className="text-sm text-destructive">
+            Failed to load delivery persons. Please try again.
+          </div>
+        ) : (
+          <>
+            {isLoading ? (
+              <div className="flex items-center justify-center py-8">
+                <Loader2 className="h-8 w-8 animate-spin text-primary" />
+              </div>
+            ) : !data?.deliveryPersons.length ? (
+              <div className="py-6 text-center text-muted-foreground">
+                No available delivery persons found
+              </div>
+            ) : (
+              <div className="mt-4">
+                <Command className="rounded-lg border shadow-md">
+                  <CommandInput placeholder="Search by name, phone, or vehicle..." />
+                  <CommandEmpty>No delivery person found</CommandEmpty>
+                  <CommandGroup>
+                    <ScrollArea className="h-[300px]">
+                      {data.deliveryPersons.map((person) => (
+                        <CommandItem
+                          key={person.id}
+                          value={`${person.name} ${person.phoneNumber} ${person.vehicle.plateNumber}`}
+                          onSelect={() => setSelectedPerson(person)}
+                          className="px-4 py-3"
+                        >
+                          <div className={cn(
+                            'flex flex-col w-full gap-2',
+                            selectedPerson?.id === person.id && 'border-primary'
+                          )}>
+                            <div className="flex items-center justify-between">
+                              <div className="flex items-center gap-2">
+                                <div className={cn(
+                                  "h-8 w-8 rounded-full flex items-center justify-center",
+                                  selectedPerson?.id === person.id ? "bg-primary text-primary-foreground" : "bg-muted"
+                                )}>
+                                  {person.name.charAt(0).toUpperCase()}
+                                </div>
+                                <div className="flex flex-col">
+                                  <span className="font-medium">{person.name}</span>
+                                  <div className="flex items-center gap-2 text-sm text-muted-foreground">
+                                    <Phone className="h-3 w-3" />
+                                    <span>{person.phoneNumber}</span>
+                                  </div>
+                                </div>
+                              </div>
+                              <div className="flex items-center gap-2">
+                                <Badge variant="secondary" className="flex items-center gap-1">
+                                  <Star className="h-3 w-3" />
+                                  {person.rating.toFixed(1)}
+                                </Badge>
+                              </div>
+                            </div>
+                            <div className="flex items-center gap-2">
+                              <Car className="h-3 w-3" />
+                              <span>{person.vehicle.type} • {person.vehicle.plateNumber}</span>
+                              <span>({person.vehicle.maxWeight} kg max)</span>
+                            </div>
+                            <div className="flex items-center gap-1">
+                              <MapPin className="h-3 w-3" />
+                              <span>Nearby</span>
+                            </div>
+                          </div>
+                        </CommandItem>
+                      ))}
+                    </ScrollArea>
+                  </CommandGroup>
+                </Command>
+              </div>
+            )}
+            <Button
+              className="w-full"
+              disabled={!selectedPerson || assignMutation.isPending}
+              onClick={() => assignMutation.mutate()}
+            >
+              {assignMutation.isPending ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Assigning...
+                </>
+              ) : selectedPerson ? (
+                <>Assign to {selectedPerson.name}</>
+              ) : (
+                'Select a Delivery Person'
+              )}
+            </Button>
+          </>
+        )}
+      </CardContent>
+    </Card>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/packages/components/columns.tsx b/src/features/packages/components/columns.tsx
index 64dd21d..e24e504 100644
--- a/src/features/packages/components/columns.tsx
+++ b/src/features/packages/components/columns.tsx
@@ -8,10 +8,11 @@ import { format } from 'date-fns'
 import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip'
 import { useQuery } from '@tanstack/react-query'
 import { customerApi } from '@/features/customers/data/customerApi'
-import { Loader2, ArrowDownToLine, ArrowUpFromLine, Trash2 } from 'lucide-react'
+import { Loader2, ArrowDownToLine, ArrowUpFromLine, Trash2, ArrowRight } from 'lucide-react'
 import { LucideIcon } from 'lucide-react'
 import { cn } from '@/lib/utils'
 import { Link } from '@tanstack/react-router'
+import { Button } from '@/components/ui/button'
 
 function formatPlusCode(address: string) {
   // Split the Plus Code from the location name
@@ -99,19 +100,23 @@ export const columns: ColumnDef<Package>[] = [
       const id: string = row.getValue('id')
       const isDeleted = row.original.deleted
       return (
-        <Link
-          to={"/packages/$id"}
-          params={{ id }}
+        <Button
+          variant="link"
+          asChild
           className={cn(
-            'w-[80px] font-medium hover:underline',
-            isDeleted && 'line-through text-muted-foreground'
+            'p-0 h-auto font-medium text-base hover:text-primary transition-colors',
+            'flex items-center gap-1.5 group',
+            isDeleted && 'line-through text-muted-foreground hover:text-muted-foreground'
           )}
         >
-          #{id.slice(-6).toUpperCase()}
-          {isDeleted && (
-            <Trash2 className="h-3 w-3 inline-block ml-1 text-muted-foreground" />
-          )}
-        </Link>
+          <Link to="/packages/$id" params={{ id }}>
+            <span className="font-mono">#{id.slice(-6).toUpperCase()}</span>
+            <ArrowRight className="h-3.5 w-3.5 opacity-0 -translate-x-2 transition-all group-hover:opacity-100 group-hover:translate-x-0" />
+            {isDeleted && (
+              <Trash2 className="h-3 w-3 text-muted-foreground" />
+            )}
+          </Link>
+        </Button>
       )
     },
     enableSorting: false,
@@ -292,10 +297,11 @@ export const columns: ColumnDef<Package>[] = [
     id: 'deleted',
     accessorFn: (row) => row.deleted ? 'true' : 'false',
     enableHiding: false,
+    enableColumnFilter: true,
     filterFn: (row, id, value) => {
       if (value === 'all') return true
       return row.getValue(id) === value
-    },
+    }
   },
   {
     id: 'actions',
diff --git a/src/features/packages/components/data-table-toolbar.tsx b/src/features/packages/components/data-table-toolbar.tsx
index 50b11cf..8136106 100644
--- a/src/features/packages/components/data-table-toolbar.tsx
+++ b/src/features/packages/components/data-table-toolbar.tsx
@@ -22,21 +22,25 @@ export function DataTableToolbar<TData>({
   const showDeleted = table.getColumn('deleted')?.getFilterValue() === 'true'
   const queryClient = useQueryClient()
 
-  const handleTrashClick = () => {
+  const handleTrashClick = async () => {
     const deletedColumn = table.getColumn('deleted')
     if (deletedColumn) {
       const newValue = deletedColumn.getFilterValue() === 'true' ? 'false' : 'true'
-      deletedColumn.setFilterValue(newValue)
+      
+      // First update the parent state
       onShowDeletedChange(newValue === 'true')
       
+      // Then update the filter value
+      deletedColumn.setFilterValue(newValue)
+      
       // Prefetch the other dataset
       if (newValue === 'true') {
-        queryClient.prefetchQuery({
+        await queryClient.prefetchQuery({
           queryKey: ['packages', 'deleted'],
           queryFn: () => packagesApi.getDeleted(),
         })
       } else {
-        queryClient.prefetchQuery({
+        await queryClient.prefetchQuery({
           queryKey: ['packages'],
           queryFn: () => packagesApi.getAll(),
         })
diff --git a/src/features/packages/components/data-table.tsx b/src/features/packages/components/data-table.tsx
index 13cfe5c..72ef1e0 100644
--- a/src/features/packages/components/data-table.tsx
+++ b/src/features/packages/components/data-table.tsx
@@ -37,7 +37,9 @@ export function DataTable<TData>({
   onShowDeletedChange
 }: DataTableProps<TData>) {
   const [rowSelection, setRowSelection] = useState({})
-  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({})
+  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({
+    deleted: false
+  })
   const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([
     {
       id: 'deleted',
diff --git a/src/features/packages/components/delivery-status.tsx b/src/features/packages/components/delivery-status.tsx
new file mode 100644
index 0000000..6615ca9
--- /dev/null
+++ b/src/features/packages/components/delivery-status.tsx
@@ -0,0 +1,174 @@
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { Badge } from "@/components/ui/badge"
+import { Package, DeliveryStatus as DeliveryStatusEnum } from "../types"
+import { cn } from "@/lib/utils"
+import { 
+  CheckCircle2, 
+  AlertCircle, 
+  Car, 
+  User,
+  Phone,
+  Clock
+} from "lucide-react"
+import { format } from "date-fns"
+
+interface DeliveryStatusProps {
+  package: Package
+}
+
+const statusSteps = [
+  {
+    status: DeliveryStatusEnum.ASSIGNED,
+    title: "Assigned",
+    description: "Delivery person has been assigned and is preparing to pick up the package",
+    icon: User,
+    color: "text-blue-500"
+  },
+  {
+    status: DeliveryStatusEnum.IN_PROGRESS,
+    title: "In Progress",
+    description: "Delivery person is on the way to deliver the package",
+    icon: Car,
+    color: "text-yellow-500"
+  },
+  {
+    status: DeliveryStatusEnum.COMPLETED,
+    title: "Completed",
+    description: "Package has been successfully delivered",
+    icon: CheckCircle2,
+    color: "text-green-500"
+  },
+  {
+    status: DeliveryStatusEnum.FAILED,
+    title: "Failed",
+    description: "Delivery could not be completed",
+    icon: AlertCircle,
+    color: "text-red-500"
+  }
+]
+
+export function DeliveryStatus({ package: pkg }: DeliveryStatusProps) {
+  if (!pkg.delivery) return null
+
+  const currentStepIndex = statusSteps.findIndex(step => step.status === pkg.delivery?.status)
+  const currentStep = statusSteps[currentStepIndex] || statusSteps[0] // Fallback to ASSIGNED if status not found
+
+  // Get status timestamps
+  const getStatusTime = (status: DeliveryStatusEnum) => {
+    switch (status) {
+      case DeliveryStatusEnum.ASSIGNED:
+        return pkg.createdAt
+      case DeliveryStatusEnum.IN_PROGRESS:
+        return pkg.delivery?.pickupTime
+      case DeliveryStatusEnum.COMPLETED:
+      case DeliveryStatusEnum.FAILED:
+        return pkg.delivery?.deliveryTime
+      default:
+        return null
+    }
+  }
+
+  return (
+    <Card>
+      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
+        <CardTitle className="text-base font-medium">Delivery Status</CardTitle>
+        <Badge 
+          variant={pkg.delivery.status === DeliveryStatusEnum.COMPLETED ? "default" : 
+            pkg.delivery.status === DeliveryStatusEnum.FAILED ? "destructive" : 
+            pkg.delivery.status === DeliveryStatusEnum.IN_PROGRESS ? "secondary" : 
+            "outline"}
+        >
+          {currentStep.title}
+        </Badge>
+      </CardHeader>
+      <CardContent className="space-y-6">
+        {/* Delivery Person Info */}
+        <div className="flex items-center gap-3">
+          <div className="h-10 w-10 rounded-full bg-muted flex items-center justify-center">
+            <User className="h-5 w-5" />
+          </div>
+          <div className="flex-1">
+            <h3 className="font-medium">{pkg.delivery.deliveryPerson?.name || 'Unknown'}</h3>
+            <div className="flex items-center gap-2 text-sm text-muted-foreground">
+              <Phone className="h-4 w-4" />
+              <span>{pkg.delivery.deliveryPerson?.phoneNumber || 'No phone number'}</span>
+            </div>
+          </div>
+        </div>
+
+        {/* Status Steps */}
+        <div className="relative space-y-4 pl-8">
+          {/* Vertical Timeline Line */}
+          <div className="absolute left-[11px] top-2 bottom-2 w-[2px] bg-muted" />
+          
+          {statusSteps.map((step, index) => {
+            const isCompleted = currentStepIndex >= 0 && index < currentStepIndex
+            const isCurrent = index === currentStepIndex
+            const timestamp = getStatusTime(step.status)
+
+            return (
+              <div key={step.status} className="flex items-start gap-3 relative">
+                {/* Timeline Node */}
+                <div className={cn(
+                  "absolute -left-8 h-6 w-6 rounded-full flex items-center justify-center mt-1 z-10 border-2 border-background",
+                  isCompleted ? "bg-green-100 text-green-500" :
+                  isCurrent ? step.color.replace("text-", "bg-").replace("-500", "-100") :
+                  "bg-muted text-muted-foreground"
+                )}>
+                  {isCompleted ? (
+                    <CheckCircle2 className="h-4 w-4" />
+                  ) : (
+                    <step.icon className="h-4 w-4" />
+                  )}
+                </div>
+                <div className="flex-1 pt-1">
+                  <div className="flex items-center gap-2">
+                    <h4 className={cn(
+                      "font-medium",
+                      isCurrent && step.color
+                    )}>
+                      {step.title}
+                    </h4>
+                    {isCurrent && (
+                      <Badge variant="outline" className="text-xs">Current</Badge>
+                    )}
+                    {timestamp && (
+                      <div className="flex items-center gap-1 text-xs text-muted-foreground ml-2">
+                        <Clock className="h-3 w-3" />
+                        <span>{format(new Date(timestamp), 'MMM d, h:mm a')}</span>
+                      </div>
+                    )}
+                  </div>
+                  <p className="text-sm text-muted-foreground">{step.description}</p>
+                </div>
+              </div>
+            )
+          })}
+        </div>
+
+        {/* Next Steps */}
+        {pkg.delivery.status === DeliveryStatusEnum.ASSIGNED && (
+          <div className="rounded-lg bg-blue-50 dark:bg-blue-950/50 p-4">
+            <h4 className="font-medium text-blue-700 dark:text-blue-300 mb-2">Next Steps</h4>
+            <ol className="list-decimal list-inside space-y-2 text-sm text-blue-600 dark:text-blue-400">
+              <li>Delivery person will arrive at pickup location</li>
+              <li>Package will be scanned and picked up</li>
+              <li>Delivery person will start the delivery journey</li>
+            </ol>
+          </div>
+        )}
+
+        {pkg.delivery.status === DeliveryStatusEnum.IN_PROGRESS && (
+          <div className="rounded-lg bg-yellow-50 dark:bg-yellow-950/50 p-4">
+            <h4 className="font-medium text-yellow-700 dark:text-yellow-300 mb-2">Next Steps</h4>
+            <ol className="list-decimal list-inside space-y-2 text-sm text-yellow-600 dark:text-yellow-400">
+              <li>Delivery person is en route to delivery location</li>
+              <li>Package will be scanned at delivery location</li>
+              <li>Delivery person will complete the delivery</li>
+            </ol>
+          </div>
+        )}
+      </CardContent>
+    </Card>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/packages/components/package-details.tsx b/src/features/packages/components/package-details.tsx
new file mode 100644
index 0000000..7dce91c
--- /dev/null
+++ b/src/features/packages/components/package-details.tsx
@@ -0,0 +1,115 @@
+import { Package } from '../types'
+import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
+import { Badge } from '@/components/ui/badge'
+import { format } from 'date-fns'
+import { ArrowDownToLine, ArrowUpFromLine } from 'lucide-react'
+import { useQuery } from '@tanstack/react-query'
+import { customerApi } from '@/features/customers/data/customerApi'
+import { AssignDeliveryPersonDialog } from './assign-delivery-person-dialog'
+import { DeliveryStatus } from "./delivery-status"
+
+interface PackageDetailsProps {
+  package: Package
+}
+
+export function PackageDetails({ package: pkg }: PackageDetailsProps) {
+  const { data: customer } = useQuery({
+    queryKey: ['customer', pkg.customerId],
+    queryFn: () => customerApi.getById(pkg.customerId),
+    enabled: !!pkg.customerId
+  })
+
+  return (
+    <div className="space-y-6">
+      {/* Header */}
+      <div className="flex items-center justify-between">
+        <div>
+          <h2 className="text-2xl font-bold tracking-tight">Package Details</h2>
+          <p className="text-muted-foreground">
+            ID: {pkg.id}
+          </p>
+        </div>
+        {!pkg.delivery?.deliveryPersonId && (
+          <AssignDeliveryPersonDialog package={pkg} />
+        )}
+      </div>
+
+      {/* Basic Information */}
+      <Card>
+        <CardHeader>
+          <CardTitle className="text-base font-medium">Basic Information</CardTitle>
+        </CardHeader>
+        <CardContent className="space-y-4">
+          <div className="grid grid-cols-2 gap-4">
+            <div>
+              <p className="text-sm font-medium text-muted-foreground">Description</p>
+              <p>{pkg.description}</p>
+            </div>
+            <div>
+              <p className="text-sm font-medium text-muted-foreground">Weight</p>
+              <p>{pkg.weight} kg</p>
+            </div>
+            <div>
+              <p className="text-sm font-medium text-muted-foreground">Customer</p>
+              <p>{customer?.customer.name || 'Loading...'}</p>
+            </div>
+            <div>
+              <p className="text-sm font-medium text-muted-foreground">Created At</p>
+              <p>{format(new Date(pkg.createdAt), 'PPP')}</p>
+            </div>
+          </div>
+        </CardContent>
+      </Card>
+
+      {/* Locations */}
+      <Card>
+        <CardHeader>
+          <CardTitle className="text-base font-medium">Locations</CardTitle>
+        </CardHeader>
+        <CardContent className="space-y-4">
+          <div className="grid grid-cols-2 gap-4">
+            <div>
+              <div className="flex items-center gap-2 mb-2">
+                <ArrowDownToLine className="h-4 w-4 text-muted-foreground" />
+                <p className="text-sm font-medium">Pickup Location</p>
+              </div>
+              <p className="text-sm">{pkg.pickupLocation.address}</p>
+              <p className="text-sm text-muted-foreground">{pkg.pickupLocation.name}</p>
+            </div>
+            <div>
+              <div className="flex items-center gap-2 mb-2">
+                <ArrowUpFromLine className="h-4 w-4 text-muted-foreground" />
+                <p className="text-sm font-medium">Delivery Location</p>
+              </div>
+              <p className="text-sm">{pkg.deliveryLocation.address}</p>
+              <p className="text-sm text-muted-foreground">{pkg.deliveryLocation.name}</p>
+            </div>
+          </div>
+        </CardContent>
+      </Card>
+
+      {/* Delivery Status */}
+      {pkg.delivery?.deliveryPersonId && (
+        <DeliveryStatus package={pkg} />
+      )}
+
+      {/* Labels */}
+      {pkg.labels.length > 0 && (
+        <Card>
+          <CardHeader>
+            <CardTitle className="text-base font-medium">Labels</CardTitle>
+          </CardHeader>
+          <CardContent>
+            <div className="flex flex-wrap gap-2">
+              {pkg.labels.map((label) => (
+                <Badge key={label.id} variant="secondary">
+                  {label.label}
+                </Badge>
+              ))}
+            </div>
+          </CardContent>
+        </Card>
+      )}
+    </div>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/packages/create/components/create-package-component.tsx b/src/features/packages/create/components/create-package-component.tsx
index 1b518f2..f191037 100644
--- a/src/features/packages/create/components/create-package-component.tsx
+++ b/src/features/packages/create/components/create-package-component.tsx
@@ -1,102 +1,34 @@
 /* eslint-disable no-console */
 
-/* eslint-disable @typescript-eslint/no-unused-vars */
-import { useState, useCallback, useRef, useEffect } from 'react'
-import { z } from 'zod'
-import axios from 'axios'
-import { useForm } from 'react-hook-form'
+import { useState, useCallback, useRef, useEffect } from "react"
+import { Button } from "@/components/ui/button"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { MapPin, X, Loader2, Check, Car, Bike } from "lucide-react"
+import { PlaceAutocomplete } from "./place-autocomplete"
+import { VehicleSelector } from "./vehicle-selector"
+import { debounce } from "../utils/debounce"
+import { useForm } from "react-hook-form"
 import { zodResolver } from '@hookform/resolvers/zod'
-import { useQuery } from '@tanstack/react-query'
+import { z } from "zod"
+import { toast } from "@/hooks/use-toast"
+import { FormField, FormItem, Form, FormLabel, FormMessage } from "@/components/ui/form"
+import { Input } from "@/components/ui/input"
+import { IconArrowBack } from "@tabler/icons-react"
+import packagesApi from '../../data/packagesApi'
 import { useNavigate } from '@tanstack/react-router'
-import {
-  IconArrowBack,
-  IconChevronsRight,
-  IconUserCheck,
-  IconUserExclamation,
-} from '@tabler/icons-react'
-import {
-  GoogleMap,
-  Marker,
-  DirectionsRenderer,
-  InfoWindow,
-} from '@react-google-maps/api'
-import { useLoadScript } from '@react-google-maps/api'
-import {
-  MapPin,
-  X,
-  ZoomIn,
-  Loader2,
-  Check,
-  ArrowRight,
-  Car,
-  Bike,
-} from 'lucide-react'
-import { AlertCircle } from 'lucide-react'
-// import { Skeleton } from "@/components/ui/skeleton"
-import { cn } from '@/lib/utils'
 import { handleServerError } from '@/utils/handle-server-error'
-import { toast } from '@/hooks/use-toast'
-import { Alert, AlertDescription } from '@/components/ui/alert'
-import { Badge } from '@/components/ui/badge'
-import { Button } from '@/components/ui/button'
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
-import {
-  Command,
-  CommandEmpty,
-  CommandGroup,
-  CommandInput,
-  CommandItem,
-  CommandList,
-} from '@/components/ui/command'
-import {
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  Form,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form'
-import { Input } from '@/components/ui/input'
-import { Label } from '@/components/ui/label'
-import {
-  Popover,
-  PopoverContent,
-  PopoverTrigger,
-} from '@/components/ui/popover'
-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'
-import { customerApi } from '@/features/customers/data/customerApi'
-import { Customer } from '@/features/customers/types'
-import { useUsersStore } from '@/features/users/data/usersStore'
+import { DeliveryMap } from './delivery-map'
+import { Location } from '../types'
 import { labels } from '../../data/data'
-import packagesApi from '../../data/packagesApi'
-// import { useTheme } from "next-themes"
-import { debounce } from '../utils/debounce'
-import { MapErrorBoundary } from './map-error-boundary'
-import { PlaceAutocomplete } from './place-autocomplete'
-// import { DirectionsDisplay } from "./directions-display"
-import { VehicleSelector } from './vehicle-selector'
-
-interface Location {
-  lat: number
-  lng: number
-  address: string
-  name?: string
-  placeId?: string
-}
+import { CustomerSelector } from './customer-selector'
+import { PackageInformationForm } from './package-information-form'
+import { Badge } from "@/components/ui/badge"
 
 type NullableLocation = Location | null
 
-interface PackageLocation {
-  lat: number
-  lng: number
-  address: string
-  placeId?: string
-}
-
 interface CreatePackageComponentProps {
-  onClearAll?: () => void
-  clearTrigger?: number
+  onClearAll?: () => void;
+  clearTrigger?: number;
 }
 
 const defaultCenter = {
@@ -106,259 +38,221 @@ const defaultCenter = {
 
 const defaultZoom = 12
 
-// const CIRCLE_RADIUS = 50 // 50 meters
-
 const MEKELLE_SERVICE_AREA = {
-  north: 13.54, // Slightly north of Mekelle
-  south: 13.4, // South enough to include Quiha and surrounding areas
-  east: 39.54, // East of Mekelle
-  west: 39.4, // West of Mekelle
+  north: 13.54,
+  south: 13.4,
+  east: 39.54,
+  west: 39.4,
 }
 
-const MAP_CENTER = { lat: 13.47, lng: 39.47 }
-
-const WEIGHT_RANGES = [
-  {
-    id: 'small',
-    label: 'Small Package',
-    description: '0.1 - 5 kg',
-    value: '0.1-5',
-    recommendedVehicle: 'BICYCLE',
-    priceRange: '100-200 Birr',
-  },
-  {
-    id: 'medium',
-    label: 'Medium Package',
-    description: '5 - 15 kg',
-    value: '5-15',
-    recommendedVehicle: 'MOTORCYCLE',
-    priceRange: '200-350 Birr',
-  },
-  {
-    id: 'large',
-    label: 'Large Package',
-    description: '15 - 30 kg',
-    value: '15-30',
-    recommendedVehicle: 'MOTORCYCLE',
-    priceRange: '350-500 Birr',
-  },
-  {
-    id: 'xlarge',
-    label: 'Extra Large Package',
-    description: '30 - 100 kg',
-    value: '30-100',
-    recommendedVehicle: 'CAR',
-    priceRange: '500-1000 Birr',
-  },
-] as const
-
-type WeightRange = (typeof WEIGHT_RANGES)[number]['value']
-type VehicleType = 'BICYCLE' | 'MOTORCYCLE' | 'CAR'
+// const WEIGHT_RANGES = [
+//   {
+//     id: "small",
+//     label: "Small Package",
+//     description: "0.1 - 5 kg",
+//     value: "0.1-5",
+//     recommendedVehicle: "BICYCLE",
+//     priceRange: "100-200 Birr"
+//   },
+//   {
+//     id: "medium",
+//     label: "Medium Package",
+//     description: "5 - 15 kg",
+//     value: "5-15",
+//     recommendedVehicle: "MOTORCYCLE",
+//     priceRange: "200-350 Birr"
+//   },
+//   {
+//     id: "large",
+//     label: "Large Package",
+//     description: "15 - 30 kg",
+//     value: "15-30",
+//     recommendedVehicle: "MOTORCYCLE",
+//     priceRange: "350-500 Birr"
+//   },
+//   {
+//     id: "xlarge",
+//     label: "Extra Large Package",
+//     description: "30 - 100 kg",
+//     value: "30-100",
+//     recommendedVehicle: "CAR",
+//     priceRange: "500-1000 Birr"
+//   },
+// ] as const;
+
+type VehicleType = "BICYCLE" | "MOTORCYCLE" | "CAR";
 
 const MAX_WEIGHTS: Record<VehicleType, number> = {
   BICYCLE: 5,
   MOTORCYCLE: 30,
   CAR: 100,
-} as const
-
-const GOOGLE_MAPS_LIBRARIES = ['places', 'geometry'] as Array<
-  'places' | 'geometry'
->
-type Libraries = ('places' | 'geometry')[]
-
-const packageFormSchema = z
-  .object({
-    customerId: z.string({
-      required_error: 'Please select a customer',
-    }),
-    description: z
-      .string({
-        required_error: 'Please enter a description',
-      })
-      .min(3, 'Description must be at least 3 characters'),
-    weightRange: z.enum(['0.1-5', '5-15', '15-30', '30-100'] as const, {
-      required_error: 'Please select a weight range',
-    }),
-    pickupLocation: z.object(
-      {
-        lat: z.number(),
-        lng: z.number(),
-        address: z.string().min(1, 'Address is required'),
-        placeId: z.string().optional(),
-      },
-      {
-        required_error: 'Please select a pickup location',
-      }
-    ),
-    deliveryLocation: z.object(
-      {
-        lat: z.number(),
-        lng: z.number(),
-        address: z.string().min(1, 'Address is required'),
-        placeId: z.string().optional(),
-      },
-      {
-        required_error: 'Please select a delivery location',
+} as const;
+
+const packageFormSchema = z.object({
+  customerId: z.string({
+    required_error: "Please select a customer",
+  }),
+  description: z.string({
+    required_error: "Please enter a description",
+  }).min(3, "Description must be at least 3 characters"),
+  weightRange: z.enum(["0.1-5", "5-15", "15-30", "30-100"] as const, {
+    required_error: "Please select a weight range",
+  }),
+  pickupLocation: z.object({
+    lat: z.number(),
+    lng: z.number(),
+    address: z.string().min(1, "Address is required"),
+    placeId: z.string().optional(),
+  }, {
+    required_error: "Please select a pickup location",
+  }),
+  deliveryLocation: z.object({
+    lat: z.number(),
+    lng: z.number(),
+    address: z.string().min(1, "Address is required"),
+    placeId: z.string().optional(),
+  }, {
+    required_error: "Please select a delivery location",
+  }),
+  labels: z.array(z.string().refine((value): value is string =>
+    labels.some(label => label.value === value),
+    "Invalid label selected"
+  ))
+    .default([])
+    .superRefine((val, ctx) => {
+      if (val.length > 5) {
+        ctx.addIssue({
+          code: z.ZodIssueCode.too_big,
+          maximum: 5,
+          type: "array",
+          inclusive: true,
+          message: "You can select up to 5 labels",
+        });
       }
-    ),
-    labels: z
-      .array(
-        z
-          .string()
-          .refine(
-            (value): value is string =>
-              labels.some((label) => label.value === value),
-            'Invalid label selected'
-          )
-      )
-      .default([])
-      .superRefine((val, ctx) => {
-        if (val.length > 5) {
-          ctx.addIssue({
-            code: z.ZodIssueCode.too_big,
-            maximum: 5,
-            type: 'array',
-            inclusive: true,
-            message: 'You can select up to 5 labels',
-          })
-        }
-      }),
-    vehicleType: z.enum(['BICYCLE', 'MOTORCYCLE', 'CAR'] as const, {
-      required_error: 'Please select a vehicle type',
     }),
-  })
-  .superRefine((data, ctx) => {
-    // Get the weight range limits
-    const [, maxStr] = data.weightRange.split('-')
-    const maxWeight = parseFloat(maxStr)
-
-    // Check if selected vehicle can handle this weight range
-    const vehicleMaxWeight = MAX_WEIGHTS[data.vehicleType]
-    if (maxWeight > vehicleMaxWeight) {
-      ctx.addIssue({
-        code: z.ZodIssueCode.custom,
-        message: 'Selected vehicle cannot handle this weight range',
-        path: ['vehicleType'],
-      })
-    }
-  })
+  vehicleType: z.enum(["BICYCLE", "MOTORCYCLE", "CAR"] as const, {
+    required_error: "Please select a vehicle type",
+  }),
+}).superRefine((data, ctx) => {
+  // Get the weight range limits
+  const [, maxStr] = data.weightRange.split("-");
+  const maxWeight = parseFloat(maxStr);
+
+  // Check if selected vehicle can handle this weight range
+  const vehicleMaxWeight = MAX_WEIGHTS[data.vehicleType];
+  if (maxWeight > vehicleMaxWeight) {
+    ctx.addIssue({
+      code: z.ZodIssueCode.custom,
+      message: "Selected vehicle cannot handle this weight range",
+      path: ["vehicleType"],
+    });
+  }
+});
 
 type PackageForm = z.infer<typeof packageFormSchema>
 
-export function CreatePackageComponent({
-  onClearAll,
-  clearTrigger = 0,
-}: CreatePackageComponentProps) {
+const mapOptions = {
+  draggableCursor: "crosshair",
+  streetViewControl: false,
+  fullscreenControl: false,
+  mapTypeControl: false,
+  styles: [
+    { elementType: "geometry", stylers: [{ color: "#242f3e" }] },
+    { elementType: "labels.text.stroke", stylers: [{ color: "#242f3e" }] },
+    { elementType: "labels.text.fill", stylers: [{ color: "#746855" }] },
+    {
+      featureType: "administrative.locality",
+      elementType: "labels.text.fill",
+      stylers: [{ color: "#d59563" }],
+    },
+    { featureType: "poi", elementType: "labels.text.fill", stylers: [{ color: "#d59563" }] },
+    { featureType: "poi.park", elementType: "geometry", stylers: [{ color: "#263c3f" }] },
+    { featureType: "poi.park", elementType: "labels.text.fill", stylers: [{ color: "#6b9a76" }] },
+    { featureType: "road", elementType: "geometry", stylers: [{ color: "#38414e" }] },
+    { featureType: "road", elementType: "geometry.stroke", stylers: [{ color: "#212a37" }] },
+    { featureType: "road", elementType: "labels.text.fill", stylers: [{ color: "#9ca5b3" }] },
+    { featureType: "road.highway", elementType: "geometry", stylers: [{ color: "#746855" }] },
+    { featureType: "road.highway", elementType: "geometry.stroke", stylers: [{ color: "#1f2835" }] },
+    { featureType: "road.highway", elementType: "labels.text.fill", stylers: [{ color: "#f3d19c" }] },
+    { featureType: "transit", elementType: "geometry", stylers: [{ color: "#2f3948" }] },
+    { featureType: "transit.station", elementType: "labels.text.fill", stylers: [{ color: "#d59563" }] },
+    { featureType: "water", elementType: "geometry", stylers: [{ color: "#17263c" }] },
+    { featureType: "water", elementType: "labels.text.fill", stylers: [{ color: "#515c6d" }] },
+    { featureType: "water", elementType: "labels.text.stroke", stylers: [{ color: "#17263c" }] },
+  ],
+}
+
+export function CreatePackageComponent({ onClearAll, clearTrigger = 0 }: CreatePackageComponentProps) {
   const [pickupLocation, setPickupLocation] = useState<NullableLocation>(null)
-  const [deliveryLocation, setDeliveryLocation] =
-    useState<NullableLocation>(null)
+  const [deliveryLocation, setDeliveryLocation] = useState<NullableLocation>(null)
   const [center, setCenter] = useState(defaultCenter)
-  const [directions, setDirections] =
-    useState<google.maps.DirectionsResult | null>(null)
+  const [directions, setDirections] = useState<google.maps.DirectionsResult | null>(null)
   const mapRef = useRef<google.maps.Map | null>(null)
-  const [activeInfoWindow, setActiveInfoWindow] = useState<
-    'pickup' | 'delivery' | null
-  >(null)
+  const [activeInfoWindow, setActiveInfoWindow] = useState<"pickup" | "delivery" | null>(null)
   const [errorMessage, setErrorMessage] = useState<string | null>(null)
   const [isCalculatingRoute, setIsCalculatingRoute] = useState(false)
-  const [selectedVehicle, setSelectedVehicle] = useState<VehicleType>('CAR')
-  // const { theme, setTheme } = useTheme()
-  const [fadeOverlay, setFadeOverlay] = useState(false)
-  const [searchTerm, setSearchTerm] = useState('')
-  const [page, setPage] = useState(1)
-  const CUSTOMERS_PER_PAGE = 10
+  const [selectedVehicle, setSelectedVehicle] = useState<VehicleType>("CAR")
+  const [isSubmitting, setIsSubmitting] = useState(false)
 
   const navigate = useNavigate()
 
-  const {
-    data: customersData,
-    isLoading: isLoadingCustomers,
-    isError: isCustomersError,
-    error: customersError,
-    refetch: refetchCustomers,
-    failureCount,
-    isRefetching,
-  } = useQuery({
-    queryKey: [
-      'customers',
-      { search: searchTerm, page, limit: CUSTOMERS_PER_PAGE },
-    ],
-    queryFn: () =>
-      customerApi.getAll({
-        search: searchTerm,
-        page,
-        limit: CUSTOMERS_PER_PAGE,
-      }),
-    staleTime: 1000 * 60 * 15, // 15 minutes
-    gcTime: 1000 * 60 * 30, // 30 minutes
-    retry: 2, // Retry failed requests 2 times
-    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000), // Exponential backoff
-  })
-
   const packageCreateForm = useForm<PackageForm>({
     resolver: zodResolver(packageFormSchema),
     defaultValues: {
       customerId: '',
       description: '',
-      weightRange: '0.1-5',
+      weightRange: "0.1-5",
       pickupLocation: undefined,
       deliveryLocation: undefined,
       labels: [],
-      vehicleType: 'CAR',
+      vehicleType: "CAR",
     },
-    mode: 'onChange', // Enable real-time validation
+    mode: "onChange", // Enable real-time validation
   })
 
-  const removeLocation = useCallback(
-    (type: 'pickup' | 'delivery') => {
-      const emptyLocation = {
-        lat: 0,
-        lng: 0,
-        address: '',
-      }
-
-      if (type === 'pickup') {
-        setPickupLocation(null)
-        packageCreateForm.setValue('pickupLocation', emptyLocation)
-        packageCreateForm.trigger('pickupLocation')
-      } else {
-        setDeliveryLocation(null)
-        packageCreateForm.setValue('deliveryLocation', emptyLocation)
-        packageCreateForm.trigger('deliveryLocation')
-      }
-      setActiveInfoWindow(null)
-      setDirections(null)
-    },
-    [packageCreateForm]
-  )
+  const removeLocation = useCallback((type: "pickup" | "delivery") => {
+    const emptyLocation = {
+      lat: 0,
+      lng: 0,
+      address: '',
+    };
+
+    if (type === "pickup") {
+      setPickupLocation(null);
+      packageCreateForm.setValue('pickupLocation', emptyLocation);
+      packageCreateForm.trigger('pickupLocation');
+    } else {
+      setDeliveryLocation(null);
+      packageCreateForm.setValue('deliveryLocation', emptyLocation);
+      packageCreateForm.trigger('deliveryLocation');
+    }
+    setActiveInfoWindow(null);
+    setDirections(null);
+  }, [packageCreateForm]);
 
   // Clear form function for full form reset
   const clearForm = useCallback(() => {
-    packageCreateForm.reset()
-    setPickupLocation(null)
-    setDeliveryLocation(null)
-    setSearchTerm('')
-    setDirections(null)
-    setErrorMessage(null)
-    setActiveInfoWindow(null)
-  }, [packageCreateForm])
+    packageCreateForm.reset();
+    setPickupLocation(null);
+    setDeliveryLocation(null);
+    setDirections(null);
+    setErrorMessage(null);
+    setActiveInfoWindow(null);
+  }, [packageCreateForm]);
 
   // Effect to handle clear trigger
   useEffect(() => {
     if (clearTrigger > 0) {
-      clearForm()
+      clearForm();
       if (onClearAll) {
-        onClearAll()
+        onClearAll();
       }
     }
-  }, [clearTrigger, clearForm, onClearAll])
-
-  const [isSubmitting, setIsSubmitting] = useState(false)
+  }, [clearTrigger, clearForm, onClearAll]);
 
   const handleFormSubmit = async (data: z.infer<typeof packageFormSchema>) => {
     try {
       setIsSubmitting(true)
-      setFadeOverlay(true)
 
       // Convert weight range to a number (use the average of the range)
       const [min, max] = data.weightRange.split('-').map(Number)
@@ -370,7 +264,7 @@ export function CreatePackageComponent({
         address: data.pickupLocation.address,
         type: 'PICKUP' as const,
         latitude: data.pickupLocation.lat,
-        longitude: data.pickupLocation.lng,
+        longitude: data.pickupLocation.lng
       }
 
       const delivery = {
@@ -378,7 +272,7 @@ export function CreatePackageComponent({
         address: data.deliveryLocation.address,
         type: 'DELIVERY' as const,
         latitude: data.deliveryLocation.lat,
-        longitude: data.deliveryLocation.lng,
+        longitude: data.deliveryLocation.lng
       }
 
       // Create package data matching API spec
@@ -388,31 +282,34 @@ export function CreatePackageComponent({
         weight,
         pickup,
         delivery,
-        labels: data.labels.map((label) => {
-          const labelInfo = labels.find((l) => l.value === label)
+        labels: data.labels.map(label => {
+          const labelInfo = labels.find(l => l.value === label)
           return {
             value: label,
-            label: labelInfo?.label || label,
+            label: labelInfo?.label || label
           }
-        }),
+        })
       }
 
+      console.log("packageData", packageData)
       // Create the package
       const response = await packagesApi.create(packageData)
 
       // Show success message
-      toast({
+    toast({
         title: 'Success',
         description: 'Package created successfully.',
       })
 
-      // Navigate to packages list
-      navigate({ to: '/packages' })
+      // Navigate to package details
+      navigate({
+        to: '/packages/$id',
+        params: { id: response.package.id }
+      })
     } catch (error) {
       handleServerError(error)
     } finally {
       setIsSubmitting(false)
-      setFadeOverlay(false)
     }
   }
 
@@ -426,7 +323,7 @@ export function CreatePackageComponent({
   }, [])
 
   const handleLocationSelect = useCallback(
-    (type: 'pickup' | 'delivery', place: google.maps.places.PlaceResult) => {
+    (type: "pickup" | "delivery", place: google.maps.places.PlaceResult) => {
       if (place.geometry?.location) {
         const lat = place.geometry.location.lat()
         const lng = place.geometry.location.lng()
@@ -435,66 +332,57 @@ export function CreatePackageComponent({
           const location = {
             lat,
             lng,
-            address: place.formatted_address || '',
-            name: place.name || '',
-            placeId: place.place_id || '',
+            address: place.formatted_address || "",
+            name: place.name || "",
+            placeId: place.place_id || "",
           }
-          if (type === 'pickup') {
+          if (type === "pickup") {
             setPickupLocation(location)
-            packageCreateForm.setValue(
-              'pickupLocation',
-              {
-                lat,
-                lng,
-                address: place.formatted_address || '',
-                placeId: place.place_id || '',
-              },
-              { shouldValidate: true }
-            )
+            packageCreateForm.setValue('pickupLocation', {
+              lat,
+              lng,
+              address: place.formatted_address || "",
+              placeId: place.place_id || "",
+            }, { shouldValidate: true })
           } else {
             setDeliveryLocation(location)
-            packageCreateForm.setValue(
-              'deliveryLocation',
-              {
-                lat,
-                lng,
-                address: place.formatted_address || '',
-                placeId: place.place_id || '',
-              },
-              { shouldValidate: true }
-            )
+            packageCreateForm.setValue('deliveryLocation', {
+              lat,
+              lng,
+              address: place.formatted_address || "",
+              placeId: place.place_id || "",
+            }, { shouldValidate: true })
           }
           setCenter({ lat, lng })
           setErrorMessage(null)
         } else {
           setErrorMessage(
-            "We don't provide services in this area. Please select a location within Mekelle and its surrounding areas."
+            "We don't provide services in this area. Please select a location within Mekelle and its surrounding areas.",
           )
         }
       }
     },
-    [isWithinServiceArea, packageCreateForm]
+    [isWithinServiceArea, packageCreateForm],
   )
 
   const handlePickupSelect = useCallback(
     (place: google.maps.places.PlaceResult) => {
-      handleLocationSelect('pickup', place)
+      handleLocationSelect("pickup", place)
     },
-    [handleLocationSelect]
+    [handleLocationSelect],
   )
 
   const handleDeliverySelect = useCallback(
     (place: google.maps.places.PlaceResult) => {
-      handleLocationSelect('delivery', place)
+      handleLocationSelect("delivery", place)
     },
-    [handleLocationSelect]
+    [handleLocationSelect],
   )
 
   const calculateDirections = useCallback(() => {
     if (!pickupLocation || !deliveryLocation) return
 
     setIsCalculatingRoute(true)
-    setFadeOverlay(true)
     const directionsService = new google.maps.DirectionsService()
 
     const calculateRoute = (travelMode: google.maps.TravelMode) => {
@@ -507,10 +395,8 @@ export function CreatePackageComponent({
             departureTime: new Date(),
             trafficModel: google.maps.TrafficModel.BEST_GUESS,
           },
-          avoidHighways:
-            selectedVehicle === 'BICYCLE' || selectedVehicle === 'MOTORCYCLE',
-          avoidTolls:
-            selectedVehicle === 'BICYCLE' || selectedVehicle === 'MOTORCYCLE',
+          avoidHighways: selectedVehicle === "BICYCLE" || selectedVehicle === "MOTORCYCLE",
+          avoidTolls: selectedVehicle === "BICYCLE" || selectedVehicle === "MOTORCYCLE",
         },
         (result, status) => {
           if (status === google.maps.DirectionsStatus.OK) {
@@ -524,20 +410,15 @@ export function CreatePackageComponent({
           } else {
             console.error(`Error fetching directions: ${status}`)
             setErrorMessage(
-              `Unable to calculate route: ${status}. Please try a different mode of transport or check your locations.`
+              `Unable to calculate route: ${status}. Please try a different mode of transport or check your locations.`,
             )
           }
           setIsCalculatingRoute(false)
-          setTimeout(() => setFadeOverlay(false), 300)
-        }
+        },
       )
     }
 
-    calculateRoute(
-      selectedVehicle === 'BICYCLE'
-        ? google.maps.TravelMode.BICYCLING
-        : google.maps.TravelMode.DRIVING
-    )
+    calculateRoute(selectedVehicle === "BICYCLE" ? google.maps.TravelMode.BICYCLING : google.maps.TravelMode.DRIVING)
   }, [pickupLocation, deliveryLocation, selectedVehicle])
 
   const debouncedCalculateDirections = useCallback(
@@ -546,52 +427,18 @@ export function CreatePackageComponent({
         calculateDirections()
       }
     }, 500),
-    [calculateDirections]
+    [calculateDirections],
   )
 
   useEffect(() => {
     if (!isSubmitting) {
-      debouncedCalculateDirections()
+    debouncedCalculateDirections()
     }
-  }, [
-    pickupLocation,
-    deliveryLocation,
-    selectedVehicle,
-    debouncedCalculateDirections,
-    isSubmitting,
-  ])
+  }, [pickupLocation, deliveryLocation, selectedVehicle, debouncedCalculateDirections, isSubmitting]);
 
-  // const handleMarkerDrag = useCallback((newPosition: google.maps.LatLng, type: "pickup" | "delivery") => {
-  //   const lat = newPosition.lat()
-  //   const lng = newPosition.lng()
-  //   if (isWithinServiceArea(lat, lng)) {
-  //     const geocoder = new google.maps.Geocoder()
-  //     geocoder.geocode({ location: newPosition }, (results, status) => {
-  //       if (status === google.maps.GeocoderStatus.OK && results?.[0]) {
-  //         const newLocation = {
-  //           lat,
-  //           lng,
-  //           address: results[0].formatted_address || "",
-  //           // name: results[0].name || "",
-  //           placeId: results[0].place_id || "",
-  //         }
-  //         if (type === "pickup") {
-  //           // setPickupCircleLocation(newLocation)
-  //         } else {
-  //           // setDeliveryCircleLocation(newLocation)
-  //         }
-  //         setErrorMessage(null)
-  //       } else {
-  //         setErrorMessage(`Geocoding failed: ${status}. Please try again.`)
-  //       }
-  //     })
-  //   } else {
-  //     console.log("We don't provide services in this area. Please select a location within Mekelle and its surrounding areas.")
-  //   }
-  // }, [isWithinServiceArea],)
 
   const handleMarkerDragEnd = useCallback(
-    (type: 'pickup' | 'delivery', newPosition: google.maps.LatLng) => {
+    (type: "pickup" | "delivery", newPosition: google.maps.LatLng) => {
       const lat = newPosition.lat()
       const lng = newPosition.lng()
 
@@ -602,19 +449,15 @@ export function CreatePackageComponent({
             const newLocation = {
               lat,
               lng,
-              address: results[0].formatted_address || '',
-              placeId: results[0].place_id || '',
+              address: results[0].formatted_address || "",
+              placeId: results[0].place_id || "",
             }
-            if (type === 'pickup') {
+            if (type === "pickup") {
               setPickupLocation(newLocation)
-              packageCreateForm.setValue('pickupLocation', newLocation, {
-                shouldValidate: true,
-              })
+              packageCreateForm.setValue('pickupLocation', newLocation, { shouldValidate: true })
             } else {
               setDeliveryLocation(newLocation)
-              packageCreateForm.setValue('deliveryLocation', newLocation, {
-                shouldValidate: true,
-              })
+              packageCreateForm.setValue('deliveryLocation', newLocation, { shouldValidate: true })
             }
             setErrorMessage(null)
             debouncedCalculateDirections()
@@ -624,11 +467,11 @@ export function CreatePackageComponent({
         })
       } else {
         setErrorMessage(
-          "We don't provide services in this area. Please select a location within Mekelle and its surrounding areas."
+          "We don't provide services in this area. Please select a location within Mekelle and its surrounding areas.",
         )
       }
     },
-    [isWithinServiceArea, debouncedCalculateDirections, packageCreateForm]
+    [isWithinServiceArea, debouncedCalculateDirections, packageCreateForm],
   )
 
   const handleMapClick = useCallback(
@@ -645,20 +488,16 @@ export function CreatePackageComponent({
             const newLocation = {
               lat,
               lng,
-              address: results[0].formatted_address || '',
-              placeId: results[0].place_id || '',
+              address: results[0].formatted_address || "",
+              placeId: results[0].place_id || "",
             }
 
             if (!pickupLocation) {
               setPickupLocation(newLocation)
-              packageCreateForm.setValue('pickupLocation', newLocation, {
-                shouldValidate: true,
-              })
+              packageCreateForm.setValue('pickupLocation', newLocation, { shouldValidate: true })
             } else if (!deliveryLocation) {
               setDeliveryLocation(newLocation)
-              packageCreateForm.setValue('deliveryLocation', newLocation, {
-                shouldValidate: true,
-              })
+              packageCreateForm.setValue('deliveryLocation', newLocation, { shouldValidate: true })
             }
             setErrorMessage(null)
           } else {
@@ -667,41 +506,15 @@ export function CreatePackageComponent({
         })
       } else {
         setErrorMessage(
-          "We don't provide services in this area. Please select a location within Mekelle and its surrounding areas."
+          "We don't provide services in this area. Please select a location within Mekelle and its surrounding areas.",
         )
       }
     },
-    [pickupLocation, deliveryLocation, isWithinServiceArea]
+    [pickupLocation, deliveryLocation, isWithinServiceArea, packageCreateForm],
   )
 
-  // Map error handling
-  const { isLoaded: isMapLoaded, loadError: mapLoadError } = useLoadScript({
-    googleMapsApiKey: import.meta.env.VITE_GOOGLE_MAPS_API_KEY || '',
-    libraries: GOOGLE_MAPS_LIBRARIES,
-  })
-
-  const [mapError, setMapError] = useState<Error | null>(null)
-  const [isMapInitialized, setIsMapInitialized] = useState(false)
-
-  // Map initialization and error handling
   const onMapLoad = useCallback((map: google.maps.Map) => {
-    try {
-      mapRef.current = map
-      setIsMapInitialized(true)
-      setMapError(null)
-    } catch (error) {
-      console.error('Map initialization error:', error)
-      setMapError(
-        error instanceof Error ? error : new Error('Failed to initialize map')
-      )
-    }
-  }, [])
-
-  // Map retry handler
-  const handleMapRetry = useCallback(() => {
-    setMapError(null)
-    setIsMapInitialized(false)
-    setTimeout(() => setIsMapInitialized(true), 100)
+    mapRef.current = map
   }, [])
 
   const handleZoomToFit = useCallback(() => {
@@ -720,1010 +533,286 @@ export function CreatePackageComponent({
         debouncedCalculateDirections()
       }
     },
-    [pickupLocation, deliveryLocation, debouncedCalculateDirections]
+    [pickupLocation, deliveryLocation, debouncedCalculateDirections],
   )
 
-  // const toggleTheme = () => {
-  //   setTheme(theme === "dark" ? "light" : "dark")
-  // }
-
-  const mapOptions = {
-    draggableCursor:
-      !pickupLocation || !deliveryLocation ? 'crosshair' : 'grab',
-    streetViewControl: false,
-    fullscreenControl: false,
-    mapTypeControl: false,
-    styles: [
-      { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
-      { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
-      { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
-      {
-        featureType: 'administrative.locality',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#d59563' }],
-      },
-      {
-        featureType: 'poi',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#d59563' }],
-      },
-      {
-        featureType: 'poi.park',
-        elementType: 'geometry',
-        stylers: [{ color: '#263c3f' }],
-      },
-      {
-        featureType: 'poi.park',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#6b9a76' }],
-      },
-      {
-        featureType: 'road',
-        elementType: 'geometry',
-        stylers: [{ color: '#38414e' }],
-      },
-      {
-        featureType: 'road',
-        elementType: 'geometry.stroke',
-        stylers: [{ color: '#212a37' }],
-      },
-      {
-        featureType: 'road',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#9ca5b3' }],
-      },
-      {
-        featureType: 'road.highway',
-        elementType: 'geometry',
-        stylers: [{ color: '#746855' }],
-      },
-      {
-        featureType: 'road.highway',
-        elementType: 'geometry.stroke',
-        stylers: [{ color: '#1f2835' }],
-      },
-      {
-        featureType: 'road.highway',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#f3d19c' }],
-      },
-      {
-        featureType: 'transit',
-        elementType: 'geometry',
-        stylers: [{ color: '#2f3948' }],
-      },
-      {
-        featureType: 'transit.station',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#d59563' }],
-      },
-      {
-        featureType: 'water',
-        elementType: 'geometry',
-        stylers: [{ color: '#17263c' }],
-      },
-      {
-        featureType: 'water',
-        elementType: 'labels.text.fill',
-        stylers: [{ color: '#515c6d' }],
-      },
-      {
-        featureType: 'water',
-        elementType: 'labels.text.stroke',
-        stylers: [{ color: '#17263c' }],
-      },
-    ],
-  }
-
   return (
-    <div className='container mx-auto p-4 lg:grid lg:grid-cols-2 gap-4 min-h-[calc(100vh-4rem)]'>
-      {/* Form Section */}
-      <div className='lg:overflow-y-auto lg:pr-4'>
-        <Form {...packageCreateForm}>
-          <form
-            onSubmit={packageCreateForm.handleSubmit(handleFormSubmit)}
-            className='flex flex-col h-full'
-          >
-            <div className='flex flex-col space-y-4'>
-              {/* Customer Selector with Combobox */}
-              <Card className='mb-4'>
-                <CardHeader className='pb-3'>
-                  <CardTitle className='text-base font-medium'>
-                    Customer Information
-                  </CardTitle>
-                </CardHeader>
-                <CardContent className='space-y-4'>
-                  <FormField
-                    control={packageCreateForm.control}
-                    name='customerId'
-                    render={({ field }) => (
-                      <FormItem className='flex flex-col gap-4 min-h-[13rem]'>
-                        <FormControl>
-                          <div
-                            className={cn(
-                              'flex flex-col gap-2',
-                              !field.value && 'text-muted-foreground'
-                            )}
-                          >
-                            {field.value && customersData && (
-                              <div className='flex items-center gap-2 p-2 bg-secondary rounded-md'>
-                                <IconUserCheck className='h-4 w-4 text-primary' />
-                                <span className='font-medium'>
-                                  {
-                                    customersData.customers.find(
-                                      (customer) => customer.id === field.value
-                                    )?.name
-                                  }
-                                </span>
-                                <Button
-                                  variant='ghost'
-                                  size='sm'
-                                  className='ml-auto h-8 w-8 p-0'
-                                  onClick={() =>
-                                    packageCreateForm.setValue('customerId', '')
-                                  }
-                                >
-                                  <X className='h-4 w-4' />
-                                </Button>
-                              </div>
-                            )}
-                            <Command className='border rounded-md'>
-                              <CommandInput
-                                placeholder='Search by name or phone number...'
-                                onValueChange={(value) => {
-                                  setSearchTerm(value)
-                                  setPage(1) // Reset page when search changes
-                                }}
-                                className='border-none focus:ring-0'
+    <div className="h-full">
+      <div className="h-full lg:grid lg:grid-cols-2">
+        {/* Form Section */}
+        <div className="h-full lg:overflow-y-auto px-4">
+      <Form {...packageCreateForm}>
+            <form onSubmit={packageCreateForm.handleSubmit(handleFormSubmit)} className="flex flex-col h-full">
+              <div className="flex flex-col space-y-4 flex-1">
+                {/* Customer Selector */}
+                <CustomerSelector form={packageCreateForm} />
+
+                {/* Location Details */}
+            <Card className="mb-4">
+                  <CardHeader className="pb-3">
+                    <div className="flex justify-between items-center">
+                      <CardTitle className="text-base font-medium">Location Details</CardTitle>
+                      <Button
+                        variant="ghost"
+                        size="sm"
+                        type="button"
+                        onClick={() => {
+                          removeLocation("pickup");
+                          removeLocation("delivery");
+                          setDirections(null);
+                        }}
+                        className="text-muted-foreground hover:text-foreground"
+                      >
+                        <X className="h-4 w-4 mr-2" />
+                        Clear locations
+                      </Button>
+                            </div>
+                  </CardHeader>
+                  <CardContent className="flex flex-col gap-4">
+                    {/* Package Description */}
+                    <FormField
+                      control={packageCreateForm.control}
+                      name="description"
+                      render={({ field }) => (
+                        <FormItem className="flex flex-col">
+                          <FormLabel>Package Description</FormLabel>
+                          <Input
+                            {...field}
+                            placeholder="Enter package description"
+                            className="w-full border border-gray-300 rounded-md p-2"
+                          />
+                      <FormMessage />
+                    </FormItem>
+                  )}
+                />
+
+                {/* Pickup Location */}
+                    <FormField
+                      control={packageCreateForm.control}
+                      name="pickupLocation"
+                      render={({ field }) => (
+                        <FormItem className="flex flex-col">
+                          <FormLabel>Pickup Location</FormLabel>
+                  <div className="flex items-center gap-2">
+                    <MapPin className="w-5 h-5 text-muted-foreground" />
+                            <div className="flex-1">
+                    <PlaceAutocomplete
+                      placeholder="Enter pickup location"
+                      onPlaceSelect={handlePickupSelect}
+                      bounds={MEKELLE_SERVICE_AREA}
+                                value={field.value?.address || ""}
                               />
-                              {isLoadingCustomers ? (
-                                <div className='flex flex-col items-center justify-center p-4'>
-                                  <Loader2 className='h-4 w-4 animate-spin text-primary mb-2' />
-                                  <span className='text-sm text-muted-foreground'>
-                                    Loading customers...
-                                  </span>
-                                </div>
-                              ) : isCustomersError ? (
-                                <div className='p-4 space-y-4'>
-                                  <Alert variant='destructive'>
-                                    <AlertCircle className='h-4 w-4' />
-                                    <AlertDescription className='flex flex-col gap-1'>
-                                      <span>
-                                        {axios.isAxiosError(customersError)
-                                          ? customersError.response?.data
-                                              ?.message ||
-                                            'Failed to load customers'
-                                          : 'Failed to load customers'}
-                                      </span>
-                                      {failureCount > 0 && (
-                                        <span className='text-xs opacity-70'>
-                                          Failed after {failureCount} attempts
-                                        </span>
-                                      )}
-                                    </AlertDescription>
-                                  </Alert>
-                                  <div className='flex flex-col gap-2'>
-                                    <Button
-                                      variant='outline'
-                                      size='sm'
-                                      className='w-full'
-                                      onClick={() => refetchCustomers()}
-                                      disabled={isRefetching}
-                                    >
-                                      {isRefetching ? (
-                                        <>
-                                          <Loader2 className='mr-2 h-4 w-4 animate-spin' />
-                                          Retrying...
-                                        </>
-                                      ) : (
-                                        <>
-                                          <Loader2 className='mr-2 h-4 w-4' />
-                                          Retry
-                                        </>
-                                      )}
-                                    </Button>
-                                    <Button
-                                      variant='ghost'
-                                      size='sm'
-                                      className='w-full'
-                                      onClick={() => {
-                                        setPage(1)
-                                        setSearchTerm('')
-                                      }}
-                                    >
-                                      Reset filters
-                                    </Button>
-                                  </div>
-                                  <p className='text-sm text-muted-foreground text-center'>
-                                    You can still create a package while we try
-                                    to fix this issue
-                                  </p>
-                                </div>
-                              ) : (
-                                <CommandList className='max-h-[200px] overflow-auto custom-scrollbar'>
-                                  {!customersData?.customers?.length ? (
-                                    <CommandEmpty>
-                                      No customers found.
-                                    </CommandEmpty>
-                                  ) : (
-                                    <CommandGroup>
-                                      {customersData.customers.map(
-                                        (customer) => (
-                                          <CommandItem
-                                            key={customer.id}
-                                            value={customer.phoneNumber ?? ''}
-                                            onSelect={() => {
-                                              packageCreateForm.setValue(
-                                                'customerId',
-                                                customer.id
-                                              )
-                                            }}
-                                            className='flex items-center gap-2 px-4 py-2 cursor-pointer hover:bg-accent'
-                                            disabled={customer.banned}
-                                          >
-                                            <div className='flex items-center gap-2 flex-1'>
-                                              <div className='flex flex-col'>
-                                                <span
-                                                  className={cn(
-                                                    'font-medium',
-                                                    customer.banned &&
-                                                      'text-muted-foreground line-through'
-                                                  )}
-                                                >
-                                                  {customer.name}
-                                                </span>
-                                                <span className='text-sm text-muted-foreground'>
-                                                  {customer.phoneNumber}
-                                                </span>
-                                              </div>
-                                              {customer.banned && (
-                                                <Badge
-                                                  variant='destructive'
-                                                  className='ml-auto'
-                                                >
-                                                  Banned
-                                                </Badge>
-                                              )}
-                                            </div>
-                                            <Check
-                                              className={cn(
-                                                'ml-auto h-4 w-4',
-                                                customer.id ===
-                                                  packageCreateForm.watch(
-                                                    'customerId'
-                                                  )
-                                                  ? 'opacity-100 text-primary'
-                                                  : 'opacity-0'
-                                              )}
-                                            />
-                                          </CommandItem>
-                                        )
-                                      )}
-                                    </CommandGroup>
-                                  )}
-                                  {customersData?.pagination &&
-                                    customersData.pagination.pages > 1 && (
-                                      <div className='flex items-center justify-between p-2 border-t'>
-                                        <Button
-                                          variant='ghost'
-                                          size='sm'
-                                          disabled={page <= 1}
-                                          onClick={() =>
-                                            setPage((p) => Math.max(1, p - 1))
-                                          }
-                                        >
-                                          Previous
-                                        </Button>
-                                        <span className='text-sm text-muted-foreground'>
-                                          Page {page} of{' '}
-                                          {customersData.pagination.pages}
-                                        </span>
-                                        <Button
-                                          variant='ghost'
-                                          size='sm'
-                                          disabled={
-                                            page >=
-                                            customersData.pagination.pages
-                                          }
-                                          onClick={() => setPage((p) => p + 1)}
-                                        >
-                                          Next
-                                        </Button>
-                                      </div>
-                                    )}
-                                </CommandList>
-                              )}
-                            </Command>
-                          </div>
-                        </FormControl>
-                        <FormMessage />
-                      </FormItem>
-                    )}
-                  />
-                </CardContent>
-              </Card>
-
-              {/* Location Details */}
-              <Card className='mb-4'>
-                <CardHeader className='pb-3'>
-                  <div className='flex justify-between items-center'>
-                    <CardTitle className='text-base font-medium'>
-                      Location Details
-                    </CardTitle>
-                    <Button
-                      variant='ghost'
-                      size='sm'
-                      type='button'
-                      onClick={() => {
-                        removeLocation('pickup')
-                        removeLocation('delivery')
-                        setDirections(null)
-                      }}
-                      className='text-muted-foreground hover:text-foreground'
-                    >
-                      <X className='h-4 w-4 mr-2' />
-                      Clear locations
-                    </Button>
-                  </div>
-                </CardHeader>
-                <CardContent className='flex flex-col gap-4'>
-                  {/* Package Description */}
-                  <FormField
-                    control={packageCreateForm.control}
-                    name='description'
-                    render={({ field }) => (
-                      <FormItem className='flex flex-col'>
-                        <FormLabel>Package Description</FormLabel>
-                        <Input
-                          {...field}
-                          placeholder='Enter package description'
-                          className='w-full border border-gray-300 rounded-md p-2'
-                        />
-                        <FormMessage />
-                      </FormItem>
-                    )}
-                  />
-
-                  {/* Pickup Location */}
-                  <FormField
-                    control={packageCreateForm.control}
-                    name='pickupLocation'
-                    render={({ field }) => (
-                      <FormItem className='flex flex-col'>
-                        <FormLabel>Pickup Location</FormLabel>
-                        <div className='flex items-center gap-2'>
-                          <MapPin className='w-5 h-5 text-muted-foreground' />
-                          <div className='flex-1'>
-                            <PlaceAutocomplete
-                              placeholder='Enter pickup location'
-                              onPlaceSelect={handlePickupSelect}
-                              bounds={MEKELLE_SERVICE_AREA}
-                              value={field.value?.address || ''}
-                            />
+                            </div>
+                            {field.value && (
+                              <Button
+                                variant="ghost"
+                                size="icon"
+                                onClick={() => removeLocation("pickup")}
+                              >
+                                <X className="h-4 w-4" />
+                              </Button>
+                            )}
                           </div>
                           {field.value && (
-                            <Button
-                              variant='ghost'
-                              size='icon'
-                              onClick={() => removeLocation('pickup')}
-                            >
-                              <X className='h-4 w-4' />
-                            </Button>
+                            <div className="text-sm text-muted-foreground mt-1">
+                              {field.value.address}
+                            </div>
                           )}
-                        </div>
-                        {field.value && (
-                          <div className='text-sm text-muted-foreground mt-1'>
-                            {field.value.address}
-                          </div>
-                        )}
-                        <FormMessage />
-                      </FormItem>
-                    )}
-                  />
+                          <FormMessage />
+                        </FormItem>
+                      )}
+                    />
 
-                  {/* Delivery Location */}
-                  <FormField
-                    control={packageCreateForm.control}
-                    name='deliveryLocation'
-                    render={({ field }) => (
-                      <FormItem className='flex flex-col'>
-                        <FormLabel>Delivery Location</FormLabel>
-                        <div className='flex items-center gap-2'>
-                          <MapPin className='w-5 h-5 text-muted-foreground' />
-                          <div className='flex-1'>
-                            <PlaceAutocomplete
-                              placeholder='Enter delivery location'
-                              onPlaceSelect={handleDeliverySelect}
-                              bounds={MEKELLE_SERVICE_AREA}
-                              value={field.value?.address || ''}
-                            />
+                {/* Delivery Location */}
+                    <FormField
+                      control={packageCreateForm.control}
+                      name="deliveryLocation"
+                      render={({ field }) => (
+                        <FormItem className="flex flex-col">
+                          <FormLabel>Delivery Location</FormLabel>
+                  <div className="flex items-center gap-2">
+                    <MapPin className="w-5 h-5 text-muted-foreground" />
+                            <div className="flex-1">
+                    <PlaceAutocomplete
+                      placeholder="Enter delivery location"
+                      onPlaceSelect={handleDeliverySelect}
+                      bounds={MEKELLE_SERVICE_AREA}
+                                value={field.value?.address || ""}
+                              />
+                            </div>
+                            {field.value && (
+                              <Button
+                                variant="ghost"
+                                size="icon"
+                                onClick={() => removeLocation("delivery")}
+                              >
+                                <X className="h-4 w-4" />
+                              </Button>
+                            )}
                           </div>
                           {field.value && (
-                            <Button
-                              variant='ghost'
-                              size='icon'
-                              onClick={() => removeLocation('delivery')}
-                            >
-                              <X className='h-4 w-4' />
-                            </Button>
+                            <div className="text-sm text-muted-foreground mt-1">
+                              {field.value.address}
+                            </div>
                           )}
-                        </div>
-                        {field.value && (
-                          <div className='text-sm text-muted-foreground mt-1'>
-                            {field.value.address}
-                          </div>
-                        )}
-                        <FormMessage />
-                      </FormItem>
-                    )}
-                  />
-
-                  {/* Select Vehicle */}
-                  <div className='space-y-2'>
-                    <label
-                      htmlFor='vehicle-select'
-                      className='text-sm font-medium'
-                    >
-                      Select Vehicle
-                    </label>
-                    <VehicleSelector
-                      selectedVehicle={selectedVehicle}
-                      onVehicleSelect={handleVehicleSelect}
+                          <FormMessage />
+                        </FormItem>
+                      )}
                     />
-                  </div>
 
-                  {/* Route Details */}
-                  {pickupLocation &&
-                  deliveryLocation &&
-                  directions?.routes[0]?.legs[0] &&
-                  !isCalculatingRoute ? (
-                    <Card className='bg-card'>
-                      <CardHeader className='pb-2'>
-                        <CardTitle className='text-base font-medium'>
-                          Route Information
-                        </CardTitle>
-                      </CardHeader>
-                      <CardContent className='grid gap-4'>
-                        <div className='flex items-center justify-between'>
-                          <div className='flex flex-col gap-1'>
-                            <span className='text-sm font-medium text-muted-foreground'>
-                              Distance
-                            </span>
-                            <span className='text-2xl font-bold'>
-                              {directions.routes[0].legs[0].distance?.text}
-                            </span>
-                          </div>
-                          <div className='flex flex-col gap-1 items-end'>
-                            <span className='text-sm font-medium text-muted-foreground'>
-                              Estimated Time
-                            </span>
-                            <span className='text-2xl font-bold'>
-                              {directions.routes[0].legs[0].duration?.text}
-                            </span>
+                {/* Select Vehicle */}
+                <div className="space-y-2">
+                  <label htmlFor="vehicle-select" className="text-sm font-medium">
+                    Select Vehicle
+                  </label>
+                  <VehicleSelector
+                    selectedVehicle={selectedVehicle}
+                    onVehicleSelect={handleVehicleSelect}
+                  />
+                </div>
+
+                {/* Route Details */}
+                    {pickupLocation && deliveryLocation && directions?.routes[0]?.legs[0] && !isCalculatingRoute ? (
+                      <Card className="bg-card">
+                        <CardHeader className="pb-2">
+                          <CardTitle className="text-base font-medium">Route Information</CardTitle>
+                        </CardHeader>
+                        <CardContent className="grid gap-4">
+                          <div className="flex items-center justify-between">
+                            <div className="flex flex-col gap-1">
+                              <span className="text-sm font-medium text-muted-foreground">Distance</span>
+                              <span className="text-2xl font-bold">{directions.routes[0].legs[0].distance?.text}</span>
+                            </div>
+                            <div className="flex flex-col gap-1 items-end">
+                              <span className="text-sm font-medium text-muted-foreground">Estimated Time</span>
+                              <span className="text-2xl font-bold">{directions.routes[0].legs[0].duration?.text}</span>
+                            </div>
                           </div>
-                        </div>
 
-                        <div className='flex flex-col gap-2'>
-                          <div className='flex items-center gap-2'>
-                            <Badge
-                              variant='outline'
-                              className='bg-primary/5 text-primary'
-                            >
-                              <div className='flex items-center gap-1.5'>
-                                {selectedVehicle === 'CAR' && (
-                                  <Car className='h-3.5 w-3.5' />
-                                )}
-                                {selectedVehicle === 'MOTORCYCLE' && (
-                                  <Bike className='h-3.5 w-3.5' />
-                                )}
-                                {selectedVehicle === 'BICYCLE' && (
-                                  <Bike className='h-3.5 w-3.5' />
-                                )}
-                                <span>
-                                  {selectedVehicle.charAt(0) +
-                                    selectedVehicle.slice(1).toLowerCase()}
-                                </span>
-                              </div>
-                            </Badge>
-                            {selectedVehicle === 'BICYCLE' &&
-                              directions.request.travelMode === 'DRIVING' && (
-                                <Badge
-                                  variant='secondary'
-                                  className='bg-yellow-100 text-yellow-800 dark:bg-yellow-400/10 dark:text-yellow-500'
-                                >
+                          <div className="flex flex-col gap-2">
+                            <div className="flex items-center gap-2">
+                              <Badge variant="outline" className="bg-primary/5 text-primary">
+                                <div className="flex items-center gap-1.5">
+                                  {selectedVehicle === "CAR" && <Car className="h-3.5 w-3.5" />}
+                                  {selectedVehicle === "MOTORCYCLE" && <Bike className="h-3.5 w-3.5" />}
+                                  {selectedVehicle === "BICYCLE" && <Bike className="h-3.5 w-3.5" />}
+                                  <span>{selectedVehicle.charAt(0) + selectedVehicle.slice(1).toLowerCase()}</span>
+                                </div>
+                              </Badge>
+                    {selectedVehicle === "BICYCLE" && directions.request.travelMode === "DRIVING" && (
+                                <Badge variant="secondary" className="bg-yellow-100 text-yellow-800 dark:bg-yellow-400/10 dark:text-yellow-500">
                                   Using driving route
                                 </Badge>
-                              )}
-                          </div>
+                    )}
+                  </div>
 
-                          <div className='space-y-1.5'>
-                            <div className='flex items-start gap-2'>
-                              <MapPin className='h-4 w-4 text-primary mt-0.5 shrink-0' />
-                              <span className='text-sm text-muted-foreground'>
-                                {pickupLocation.address}
-                              </span>
-                            </div>
-                            <div className='flex items-start gap-2'>
-                              <MapPin className='h-4 w-4 text-destructive mt-0.5 shrink-0' />
-                              <span className='text-sm text-muted-foreground'>
-                                {deliveryLocation.address}
-                              </span>
+                            <div className="space-y-1.5">
+                              <div className="flex items-start gap-2">
+                                <MapPin className="h-4 w-4 text-primary mt-0.5 shrink-0" />
+                                <span className="text-sm text-muted-foreground">{pickupLocation.address}</span>
+                              </div>
+                              <div className="flex items-start gap-2">
+                                <MapPin className="h-4 w-4 text-destructive mt-0.5 shrink-0" />
+                                <span className="text-sm text-muted-foreground">{deliveryLocation.address}</span>
+                              </div>
                             </div>
                           </div>
-                        </div>
-                      </CardContent>
-                    </Card>
-                  ) : (
-                    isCalculatingRoute &&
-                    pickupLocation &&
-                    deliveryLocation && (
+                        </CardContent>
+                      </Card>
+                    ) : (isCalculatingRoute && pickupLocation && deliveryLocation && (
                       <Card>
-                        <CardHeader className='pb-2'>
-                          <CardTitle className='text-base font-medium'>
-                            Calculating Route...
-                          </CardTitle>
+                        <CardHeader className="pb-2">
+                          <CardTitle className="text-base font-medium">Calculating Route...</CardTitle>
                         </CardHeader>
                         <CardContent>
-                          <div className='flex items-center justify-center py-4'>
-                            <Loader2 className='h-6 w-6 animate-spin text-primary' />
+                          <div className="flex items-center justify-center py-4">
+                            <Loader2 className="h-6 w-6 animate-spin text-primary" />
                           </div>
                         </CardContent>
                       </Card>
-                    )
-                  )}
-
-                  {/*Maps Error Message */}
-                  {errorMessage && (
-                    <div
-                      className='bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative'
-                      role='alert'
-                    >
-                      <span className='block sm:inline'>{errorMessage}</span>
-                    </div>
-                  )}
-                </CardContent>
-              </Card>
-
-              {/* Package Labels */}
-              <Card className='mb-4'>
-                <CardHeader>
-                  <CardTitle className='flex justify-between items-center'>
-                    <span>Package Information</span>
-                  </CardTitle>
-                </CardHeader>
-                <CardContent className='space-y-4'>
-                  {/* Weight Range Selector */}
-                  <FormField
-                    control={packageCreateForm.control}
-                    name='weightRange'
-                    render={({ field }) => (
-                      <FormItem className='space-y-3'>
-                        <FormLabel>Package Weight Range</FormLabel>
-                        <FormControl>
-                          <RadioGroup
-                            onValueChange={field.onChange}
-                            value={field.value}
-                            className='grid grid-cols-2 gap-4'
-                          >
-                            {WEIGHT_RANGES.map((range) => (
-                              <div key={range.id} className='relative'>
-                                <RadioGroupItem
-                                  value={range.value}
-                                  id={range.id}
-                                  className='peer sr-only'
-                                />
-                                <Label
-                                  htmlFor={range.id}
-                                  className={cn(
-                                    'flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4',
-                                    'hover:bg-accent hover:text-accent-foreground',
-                                    'peer-data-[state=checked]:border-primary peer-data-[state=checked]:bg-primary/5',
-                                    '[&:has([data-state=checked])]:border-primary [&:has([data-state=checked])]:bg-primary/5',
-                                    'cursor-pointer transition-colors'
-                                  )}
-                                >
-                                  <div className='flex flex-col gap-1'>
-                                    <span className='text-sm font-semibold'>
-                                      {range.label}
-                                    </span>
-                                    <span className='text-xs text-muted-foreground'>
-                                      {range.description}
-                                    </span>
-                                    <span className='text-xs text-muted-foreground'>
-                                      Price: {range.priceRange}
-                                    </span>
-                                    <div className='flex items-center gap-1 text-xs text-muted-foreground'>
-                                      <span>Recommended:</span>
-                                      <Badge
-                                        variant='secondary'
-                                        className='font-normal'
-                                      >
-                                        {range.recommendedVehicle.charAt(0) +
-                                          range.recommendedVehicle
-                                            .slice(1)
-                                            .toLowerCase()}
-                                      </Badge>
-                                    </div>
-                                  </div>
-                                  {field.value === range.value && (
-                                    <Check className='absolute top-3 right-3 h-4 w-4 text-primary' />
-                                  )}
-                                </Label>
-                              </div>
-                            ))}
-                          </RadioGroup>
-                        </FormControl>
-                        <FormDescription>
-                          Select the weight range that best matches your
-                          package. This will help determine pricing and vehicle
-                          type.
-                        </FormDescription>
-                        <FormMessage />
-                      </FormItem>
-                    )}
-                  />
+                ))}
 
-                  {/* Package Labels */}
-                  <FormField
-                    control={packageCreateForm.control}
-                    name='labels'
-                    render={({ field }) => (
-                      <FormItem className='flex flex-col'>
-                        <FormLabel>Package Labels</FormLabel>
-                        {Array.isArray(field.value) &&
-                          field.value.length > 0 && (
-                            <div className='flex flex-wrap gap-1 mb-2'>
-                              {field.value.map((labelValue) => {
-                                const label = labels.find(
-                                  (l) => l.value === labelValue
-                                )
-                                return (
-                                  <Badge
-                                    key={labelValue}
-                                    variant='secondary'
-                                    className='flex items-center gap-1'
-                                  >
-                                    {label?.label}
-                                    <X
-                                      className='h-3 w-3 cursor-pointer'
-                                      onClick={() => {
-                                        const newLabels = Array.isArray(
-                                          field.value
-                                        )
-                                          ? field.value.filter(
-                                              (l) => l !== labelValue
-                                            )
-                                          : []
-                                        field.onChange(newLabels)
-                                      }}
-                                    />
-                                  </Badge>
-                                )
-                              })}
-                            </div>
-                          )}
-                        <Popover>
-                          <PopoverTrigger asChild>
-                            <Button
-                              variant='outline'
-                              role='combobox'
-                              className={cn(
-                                'w-full justify-between',
-                                !field.value?.length && 'text-muted-foreground'
-                              )}
-                            >
-                              {field.value && field.value.length > 0
-                                ? `${field.value.length} label${field.value.length > 1 ? 's' : ''} selected`
-                                : 'Select labels'}
-                              <IconChevronsRight className='ml-2 h-4 shrink-0 opacity-50' />
-                            </Button>
-                          </PopoverTrigger>
-                          <PopoverContent
-                            className='w-[400px] p-0'
-                            align='start'
-                          >
-                            <Command>
-                              <CommandInput
-                                placeholder='Search labels...'
-                                onValueChange={(value) => setSearchTerm(value)}
-                              />
-                              <CommandList>
-                                <CommandEmpty>No labels found.</CommandEmpty>
-                                <CommandGroup>
-                                  {labels
-                                    .filter((label) =>
-                                      label.label
-                                        .toLowerCase()
-                                        .includes(searchTerm.toLowerCase())
-                                    )
-                                    .map((label) => (
-                                      <CommandItem
-                                        key={label.value}
-                                        onSelect={() => {
-                                          const currentLabels =
-                                            field.value || []
-                                          const newLabels =
-                                            currentLabels.includes(label.value)
-                                              ? currentLabels.filter(
-                                                  (l) => l !== label.value
-                                                )
-                                              : [...currentLabels, label.value]
-                                          field.onChange(newLabels)
-                                        }}
-                                      >
-                                        <Check
-                                          className={cn(
-                                            'mr-2 h-4 w-4',
-                                            (field.value || []).includes(
-                                              label.value
-                                            )
-                                              ? 'opacity-100'
-                                              : 'opacity-0'
-                                          )}
-                                        />
-                                        {label.label}
-                                      </CommandItem>
-                                    ))}
-                                </CommandGroup>
-                              </CommandList>
-                            </Command>
-                          </PopoverContent>
-                        </Popover>
-                        <FormDescription>
-                          Select one or more labels that describe the package.
-                        </FormDescription>
-                        <FormMessage />
-                      </FormItem>
-                    )}
-                  />
-                </CardContent>
-              </Card>
-            </div>
-
-            {/* Continue Button */}
-            <div className='flex items-center justify-center gap-4 mt-4 sticky bottom-0 bg-background py-4 border-t'>
-              <Button
-                type='button'
-                variant='outline'
-                className='flex-grow items-center justify-center'
-                onClick={() => {
-                  removeLocation('pickup')
-                  removeLocation('delivery')
-                  setSearchTerm('')
-                  setDirections(null)
-                  setErrorMessage(null)
-                  if (onClearAll) {
-                    onClearAll()
-                  }
-                }}
-              >
-                <IconArrowBack className='w-4 h-4 mr-2' />
-                Cancel and go back
-              </Button>
-              <Button
-                type='submit'
-                variant='default'
-                className='flex-grow items-center justify-center'
-                disabled={!packageCreateForm.formState.isValid || isSubmitting}
-              >
-                {isSubmitting ? (
-                  <>
-                    <Loader2 className='w-4 h-4 mr-2 animate-spin' />
-                    Creating package...
-                  </>
-                ) : (
-                  <>
-                    <Check className='mr-2 h-4 w-4' />
-                    Create Package
-                  </>
+                {/*Maps Error Message */}
+                {errorMessage && (
+                  <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
+                    <span className="block sm:inline">{errorMessage}</span>
+                  </div>
                 )}
-              </Button>
-            </div>
-          </form>
-        </Form>
-      </div>
 
-      {/* Map Section */}
-      <div className='relative mt-4 lg:mt-0'>
-        <div className='lg:sticky lg:top-4 h-[50vh] lg:h-[calc(100vh-6rem)]'>
-          <div className='relative h-full rounded-lg overflow-hidden shadow-lg'>
-            <MapErrorBoundary
-              error={mapLoadError || mapError}
-              isLoading={!isMapLoaded}
-              onRetry={handleMapRetry}
-            >
-              {isMapLoaded && (
-                <>
-                  <GoogleMap
-                    mapContainerStyle={{ width: '100%', height: '100%' }}
-                    center={MAP_CENTER}
-                    zoom={defaultZoom}
-                    onLoad={onMapLoad}
-                    onClick={!isSubmitting ? handleMapClick : undefined}
-                    options={{
-                      ...mapOptions,
-                      restriction: {
-                        latLngBounds: MEKELLE_SERVICE_AREA,
-                        strictBounds: false,
-                      },
-                      gestureHandling: isSubmitting ? 'none' : 'auto',
-                    }}
-                  >
-                    {isMapInitialized && (
-                      <>
-                        {pickupLocation && pickupLocation !== null && (
-                          <Marker
-                            position={{
-                              lat: pickupLocation.lat,
-                              lng: pickupLocation.lng,
-                            }}
-                            label='P'
-                            draggable={true}
-                            onDragEnd={(e) =>
-                              handleMarkerDragEnd('pickup', e.latLng!)
-                            }
-                            onClick={() => setActiveInfoWindow('pickup')}
-                          />
-                        )}
+              </CardContent>
+            </Card>
 
-                        {deliveryLocation && deliveryLocation != null && (
-                          <Marker
-                            position={{
-                              lat: deliveryLocation.lat,
-                              lng: deliveryLocation.lng,
-                            }}
-                            label='D'
-                            draggable={true}
-                            onDragEnd={(e) =>
-                              handleMarkerDragEnd('delivery', e.latLng!)
-                            }
-                            onClick={() => setActiveInfoWindow('delivery')}
-                          />
-                        )}
-
-                        {pickupLocation && activeInfoWindow === 'pickup' && (
-                          <InfoWindow
-                            position={{
-                              lat: pickupLocation.lat,
-                              lng: pickupLocation.lng,
-                            }}
-                            onCloseClick={() => setActiveInfoWindow(null)}
-                          >
-                            <div className=''>
-                              <h3 className='font-semibold mb-2 text-background'>
-                                Pickup Location
-                              </h3>
-                              {pickupLocation.name && (
-                                <p className='text-sm mb-1 text-background'>
-                                  <strong>Name:</strong> {pickupLocation.name}
-                                </p>
-                              )}
-                              <p className='text-sm mb-1 text-background'>
-                                <strong>Address:</strong>{' '}
-                                {pickupLocation.address}
-                              </p>
-                              <p className='text-sm mb-2 text-background'>
-                                <strong>Coordinates:</strong>{' '}
-                                {pickupLocation.lat.toFixed(6)},{' '}
-                                {pickupLocation.lng.toFixed(6)}
-                              </p>
-                              <Button
-                                size='sm'
-                                variant='destructive'
-                                onClick={() => removeLocation('pickup')}
-                              >
-                                <X className='w-4 h-4 mr-2' />
-                                Remove
-                              </Button>
-                            </div>
-                          </InfoWindow>
-                        )}
-
-                        {deliveryLocation &&
-                          activeInfoWindow === 'delivery' && (
-                            <InfoWindow
-                              position={{
-                                lat: deliveryLocation.lat,
-                                lng: deliveryLocation.lng,
-                              }}
-                              onCloseClick={() => setActiveInfoWindow(null)}
-                            >
-                              <div className=''>
-                                <h3 className='font-semibold mb-2 text-background'>
-                                  Delivery Location
-                                </h3>
-                                {deliveryLocation.name && (
-                                  <p className='text-sm mb-1 text-background'>
-                                    <strong>Name:</strong>{' '}
-                                    {deliveryLocation.name}
-                                  </p>
-                                )}
-                                <p className='text-sm mb-1 text-background'>
-                                  <strong>Address:</strong>{' '}
-                                  {deliveryLocation.address}
-                                </p>
-                                <p className='text-sm mb-2 text-background'>
-                                  <strong>Coordinates:</strong>{' '}
-                                  {deliveryLocation.lat.toFixed(6)},{' '}
-                                  {deliveryLocation.lng.toFixed(6)}
-                                </p>
-                                <Button
-                                  size='sm'
-                                  variant='destructive'
-                                  onClick={() => removeLocation('delivery')}
-                                >
-                                  <X className='w-4 h-4 mr-2' />
-                                  Remove
-                                </Button>
-                              </div>
-                            </InfoWindow>
-                          )}
-
-                        {directions && !isCalculatingRoute && (
-                          <DirectionsRenderer
-                            directions={directions}
-                            options={{
-                              suppressMarkers: true,
-                              polylineOptions: {
-                                strokeColor: '#4A90E2',
-                                strokeWeight: 3,
-                              },
-                            }}
-                          />
-                        )}
-                      </>
-                    )}
-                  </GoogleMap>
-
-                  {/* Map Overlay during route calculation */}
-                  {isCalculatingRoute && (
-                    <div
-                      className='absolute inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50'
-                      aria-live='polite'
-                      aria-atomic='true'
-                    >
-                      <div className='bg-background/90 p-4 rounded-lg shadow-lg flex flex-col items-center gap-3'>
-                        <Loader2 className='h-8 w-8 animate-spin text-primary' />
-                        <p className='text-lg font-medium'>
-                          Calculating route...
-                        </p>
-                      </div>
-                    </div>
-                  )}
+                {/* Package Information */}
+                <PackageInformationForm form={packageCreateForm} />
+        </div>
 
-                  {/* Map Overlay during submission */}
-                  {isSubmitting && (
-                    <div
-                      className='absolute inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50'
-                      aria-live='polite'
-                      aria-atomic='true'
-                    >
-                      <div className='bg-background/90 p-4 rounded-lg shadow-lg flex flex-col items-center gap-3'>
-                        <Loader2 className='h-8 w-8 animate-spin text-primary' />
-                        <p className='text-lg font-medium'>
-                          Creating package...
-                        </p>
-                      </div>
-                    </div>
+              {/* Continue Button */}
+              <div className="flex items-center justify-center gap-4 mt-4 sticky bottom-0 bg-background py-4 border-t">
+                <Button
+                  type="button"
+                  variant="outline"
+                  className="flex-grow items-center justify-center"
+                  onClick={() => {
+                    removeLocation("pickup");
+                    removeLocation("delivery");
+                    setDirections(null);
+                    setErrorMessage(null);
+                    if (onClearAll) {
+                      onClearAll();
+                    }
+                    navigate({ to: '/packages' });
+                  }}
+                >
+                  <IconArrowBack className="w-4 h-4 mr-2" />
+                  Cancel and go back
+                </Button>
+                <Button
+                  type="submit"
+                  variant="default"
+                  className="flex-grow items-center justify-center"
+                  disabled={!packageCreateForm.formState.isValid || isSubmitting}
+                >
+                  {isSubmitting ? (
+                    <>
+                      <Loader2 className="w-4 h-4 mr-2 animate-spin" />
+                      Creating package...
+                    </>
+                  ) : (
+                    <>
+                      <Check className="mr-2 h-4 w-4" />
+                      Create Package
+                    </>
                   )}
-                </>
-              )}
-            </MapErrorBoundary>
+                  </Button>
+                </div>
+            </form>
+          </Form>
+        </div>
 
-            {isMapLoaded && isMapInitialized && (
-              <Button
-                className='absolute top-2 right-2 z-10'
-                size='sm'
-                onClick={handleZoomToFit}
-                disabled={!pickupLocation || !deliveryLocation}
-              >
-                <ZoomIn className='w-4 h-4 mr-2' />
-                Zoom to Fit
-              </Button>
-            )}
-          </div>
+        {/* Map Section */}
+        <div className="h-[50vh] lg:h-full">
+          <DeliveryMap
+            center={center}
+            zoom={defaultZoom}
+            pickupLocation={pickupLocation}
+            deliveryLocation={deliveryLocation}
+            directions={directions}
+            activeInfoWindow={activeInfoWindow}
+            isSubmitting={isSubmitting}
+            isCalculatingRoute={isCalculatingRoute}
+            onMapLoad={onMapLoad}
+            onMapClick={handleMapClick}
+            onMarkerDragEnd={handleMarkerDragEnd}
+            onInfoWindowClick={setActiveInfoWindow}
+            onInfoWindowClose={() => setActiveInfoWindow(null)}
+            onLocationRemove={removeLocation}
+            onZoomToFit={handleZoomToFit}
+            mapOptions={mapOptions}
+            serviceArea={MEKELLE_SERVICE_AREA}
+          />
         </div>
       </div>
     </div>
   )
 }
+
diff --git a/src/features/packages/create/components/customer-selector.tsx b/src/features/packages/create/components/customer-selector.tsx
index bf4b55c..a5929e3 100644
--- a/src/features/packages/create/components/customer-selector.tsx
+++ b/src/features/packages/create/components/customer-selector.tsx
@@ -1,29 +1,30 @@
-import { useQuery } from '@tanstack/react-query'
-import { customerApi } from '@/features/customers/data/customerApi'
-import { useState } from 'react'
-import { Button } from '@/components/ui/button'
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
-import { FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form'
-import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from '@/components/ui/command'
-import { Badge } from '@/components/ui/badge'
-import { IconUserCheck } from '@tabler/icons-react'
-import { AlertCircle, Check, Loader2, X } from 'lucide-react'
-import { Alert, AlertDescription } from '@/components/ui/alert'
-import { cn } from '@/lib/utils'
-import axios from 'axios'
-import { UseFormReturn } from 'react-hook-form'
-import { PackageForm } from '../types'
+import { useState } from "react"
+import { useQuery } from "@tanstack/react-query"
+import { customerApi } from "@/features/customers/data/customerApi"
+import { Check, X, Loader2, AlertCircle } from "lucide-react"
+import { IconUserCheck } from "@tabler/icons-react"
+import { Button } from "@/components/ui/button"
+import { Badge } from "@/components/ui/badge"
+import { Alert, AlertDescription } from "@/components/ui/alert"
+import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from "@/components/ui/command"
+import { FormControl, FormField, FormItem, FormMessage } from "@/components/ui/form"
+import { cn } from "@/lib/utils"
+import axios from "axios"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { UseFormReturn } from "react-hook-form"
+import { PackageForm } from "../types"
 
 interface CustomerSelectorProps {
   form: UseFormReturn<PackageForm>
+  className?: string
 }
 
-export function CustomerSelector({ form }: CustomerSelectorProps) {
+export function CustomerSelector({ form, className }: CustomerSelectorProps) {
   const [searchTerm, setSearchTerm] = useState("")
   const [page, setPage] = useState(1)
   const CUSTOMERS_PER_PAGE = 10
 
-  const { 
+  const {
     data: customersData,
     isLoading: isLoadingCustomers,
     isError: isCustomersError,
@@ -33,10 +34,10 @@ export function CustomerSelector({ form }: CustomerSelectorProps) {
     isRefetching
   } = useQuery({
     queryKey: ['customers', { search: searchTerm, page, limit: CUSTOMERS_PER_PAGE }],
-    queryFn: () => customerApi.getAll({ 
-      search: searchTerm, 
-      page, 
-      limit: CUSTOMERS_PER_PAGE 
+    queryFn: () => customerApi.getAll({
+      search: searchTerm,
+      page,
+      limit: CUSTOMERS_PER_PAGE
     }),
     staleTime: 1000 * 60 * 15, // 15 minutes
     gcTime: 1000 * 60 * 30, // 30 minutes
@@ -45,7 +46,7 @@ export function CustomerSelector({ form }: CustomerSelectorProps) {
   })
 
   return (
-    <Card className="mb-4">
+    <Card className={cn("mb-4", className)}>
       <CardHeader className="pb-3">
         <CardTitle className="text-base font-medium">Customer Information</CardTitle>
       </CardHeader>
@@ -77,8 +78,8 @@ export function CustomerSelector({ form }: CustomerSelectorProps) {
                     </div>
                   )}
                   <Command className="border rounded-md">
-                    <CommandInput 
-                      placeholder="Search by name or phone number..." 
+                    <CommandInput
+                      placeholder="Search by name or phone number..."
                       onValueChange={(value) => {
                         setSearchTerm(value)
                         setPage(1)
@@ -96,7 +97,7 @@ export function CustomerSelector({ form }: CustomerSelectorProps) {
                           <AlertCircle className="h-4 w-4" />
                           <AlertDescription className="flex flex-col gap-1">
                             <span>
-                              {axios.isAxiosError(customersError) 
+                              {axios.isAxiosError(customersError)
                                 ? customersError.response?.data?.message || 'Failed to load customers'
                                 : 'Failed to load customers'}
                             </span>
@@ -108,9 +109,9 @@ export function CustomerSelector({ form }: CustomerSelectorProps) {
                           </AlertDescription>
                         </Alert>
                         <div className="flex flex-col gap-2">
-                          <Button 
-                            variant="outline" 
-                            size="sm" 
+                          <Button
+                            variant="outline"
+                            size="sm"
                             className="w-full"
                             onClick={() => refetchCustomers()}
                             disabled={isRefetching}
diff --git a/src/features/packages/create/components/package-information-form.tsx b/src/features/packages/create/components/package-information-form.tsx
index d857b0a..c3584c6 100644
--- a/src/features/packages/create/components/package-information-form.tsx
+++ b/src/features/packages/create/components/package-information-form.tsx
@@ -1,41 +1,64 @@
-import { Button } from '@/components/ui/button'
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
-import { FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form'
-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'
-import { Label } from '@/components/ui/label'
-import { Badge } from '@/components/ui/badge'
-import { Check, X } from 'lucide-react'
-import { UseFormReturn } from 'react-hook-form'
-import { PackageForm, WEIGHT_RANGES } from '../types'
-import { cn } from '@/lib/utils'
-import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'
-import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from '@/components/ui/command'
-import { IconChevronsRight } from '@tabler/icons-react'
-import { useState } from 'react'
+import { useState } from "react"
+import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
+import { FormField, FormItem, FormLabel, FormControl, FormDescription, FormMessage } from "@/components/ui/form"
+import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"
+import { Label } from "@/components/ui/label"
+import { Button } from "@/components/ui/button"
+import { Badge } from "@/components/ui/badge"
+import { Check, X } from "lucide-react"
+import { IconChevronsRight } from "@tabler/icons-react"
+import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover"
+import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from "@/components/ui/command"
+import { cn } from "@/lib/utils"
+import { UseFormReturn } from "react-hook-form"
+import { PackageForm } from "../types"
+import { labels } from '../../data/data'
 
-// Define the label type
-interface Label {
-  value: string
-  label: string
-}
-
-// Mock labels data (replace with actual import when available)
-const labels: Label[] = [
-  { value: "fragile", label: "Fragile" },
-  { value: "perishable", label: "Perishable" },
-  { value: "urgent", label: "Urgent" },
-  // Add more labels as needed
-]
+const WEIGHT_RANGES = [
+  {
+    id: "small",
+    label: "Small Package",
+    description: "0.1 - 5 kg",
+    value: "0.1-5",
+    recommendedVehicle: "BICYCLE",
+    priceRange: "100-200 Birr"
+  },
+  {
+    id: "medium",
+    label: "Medium Package",
+    description: "5 - 15 kg",
+    value: "5-15",
+    recommendedVehicle: "MOTORCYCLE",
+    priceRange: "200-350 Birr"
+  },
+  {
+    id: "large",
+    label: "Large Package",
+    description: "15 - 30 kg",
+    value: "15-30",
+    recommendedVehicle: "MOTORCYCLE",
+    priceRange: "350-500 Birr"
+  },
+  {
+    id: "xlarge",
+    label: "Extra Large Package",
+    description: "30 - 100 kg",
+    value: "30-100",
+    recommendedVehicle: "CAR",
+    priceRange: "500-1000 Birr"
+  },
+] as const;
 
 interface PackageInformationFormProps {
   form: UseFormReturn<PackageForm>
+  className?: string
 }
 
-export function PackageInformationForm({ form }: PackageInformationFormProps) {
+export function PackageInformationForm({ form, className }: PackageInformationFormProps) {
   const [searchTerm, setSearchTerm] = useState("")
 
   return (
-    <Card className="mb-4">
+    <Card className={cn("mb-4", className)}>
       <CardHeader>
         <CardTitle className="flex justify-between items-center">
           <span>Package Information</span>
@@ -120,7 +143,7 @@ export function PackageInformationForm({ form }: PackageInformationFormProps) {
                         <X
                           className="h-3 w-3 cursor-pointer"
                           onClick={() => {
-                            const newLabels = Array.isArray(field.value) 
+                            const newLabels = Array.isArray(field.value)
                               ? field.value.filter((l) => l !== labelValue)
                               : [];
                             field.onChange(newLabels);
@@ -149,8 +172,8 @@ export function PackageInformationForm({ form }: PackageInformationFormProps) {
                 </PopoverTrigger>
                 <PopoverContent className="w-[400px] p-0" align="start">
                   <Command>
-                    <CommandInput 
-                      placeholder="Search labels..." 
+                    <CommandInput
+                      placeholder="Search labels..."
                       onValueChange={(value) => setSearchTerm(value)}
                     />
                     <CommandList>
diff --git a/src/features/packages/data/packagesApi.ts b/src/features/packages/data/packagesApi.ts
index cf349bb..1230c32 100644
--- a/src/features/packages/data/packagesApi.ts
+++ b/src/features/packages/data/packagesApi.ts
@@ -1,5 +1,45 @@
+/* eslint-disable no-console */
 import axios from 'axios'
 import type { PaginationResponse, Package, DeliveryStatus, PackageResponse } from '../types'
+import { useAuthStore } from '@/stores/authStore'
+
+// Get the appropriate API URL based on environment
+const apiUrl = import.meta.env.DEV 
+  ? import.meta.env.VITE_API_URL 
+  : import.meta.env.VITE_PRODUCTION_API_URL
+
+if (!apiUrl) {
+  throw new Error('API URL not configured. Please check your environment variables.')
+}
+
+// Log which API URL is being used in development
+if (import.meta.env.DEV) {
+  // eslint-disable-next-line no-console
+  console.log(`🌐 Using API URL: ${apiUrl}`)
+}
+
+const api = axios.create({
+  baseURL: apiUrl,
+  withCredentials: true,
+})
+
+// Add auth token to requests
+api.interceptors.request.use((config) => {
+  const token = useAuthStore.getState().auth.accessToken
+  if (token) {
+    config.headers.Authorization = `Bearer ${token}`
+  }
+  return config
+})
+
+// Log API requests in development
+if (import.meta.env.DEV) {
+  api.interceptors.request.use((config) => {
+    // eslint-disable-next-line no-console
+    console.log(`🌐 ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`)
+    return config
+  })
+}
 
 interface CreatePackageData {
   customerId: string;
@@ -25,6 +65,29 @@ interface CreatePackageData {
   }[];
 }
 
+interface DeliveryPerson {
+  id: string;
+  name: string;
+  phoneNumber: string;
+  rating: number;
+  status?: 'ONLINE' | 'OFFLINE';
+  currentLocation: {
+    latitude: number;
+    longitude: number;
+  };
+  vehicle: {
+    id: string;
+    type: string;
+    plateNumber: string;
+    maxWeight: number;
+  };
+}
+
+interface DeliveryPersonsResponse {
+  success: boolean;
+  deliveryPersons: DeliveryPerson[];
+}
+
 interface PackagesResponse {
   success: boolean;
   packages: Package[];
@@ -37,11 +100,6 @@ interface DeletedPackagesResponse {
   count: number;
 }
 
-const api = axios.create({
-  baseURL: 'https://courier-server-q8dx.onrender.com/api',
-  withCredentials: true,
-})
-
 const packagesApi = {
   getAll: async (params?: { 
     page?: number; 
@@ -83,13 +141,35 @@ const packagesApi = {
     return response.data
   },
 
+  getAvailableDeliveryPersons: async (packageId: string): Promise<DeliveryPersonsResponse> => {
+    console.log('🔍 Fetching available delivery persons for package:', packageId)
+    const response = await api.get(`/packages/${packageId}/available-delivery-persons`)
+    console.log('📦 Available delivery persons response:', {
+      success: response.data.success,
+      count: response.data.deliveryPersons?.length,
+      statuses: response.data.deliveryPersons?.map((dp: DeliveryPerson) => ({
+        id: dp.id,
+        name: dp.name,
+        status: dp.status || 'OFFLINE'
+      }))
+    })
+    return response.data
+  },
+
   assign: async (packageId: string, deliveryPersonId: string, vehicleId: string): Promise<PackageResponse> => {
-    const response = await api.post(`/packages/assign/${packageId}`, {
+    const response = await api.post(`/packages/${packageId}/assign`, {
       deliveryPersonId,
       vehicleId
     })
     return response.data
-  }
+  },
+
+  assignDeliveryPerson: async (packageId: string, deliveryPersonId: string): Promise<PackageResponse> => {
+    const response = await api.post(`/packages/${packageId}/assign`, {
+      deliveryPersonId
+    })
+    return response.data
+  },
 }
 
 export default packagesApi 
\ No newline at end of file
diff --git a/src/features/packages/data/packagesStore.ts b/src/features/packages/data/packagesStore.ts
index afc4479..cd6501e 100644
--- a/src/features/packages/data/packagesStore.ts
+++ b/src/features/packages/data/packagesStore.ts
@@ -1,7 +1,7 @@
 /* eslint-disable no-console */
 import { create } from 'zustand'
-import { Package } from './schema'
-import axios from 'axios';  // Import Axios
+import type { Package } from '../types'
+import packagesApi from './packagesApi'
 
 export type PackagesDialogType = 'create' | 'update' | 'delete' | 'import'
 
@@ -13,11 +13,11 @@ export interface Label {
 interface PackagesState {
     packages: Package[] | null
     loading: boolean
-    fetchPackages: () => Promise<void> // Fetch method
+    fetchPackages: () => Promise<void>
     setPackages: (packages: Package[] | null) => void
     reset: () => void
     open: PackagesDialogType | null
-    setOpen: (str: PackagesDialogType | null) => void
+    setOpen: (open: PackagesDialogType | null) => void
     currentRow: Package | null
     setCurrentRow: (currentRow: Package | null) => void
 }
@@ -27,35 +27,51 @@ export const usePackagesStore = create<PackagesState>((set) => ({
     loading: false,
     fetchPackages: async () => {
         try {
-            set({ loading: true });
+            set({ loading: true })
 
-            // Make an API call using Axios
-            const { data } = await axios.get('/api/packages');
-            console.log("PACKAGESSSSS: ", data.packages)
-            set({ packages: data.packages, loading: false });
+            const response = await packagesApi.getAll()
+            console.log("PACKAGESSSSS: ", response.packages)
+            
+            // Transform the response if needed (e.g., ensure dates are properly parsed)
+            const packages = response.packages.map(pkg => ({
+                ...pkg,
+                createdAt: new Date(pkg.createdAt),
+                updatedAt: new Date(pkg.updatedAt),
+                deletedAt: pkg.deletedAt ? new Date(pkg.deletedAt) : null,
+                delivery: pkg.delivery ? {
+                    ...pkg.delivery,
+                    pickupTime: pkg.delivery.pickupTime ? new Date(pkg.delivery.pickupTime) : undefined,
+                    deliveryTime: pkg.delivery.deliveryTime ? new Date(pkg.delivery.deliveryTime) : undefined,
+                } : undefined,
+                locationHistory: pkg.locationHistory.map(history => ({
+                    ...history,
+                    timestamp: new Date(history.timestamp)
+                }))
+            }))
+
+            set({ packages, loading: false })
         } catch (error) {
-            console.error("Error fetching packages:", error);
-            set({ packages: [], loading: false }); // Default to an empty array on error
+            console.error("Error fetching packages:", error)
+            set({ packages: [], loading: false }) // Default to an empty array on error
         }
     },
     setPackages: (packages: Package[] | null) => {
-        set({ packages });
+        set({ packages })
     },
     reset: () => set({ packages: null }),
     open: null,
     setOpen: (open: PackagesDialogType | null) => {
         set((state) => {
             // Toggle between dialog states
-            const newState = state.open === open ? null : open;
-            return { open: newState };
-        });
+            const newState = state.open === open ? null : open
+            return { open: newState }
+        })
     },
     currentRow: null,
     setCurrentRow: (currentRow: Package | null) => {
-        console.log("Setting currentRow:", currentRow);
+        console.log("Setting currentRow:", currentRow)
         set({ currentRow })
     },
-
 }))
 
 // export const usePackages = () => usePackagesStore();
diff --git a/src/features/packages/data/schema.ts b/src/features/packages/data/schema.ts
index 669dd0b..1dd6a0c 100644
--- a/src/features/packages/data/schema.ts
+++ b/src/features/packages/data/schema.ts
@@ -1,6 +1,38 @@
 import { z } from 'zod'
+import type { LocationType, DeliveryStatus } from '../types'
 
-// Schema for the `Package` model
+// Schema for the Location model
+export const locationSchema = z.object({
+  id: z.string(),
+  placeId: z.string(),
+  address: z.string(),
+  name: z.string().optional(),
+  type: z.enum(['PICKUP', 'DELIVERY', 'WAYPOINT'] as [LocationType, ...LocationType[]]),
+  latitude: z.number(),
+  longitude: z.number(),
+  createdAt: z.date(),
+  updatedAt: z.date(),
+})
+
+// Schema for the PackageLabel model
+export const packageLabelSchema = z.object({
+  id: z.string(),
+  value: z.string(),
+  label: z.string(),
+})
+
+// Schema for the LocationHistory model
+export const locationHistorySchema = z.object({
+  id: z.string(),
+  packageId: z.string(),
+  locationId: z.string(),
+  timestamp: z.date(),
+  status: z.string(),
+  currentLat: z.number().optional(),
+  currentLng: z.number().optional(),
+})
+
+// Schema for the Package model
 export const packageSchema = z.object({
   id: z.string(),
   customerId: z.string(),
@@ -9,35 +41,23 @@ export const packageSchema = z.object({
   pickupLocationId: z.string(),
   deliveryLocationId: z.string(),
   createdAt: z.date(),
-  labels: z.array(  // Array of labels related to the package
-    z.object({
-      id: z.string(),
-      value: z.string(),
-      label: z.string(),
-    })
-  ).optional(), // Labels are optional if not present
-  delivery: z
-    .object({
-      id: z.string(),
-      status: z.enum(['ASSIGNED', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'DECLINED']),
-      createdAt: z.date(),
-    })
-    .optional(), // Delivery is optional if not yet assigned or completed
+  updatedAt: z.date(),
+  deletedAt: z.date().nullable().optional(),
+  deleted: z.boolean(),
+  pickupLocation: locationSchema,
+  deliveryLocation: locationSchema,
+  delivery: z.object({
+    id: z.string(),
+    status: z.enum(['ASSIGNED', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'DECLINED'] as [DeliveryStatus, ...DeliveryStatus[]]),
+    deliveryPersonId: z.string(),
+    pickupTime: z.date().optional(),
+    deliveryTime: z.date().optional(),
+  }).optional(),
+  labels: z.array(packageLabelSchema),
+  locationHistory: z.array(locationHistorySchema),
 })
 
-export type Package = z.infer<typeof packageSchema>
-
 // Schema for a User status to match the Prisma enum
 export const userStatusSchema = z.enum(['ONLINE', 'OFFLINE'])
 
 export type UserStatus = z.infer<typeof userStatusSchema>
-
-// Schema for the `PackageLabel` model
-export const packageLabelSchema = z.object({
-  id: z.string(),
-  value: z.string(),
-  label: z.string(),
-  packageId: z.string(), // Foreign key to the Package model
-})
-
-export type PackageLabel = z.infer<typeof packageLabelSchema>
diff --git a/src/features/packages/details/components/package-details.tsx b/src/features/packages/details/components/package-details.tsx
deleted file mode 100644
index 275a94c..0000000
--- a/src/features/packages/details/components/package-details.tsx
+++ /dev/null
@@ -1,276 +0,0 @@
-import { useParams, Link } from '@tanstack/react-router'
-import { useQuery } from '@tanstack/react-query'
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
-import { Badge } from '@/components/ui/badge'
-import { MapPin, Package as PackageIcon, User, Calendar, Weight, Phone, Loader2, ChevronLeft } from 'lucide-react'
-import { format } from 'date-fns'
-import packagesApi from '../../data/packagesApi'
-import { customerApi } from '@/features/customers/data/customerApi'
-import { Skeleton } from '@/components/ui/skeleton'
-import { Alert, AlertDescription } from '@/components/ui/alert'
-import { AlertCircle } from 'lucide-react'
-import { Header } from '@/components/layout/header'
-import { Main } from '@/components/layout/main'
-import { Button } from '@/components/ui/button'
-import { ThemeSwitch } from '@/components/theme-switch'
-import { ProfileDropdown } from '@/components/profile-dropdown'
-
-export function PackageDetails() {
-  const { id } = useParams({ from: '/_authenticated/packages/$id' })
-
-  const { 
-    data: packageData, 
-    isLoading: isLoadingPackage, 
-    isError: isPackageError, 
-    error: packageError 
-  } = useQuery({
-    queryKey: ['package', id],
-    queryFn: () => packagesApi.getById(id),
-    enabled: !!id,
-  })
-
-  const {
-    data: customerData,
-    isLoading: isLoadingCustomer,
-    isError: isCustomerError
-  } = useQuery({
-    queryKey: ['customer', packageData?.package?.customerId],
-    queryFn: () => customerApi.getById(packageData!.package.customerId),
-    enabled: !!packageData?.package?.customerId,
-  })
-
-  if (isLoadingPackage || isLoadingCustomer) {
-    return (
-      <>
-        <Header fixed className="px-2 sm:px-4">
-          <Button variant="ghost" size="icon" asChild>
-            <Link to="/packages">
-              <ChevronLeft className="h-5 w-5" />
-            </Link>
-          </Button>
-          <div className="ml-auto flex items-center gap-2 sm:gap-4">
-            <ThemeSwitch />
-            <ProfileDropdown />
-          </div>
-        </Header>
-        <Main fixed>
-          <div className="space-y-4 px-2 sm:px-0">
-            <Skeleton className="h-8 w-[200px]" />
-            <Card>
-              <CardHeader>
-                <Skeleton className="h-6 w-[150px]" />
-              </CardHeader>
-              <CardContent className="space-y-4">
-                <Skeleton className="h-4 w-full" />
-                <Skeleton className="h-4 w-full" />
-                <Skeleton className="h-4 w-3/4" />
-              </CardContent>
-            </Card>
-          </div>
-        </Main>
-      </>
-    )
-  }
-
-  if (isPackageError) {
-    return (
-      <>
-        <Header fixed className="px-2 sm:px-4">
-          <Button variant="ghost" size="icon" asChild>
-            <Link to="/packages">
-              <ChevronLeft className="h-5 w-5" />
-            </Link>
-          </Button>
-          <div className="ml-auto flex items-center gap-2 sm:gap-4">
-            <ThemeSwitch />
-            <ProfileDropdown />
-          </div>
-        </Header>
-        <Main fixed>
-          <div className="px-2 sm:px-0">
-            <Alert variant="destructive">
-              <AlertCircle className="h-4 w-4" />
-              <AlertDescription>
-                {packageError instanceof Error ? packageError.message : 'Failed to load package details'}
-              </AlertDescription>
-            </Alert>
-          </div>
-        </Main>
-      </>
-    )
-  }
-
-  if (!packageData?.package) {
-    return (
-      <>
-        <Header fixed className="px-2 sm:px-4">
-          <Button variant="ghost" size="icon" asChild>
-            <Link to="/packages">
-              <ChevronLeft className="h-5 w-5" />
-            </Link>
-          </Button>
-          <div className="ml-auto flex items-center gap-2 sm:gap-4">
-            <ThemeSwitch />
-            <ProfileDropdown />
-          </div>
-        </Header>
-        <Main fixed>
-          <div className="px-2 sm:px-0">
-            <Alert variant="destructive">
-              <AlertCircle className="h-4 w-4" />
-              <AlertDescription>Package not found</AlertDescription>
-            </Alert>
-          </div>
-        </Main>
-      </>
-    )
-  }
-
-  const packageDetails = packageData.package
-  const customer = customerData?.customer
-
-  return (
-    <>
-      <Header fixed className="px-2 sm:px-4">
-        <Button variant="ghost" size="icon" asChild>
-          <Link to="/packages">
-            <ChevronLeft className="h-5 w-5" />
-          </Link>
-        </Button>
-        <div className="ml-auto flex items-center gap-2 sm:gap-4">
-          <ThemeSwitch />
-          <ProfileDropdown />
-        </div>
-      </Header>
-
-      <Main fixed>
-        <div className="space-y-6 px-2 sm:px-0">
-          {/* Header */}
-          <div className="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
-            <div className="space-y-1">
-              <h2 className="text-2xl font-bold tracking-tight">Package Details</h2>
-              <p className="text-sm text-muted-foreground">#{id.slice(-6).toUpperCase()}</p>
-            </div>
-            <div className="flex items-center gap-3">
-              {packageDetails.labels && packageDetails.labels.length > 0 && (
-                <div className="flex flex-wrap gap-1">
-                  {packageDetails.labels.map((label) => (
-                    <Badge key={label.value} variant="outline">
-                      {label.label}
-                    </Badge>
-                  ))}
-                </div>
-              )}
-              <Badge 
-                variant={packageDetails.status === 'COMPLETED' ? 'default' : 'secondary'}
-                className="ml-auto sm:ml-0"
-              >
-                {packageDetails.status}
-              </Badge>
-            </div>
-          </div>
-
-          {/* Customer Information - Compact */}
-          {isCustomerError ? (
-            <Alert variant="destructive">
-              <AlertCircle className="h-4 w-4" />
-              <AlertDescription>Failed to load customer details</AlertDescription>
-            </Alert>
-          ) : customer ? (
-            <div className="flex items-center gap-4 rounded-lg border p-4 bg-muted/50">
-              <div className="h-10 w-10 rounded-full bg-primary/10 flex items-center justify-center">
-                <User className="h-5 w-5 text-primary" />
-              </div>
-              <div className="min-w-0 flex-1">
-                <p className="text-sm font-medium truncate">{customer.name}</p>
-                <a 
-                  href={`tel:${customer.phoneNumber}`}
-                  className="text-sm text-muted-foreground hover:text-primary flex items-center gap-1 w-fit"
-                >
-                  <Phone className="h-3 w-3" />
-                  {customer.phoneNumber}
-                </a>
-              </div>
-            </div>
-          ) : (
-            <div className="flex items-center gap-4 rounded-lg border p-4 bg-muted/50">
-              <div className="h-10 w-10 rounded-full bg-muted flex items-center justify-center">
-                <Loader2 className="h-5 w-5 animate-spin text-muted-foreground" />
-              </div>
-              <div className="min-w-0 flex-1 space-y-1">
-                <Skeleton className="h-4 w-24" />
-                <Skeleton className="h-4 w-32" />
-              </div>
-            </div>
-          )}
-
-          <div className="grid gap-6 md:grid-cols-2">
-            {/* Package Information */}
-            <Card>
-              <CardHeader>
-                <CardTitle className="text-base font-medium">Package Information</CardTitle>
-              </CardHeader>
-              <CardContent className="grid gap-4">
-                <div className="flex items-start gap-2">
-                  <PackageIcon className="h-4 w-4 mt-1 text-muted-foreground" />
-                  <div className="space-y-1">
-                    <p className="text-sm font-medium">Description</p>
-                    <p className="text-sm text-muted-foreground">{packageDetails.description}</p>
-                  </div>
-                </div>
-
-                <div className="flex items-start gap-2">
-                  <Weight className="h-4 w-4 mt-1 text-muted-foreground" />
-                  <div className="space-y-1">
-                    <p className="text-sm font-medium">Weight</p>
-                    <p className="text-sm text-muted-foreground">{packageDetails.weight} kg</p>
-                  </div>
-                </div>
-
-                <div className="flex items-start gap-2">
-                  <Calendar className="h-4 w-4 mt-1 text-muted-foreground" />
-                  <div className="space-y-1">
-                    <p className="text-sm font-medium">Created</p>
-                    <p className="text-sm text-muted-foreground">
-                      {format(new Date(packageDetails.createdAt), 'PPP')}
-                    </p>
-                  </div>
-                </div>
-              </CardContent>
-            </Card>
-
-            {/* Location Information - Full Width */}
-            <Card className="md:col-span-2">
-              <CardHeader>
-                <CardTitle className="text-base font-medium">Delivery Information</CardTitle>
-              </CardHeader>
-              <CardContent className="grid gap-6">
-                <div className="grid gap-4 sm:grid-cols-2">
-                  <div className="flex items-start gap-2">
-                    <div className="mt-1 p-1 rounded-md bg-primary/10">
-                      <MapPin className="h-4 w-4 text-primary" />
-                    </div>
-                    <div className="space-y-1">
-                      <p className="text-sm font-medium">Pickup Location</p>
-                      <p className="text-sm text-muted-foreground">{packageDetails.pickupLocation.address}</p>
-                    </div>
-                  </div>
-
-                  <div className="flex items-start gap-2">
-                    <div className="mt-1 p-1 rounded-md bg-destructive/10">
-                      <MapPin className="h-4 w-4 text-destructive" />
-                    </div>
-                    <div className="space-y-1">
-                      <p className="text-sm font-medium">Delivery Location</p>
-                      <p className="text-sm text-muted-foreground">{packageDetails.deliveryLocation.address}</p>
-                    </div>
-                  </div>
-                </div>
-              </CardContent>
-            </Card>
-          </div>
-        </div>
-      </Main>
-    </>
-  )
-} 
\ No newline at end of file
diff --git a/src/features/packages/details/index.tsx b/src/features/packages/details/index.tsx
new file mode 100644
index 0000000..122880e
--- /dev/null
+++ b/src/features/packages/details/index.tsx
@@ -0,0 +1,102 @@
+import { useQuery } from '@tanstack/react-query'
+import { Link } from '@tanstack/react-router'
+import { Route } from '@/routes/_authenticated/packages/$id.lazy'
+import { Header } from '@/components/layout/header'
+import { Main } from '@/components/layout/main'
+import { ThemeSwitch } from '@/components/theme-switch'
+import { ProfileDropdown } from '@/components/profile-dropdown'
+import { Search } from '@/components/search'
+import { Alert, AlertDescription } from '@/components/ui/alert'
+import { Button } from '@/components/ui/button'
+import { AlertCircle, ArrowLeft, Loader2 } from 'lucide-react'
+import packagesApi from '../data/packagesApi'
+import { PackageDetails } from '../components/package-details'
+
+export default function PackageDetailsPage() {
+  const { id } = Route.useParams()
+
+  const { 
+    data: packageData,
+    isLoading,
+    isError,
+    error,
+    refetch,
+    failureCount,
+    isRefetching
+  } = useQuery({
+    queryKey: ['package', id],
+    queryFn: () => packagesApi.getById(id),
+    enabled: !!id,
+    staleTime: 1000 * 60, // 1 minute
+    refetchInterval: 1000 * 30, // 30 seconds
+  })
+
+  return (
+    <>
+      <Header fixed>
+        <div className="flex items-center gap-2">
+          <Button
+            variant="ghost"
+            size="icon"
+            asChild
+          >
+            <Link to="/packages">
+              <ArrowLeft className="h-4 w-4" />
+            </Link>
+          </Button>
+          <Search />
+        </div>
+        <div className='ml-auto flex items-center space-x-4'>
+          <ThemeSwitch />
+          <ProfileDropdown />
+        </div>
+      </Header>
+
+      <Main>
+        {isLoading ? (
+          <div className="flex flex-col items-center justify-center min-h-[400px]">
+            <Loader2 className="h-8 w-8 animate-spin text-primary mb-4" />
+            <p className="text-muted-foreground">Loading package details...</p>
+          </div>
+        ) : isError ? (
+          <div className="flex flex-col items-center justify-center min-h-[400px] max-w-md mx-auto">
+            <Alert variant="destructive" className="mb-4">
+              <AlertCircle className="h-4 w-4" />
+              <AlertDescription className="flex flex-col gap-1">
+                <span>
+                  {error instanceof Error 
+                    ? error.message || 'Failed to load package details'
+                    : 'Failed to load package details'}
+                </span>
+                {failureCount > 0 && (
+                  <span className="text-xs opacity-70">
+                    Failed after {failureCount} attempts
+                  </span>
+                )}
+              </AlertDescription>
+            </Alert>
+            <Button 
+              variant="outline" 
+              onClick={() => refetch()}
+              disabled={isRefetching}
+            >
+              {isRefetching ? (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
+                  Retrying...
+                </>
+              ) : (
+                <>
+                  <Loader2 className="mr-2 h-4 w-4" />
+                  Retry
+                </>
+              )}
+            </Button>
+          </div>
+        ) : packageData?.package ? (
+          <PackageDetails package={packageData.package} />
+        ) : null}
+      </Main>
+    </>
+  )
+} 
\ No newline at end of file
diff --git a/src/features/packages/details/routes/package-details-route.tsx b/src/features/packages/details/routes/package-details-route.tsx
deleted file mode 100644
index 45e8c35..0000000
--- a/src/features/packages/details/routes/package-details-route.tsx
+++ /dev/null
@@ -1,9 +0,0 @@
-import { PackageDetails } from '../components/package-details'
-
-export default function PackageDetailsRoute() {
-  return (
-    <div className="container py-6">
-      <PackageDetails />
-    </div>
-  )
-} 
\ No newline at end of file
diff --git a/src/features/packages/types.ts b/src/features/packages/types.ts
index 9005272..3e2fa7f 100644
--- a/src/features/packages/types.ts
+++ b/src/features/packages/types.ts
@@ -1,31 +1,3 @@
-export interface Label {
-  value: string;
-  label: string;
-}
-
-export enum DeliveryStatus {
-  ASSIGNED = 'ASSIGNED',
-  IN_PROGRESS = 'IN_PROGRESS',
-  COMPLETED = 'COMPLETED',
-  FAILED = 'FAILED',
-  DECLINED = 'DECLINED'
-}
-
-export enum PackageStatus {
-  PENDING = 'PENDING',
-  ASSIGNED = 'ASSIGNED',
-  IN_PROGRESS = 'IN_PROGRESS',
-  COMPLETED = 'COMPLETED',
-  FAILED = 'FAILED',
-  CANCELLED = 'CANCELLED'
-}
-
-export enum LocationType {
-  PICKUP = 'PICKUP',
-  DELIVERY = 'DELIVERY',
-  WAYPOINT = 'WAYPOINT'
-}
-
 export interface Location {
   id: string;
   placeId: string;
@@ -34,88 +6,105 @@ export interface Location {
   type: LocationType;
   latitude: number;
   longitude: number;
-  createdAt: string;
-  updatedAt: string;
+  createdAt: Date;
+  updatedAt: Date;
 }
 
-export interface Customer {
-  id: string;
-  name: string;
-  phoneNumber: string;
+export enum LocationType {
+  PICKUP = 'PICKUP',
+  DELIVERY = 'DELIVERY',
+  WAYPOINT = 'WAYPOINT'
 }
 
-export interface Delivery {
-  id: string;
-  packageId: string;
-  deliveryPersonId: string;
-  vehicleId: string;
-  pickupTime?: string;
-  deliveryTime?: string;
-  estimatedDeliveryTime?: string;
-  currentLocationId?: string;
-  currentLocation?: Location;
-  status: DeliveryStatus;
-  createdAt: string;
-  deliveryRating?: number;
+export enum DeliveryStatus {
+  ASSIGNED = 'ASSIGNED',
+  IN_PROGRESS = 'IN_PROGRESS',
+  COMPLETED = 'COMPLETED',
+  FAILED = 'FAILED',
+  DECLINED = 'DECLINED'
 }
 
-export interface PackagePricing {
+export interface PackageLabel {
   id: string;
-  packageId: string;
-  basePrice: number;
-  distance: number;
-  weightCharge: number;
-  urgentCharge?: number;
-  totalPrice: number;
-  currency: string;
-  createdAt: string;
-  updatedAt: string;
+  value: string;
+  label: string;
 }
 
-export interface PackageTimeline {
+export interface LocationHistory {
   id: string;
   packageId: string;
-  created: string;
-  assigned?: string;
-  pickupReady?: string;
-  pickedUp?: string;
-  inTransit?: string;
-  arriving?: string;
-  delivered?: string;
-  failed?: string;
-  cancelled?: string;
-  updatedAt: string;
+  locationId: string;
+  timestamp: Date;
+  status: string;
+  currentLat?: number;
+  currentLng?: number;
 }
 
 export interface Package {
   id: string;
   customerId: string;
-  customer: Customer;
   description: string;
   weight: number;
   pickupLocationId: string;
   deliveryLocationId: string;
+  createdAt: Date;
+  updatedAt: Date;
+  deletedAt?: Date | null;
+  deleted: boolean;
   pickupLocation: Location;
   deliveryLocation: Location;
-  status: PackageStatus;
-  pricing?: PackagePricing;
-  timeline?: PackageTimeline;
-  delivery?: Delivery;
-  labels?: Label[];
-  createdAt: string;
-  updatedAt: string;
-  deleted?: boolean;
-  deletedAt?: string;
+  delivery?: {
+    id: string;
+    status: DeliveryStatus;
+    deliveryPersonId: string;
+    pickupTime?: Date;
+    deliveryTime?: Date;
+    deliveryPerson?: {
+      id: string;
+      name: string;
+      phoneNumber: string;
+      email: string;
+      emailVerified: boolean;
+      image: string | null;
+      createdAt: string;
+      updatedAt: string;
+      phoneNumberVerified: boolean;
+      role: string;
+      banned: boolean;
+      banReason: string | null;
+      banExpires: string | null;
+      status: string;
+      averageRating: number;
+      completedDeliveries: number;
+      failedDeliveries: number;
+    };
+  };
+  labels: PackageLabel[];
+  locationHistory: LocationHistory[];
 }
 
 export interface PackageResponse {
   success: boolean;
+  message?: string;
+  error?: string;
   package: Package;
 }
 
+export interface PackagesResponse {
+  success: boolean;
+  error?: string;
+  packages: Package[];
+  pagination: {
+    total: number;
+    pages: number;
+    currentPage: number;
+    limit: number;
+  };
+}
+
 export interface PaginationResponse {
   total: number;
   pages: number;
-  page: number;
+  currentPage: number;
   limit: number;
 } 
\ No newline at end of file
diff --git a/src/features/packages/types/index.ts b/src/features/packages/types/index.ts
index 8e950a5..675afe9 100644
--- a/src/features/packages/types/index.ts
+++ b/src/features/packages/types/index.ts
@@ -4,58 +4,42 @@ export interface Label {
     label: string;
 }
 
+export enum DeliveryStatus {
+    ASSIGNED = 'ASSIGNED',
+    IN_PROGRESS = 'IN_PROGRESS',
+    COMPLETED = 'COMPLETED',
+    FAILED = 'FAILED',
+    DECLINED = 'DECLINED'
+}
+
 // Type for Delivery, based on the Prisma schema
 export interface Delivery {
     id: string;
     packageId: string;
     deliveryPersonId: string;
     vehicleId: string;
-    status: 'ASSIGNED' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILED' | 'DECLINED'; // Enum type as a union of string literals
-    pickupTime?: string; // Use string for date here, could also use Date depending on how you handle it
+    status: DeliveryStatus;
+    pickupTime?: string;
     deliveryTime?: string;
     currentLocationId?: string;
-    currentLocation?: string; // Assuming a simplified version here, you can expand based on your actual Location type
-}
-
-export type DeliveryStatus = 'ASSIGNED' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILED' | 'DECLINED';
-
-export interface Location {
-  placeId: string;
-  address: string;
-  type: 'PICKUP' | 'DELIVERY';
-  latitude: number;
-  longitude: number;
-}
-
-export interface Customer {
-  id: string;
-  name: string;
-  phoneNumber: string;
-}
-
-export interface Package {
-  id: string;
-  customerId: string;
-  customer: Customer;
-  description: string;
-  weight: number;
-  pickup: Location;
-  delivery: Location;
-  labels?: Label[];
-  createdAt: string;
-  updatedAt: string;
-  deleted?: boolean;
-  deletedAt?: string;
-}
-
-export interface PackageResponse {
-  success: boolean;
-  package: Package;
-}
-
-export interface PaginationResponse {
-  total: number;
-  pages: number;
-  page: number;
-  limit: number;
+    currentLocation?: string;
+    deliveryPerson?: {
+        id: string;
+        name: string;
+        phoneNumber: string;
+        email: string;
+        emailVerified: boolean;
+        image: string | null;
+        createdAt: string;
+        updatedAt: string;
+        phoneNumberVerified: boolean;
+        role: string;
+        banned: boolean;
+        banReason: string | null;
+        banExpires: string | null;
+        status: string;
+        averageRating: number;
+        completedDeliveries: number;
+        failedDeliveries: number;
+    };
 }
diff --git a/src/features/users/data/usersStore.ts b/src/features/users/data/usersStore.ts
index 171d876..f5f9f40 100644
--- a/src/features/users/data/usersStore.ts
+++ b/src/features/users/data/usersStore.ts
@@ -1,57 +1,67 @@
 /* eslint-disable no-console */
 import { create } from 'zustand'
 import { User } from './schema'
-import axios from 'axios';  // Import Axios
-
+import axios from 'axios'
 
 type UsersDialogType = 'invite' | 'add' | 'edit' | 'delete'
 
 interface UsersState {
   users: User[] | null
   loading: boolean
-  fetchUsers: () => Promise<void>; // Fetch method
+  fetchUsers: () => Promise<void>
   setUsers: (users: User[] | null) => void
   reset: () => void
   open: UsersDialogType | null
-  setOpen: (str: UsersDialogType | null) => void
+  setOpen: (open: UsersDialogType | null) => void
   currentRow: User | null
   setCurrentRow: (currentRow: User | null) => void
 }
 
+// Get the appropriate API URL based on environment
+const apiUrl = import.meta.env.DEV 
+  ? import.meta.env.VITE_API_URL 
+  : import.meta.env.VITE_PRODUCTION_API_URL
+
+if (!apiUrl) {
+  throw new Error('API URL not configured. Please check your environment variables.')
+}
+
+const api = axios.create({
+  baseURL: apiUrl,
+  withCredentials: true,
+})
+
 export const useUsersStore = create<UsersState>((set) => ({
   users: null,
   loading: false,
   fetchUsers: async () => {
     try {
-      set({ loading: true });
+      set({ loading: true })
 
-      // Make an API call using Axios
-      const { data } = await axios.get('/api/users');
-      // console.log("USERSSSSS: ", data.users)
-      set({ users: data.users, loading: false });
+      const { data } = await api.get('/users')
+      set({ users: data.users, loading: false })
     } catch (error) {
-      console.error("Error fetching users:", error);
-      set({ users: [], loading: false }); // Default to an empty array on error
+      console.error("Error fetching users:", error)
+      set({ users: [], loading: false }) // Default to an empty array on error
     }
   },
   setUsers: (users: User[] | null) => {
-    set({ users });
+    set({ users })
   },
   reset: () => set({ users: null }),
   open: null,
   setOpen: (open: UsersDialogType | null) => {
     set((state) => {
       // Toggle between dialog states
-      const newState = state.open === open ? null : open;
-      return { open: newState };
-    });
+      const newState = state.open === open ? null : open
+      return { open: newState }
+    })
   },
   currentRow: null,
   setCurrentRow: (currentRow: User | null) => {
-    console.log("Setting currentRow:", currentRow);
+    console.log("Setting currentRow:", currentRow)
     set({ currentRow })
   },
-
 }))
 
 // export const useUsers = () => useUsersStore();
diff --git a/src/lib/auth-client.ts b/src/lib/auth-client.ts
index e417667..6c863cf 100644
--- a/src/lib/auth-client.ts
+++ b/src/lib/auth-client.ts
@@ -5,9 +5,24 @@ import { createAuthClient } from "better-auth/react"
 import { useAuthStore } from "@/stores/authStore"
 import { adminClient } from "better-auth/client/plugins"
 import { inferAdditionalFields } from "better-auth/client/plugins"
+import { toast } from "@/hooks/use-toast"
+
+// Get the appropriate API URL based on environment
+const apiUrl = import.meta.env.DEV 
+  ? "http://localhost:3000" 
+  : "https://courier-server-q8dx.onrender.com"
+
+if (!apiUrl) {
+  throw new Error('API URL not configured. Please check your environment variables.')
+}
+
+// Log which API URL is being used in development
+if (import.meta.env.DEV) {
+  console.log(`🔐 Auth client using API URL: ${apiUrl}`)
+}
 
 export const authClient = createAuthClient({
-    baseURL: "https://courier-server-q8dx.onrender.com",
+    baseURL: apiUrl,
     plugins: [
         phoneNumberClient(), 
         adminClient(),
@@ -23,19 +38,43 @@ export const authClient = createAuthClient({
         })
     ],
     fetchOptions: {
-        credentials: 'include',
         onSuccess: (ctx) => {
-            console.log("onSuccess: ", ctx)
+            if (import.meta.env.DEV) {
+                console.log("Auth success:", ctx)
+            }
+        },
+        onError: (ctx) => {
+            // Handle authentication errors
+            if (ctx.error.status === 401) {
+                toast({
+                    variant: 'destructive',
+                    title: 'Session expired',
+                    description: 'Please log in again'
+                })
+                useAuthStore.getState().auth.reset()
+            }
         },
         onResponse(context) {
-            const token = context.response.headers.get('authorization')
-            if (token) {
-                useAuthStore.getState().auth.setAccessToken(token.replace('Bearer ', ''))
+            if (import.meta.env.DEV) {
+                console.log("Auth response headers:", context.response.headers)
+                console.log("Current auth token:", useAuthStore.getState().auth.accessToken)
             }
         },
     },
     auth: {
         type: "Bearer",
-        token: () => useAuthStore.getState().auth.accessToken || "",
+        token: () => {
+            const token = useAuthStore.getState().auth.accessToken
+            if (!token) {
+                return ""
+            }
+            try {
+                // Remove quotes if token is stored as JSON string
+                return typeof token === 'string' ? token.replace(/^"|"$/g, '') : token
+            } catch (e) {
+                console.error('Error parsing auth token:', e)
+                return ""
+            }
+        },
     }
 })
\ No newline at end of file
diff --git a/src/lib/utils.ts b/src/lib/utils.ts
index b26c58f..556fd72 100644
--- a/src/lib/utils.ts
+++ b/src/lib/utils.ts
@@ -17,4 +17,19 @@ export async function logout(router: any) {
       },
     },
   })
+}
+
+export function calculateDistance(lat1: number, lon1: number, lat2: number, lon2: number): number {
+  const R = 6371 // Earth's radius in kilometers
+  const dLat = toRad(lat2 - lat1)
+  const dLon = toRad(lon2 - lon1)
+  const a =
+    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
+    Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2)
+  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))
+  return R * c
+}
+
+function toRad(degrees: number): number {
+  return (degrees * Math.PI) / 180
 }
\ No newline at end of file
diff --git a/src/main.tsx b/src/main.tsx
index c2f5915..4665591 100644
--- a/src/main.tsx
+++ b/src/main.tsx
@@ -1,4 +1,3 @@
-/* eslint-disable no-console */
 import { StrictMode } from 'react'
 import ReactDOM from 'react-dom/client'
 import axios, { AxiosError } from 'axios'
@@ -16,41 +15,47 @@ import './index.css'
 // Generated Routes
 import { routeTree } from './routeTree.gen'
 
-axios.defaults.baseURL = 'https://courier-server-q8dx.onrender.com'
+// Get the appropriate API URL based on environment
+const apiUrl = import.meta.env.DEV 
+  ? import.meta.env.VITE_API_URL 
+  : import.meta.env.VITE_PRODUCTION_API_URL
+
+if (!apiUrl) {
+  throw new Error('API URL not configured. Please check your environment variables.')
+}
+
+// Log which API URL is being used in development
+if (import.meta.env.DEV) {
+  // eslint-disable-next-line no-console
+  console.log(`🌐 Using API URL: ${apiUrl}`)
+}
+
+axios.defaults.baseURL = apiUrl
 axios.defaults.withCredentials = true
 
-// Add global request interceptor for JWT
-axios.interceptors.request.use(
-  (config) => {
-    const token = useAuthStore.getState().auth.accessToken
-    if (token) {
-      config.headers.Authorization = `Bearer ${token}`
-    }
-    return config
-  },
-  (error) => {
-    return Promise.reject(error)
+// Add auth token to requests
+axios.interceptors.request.use((config) => {
+  const token = useAuthStore.getState().auth.accessToken
+  if (token) {
+    config.headers.Authorization = `Bearer ${token}`
   }
-)
+  return config
+})
 
-// Add global response interceptor for token handling
-axios.interceptors.response.use(
-  (response) => {
-    const token = response.headers.authorization
-    if (token) {
-      useAuthStore.getState().auth.setAccessToken(token.replace('Bearer ', ''))
-    }
-    return response
-  },
-  (error) => {
-    return Promise.reject(error)
-  }
-)
+// Log API requests in development
+if (import.meta.env.DEV) {
+  axios.interceptors.request.use((config) => {
+    // eslint-disable-next-line no-console
+    console.log(`🌐 ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`)
+    return config
+  })
+}
 
 const queryClient = new QueryClient({
   defaultOptions: {
     queries: {
       retry: (failureCount, error) => {
+        // eslint-disable-next-line no-console
         if (import.meta.env.DEV) console.log({ failureCount, error })
 
         if (failureCount >= 0 && import.meta.env.DEV) return false
@@ -58,7 +63,7 @@ const queryClient = new QueryClient({
 
         return !(
           error instanceof AxiosError &&
-          [401, 403, 429].includes(error.response?.status ?? 0)
+          [401, 403].includes(error.response?.status ?? 0)
         )
       },
       refetchOnWindowFocus: import.meta.env.PROD,
@@ -67,6 +72,15 @@ const queryClient = new QueryClient({
     mutations: {
       onError: (error) => {
         handleServerError(error)
+
+        if (error instanceof AxiosError) {
+          if (error.response?.status === 304) {
+            toast({
+              variant: 'destructive',
+              title: 'Content not modified!',
+            })
+          }
+        }
       },
     },
   },
@@ -82,13 +96,6 @@ const queryClient = new QueryClient({
           const redirect = `${router.history.location.href}`
           router.navigate({ to: '/sign-in', search: { redirect } })
         }
-        if (error.response?.status === 429) {
-          toast({
-            variant: 'destructive',
-            title: 'Rate limit exceeded',
-            description: 'Please try again later',
-          })
-        }
         if (error.response?.status === 500) {
           toast({
             variant: 'destructive',
@@ -97,12 +104,7 @@ const queryClient = new QueryClient({
           router.navigate({ to: '/500' })
         }
         if (error.response?.status === 403) {
-          toast({
-            variant: 'destructive',
-            title: 'Access Denied',
-            description: 'You do not have permission to perform this action',
-          })
-          // router.navigate({ to: '/403' })
+          // router.navigate("/forbidden", { replace: true });
         }
       }
     },
diff --git a/src/routeTree.gen.ts b/src/routeTree.gen.ts
index 398d893..ea99d83 100644
--- a/src/routeTree.gen.ts
+++ b/src/routeTree.gen.ts
@@ -19,7 +19,6 @@ import { Route as authSignInImport } from './routes/(auth)/sign-in'
 import { Route as authOtpImport } from './routes/(auth)/otp'
 import { Route as authCompleteProfileImport } from './routes/(auth)/complete-profile'
 import { Route as auth500Import } from './routes/(auth)/500'
-import { Route as AuthenticatedPackagesIdImport } from './routes/_authenticated/packages/$id'
 
 // Create Virtual Routes
 
@@ -48,6 +47,9 @@ const AuthenticatedPackagesIndexLazyImport = createFileRoute(
 const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
   '/_authenticated/help-center/',
 )()
+const AuthenticatedDeliveryPersonsIndexLazyImport = createFileRoute(
+  '/_authenticated/delivery-persons/',
+)()
 const AuthenticatedChatsIndexLazyImport = createFileRoute(
   '/_authenticated/chats/',
 )()
@@ -69,6 +71,18 @@ const AuthenticatedSettingsAccountLazyImport = createFileRoute(
 const AuthenticatedPackagesCreateLazyImport = createFileRoute(
   '/_authenticated/packages/create',
 )()
+const AuthenticatedPackagesIdLazyImport = createFileRoute(
+  '/_authenticated/packages/$id',
+)()
+const AuthenticatedDeliveryPersonsCreateLazyImport = createFileRoute(
+  '/_authenticated/delivery-persons/create',
+)()
+const AuthenticatedDeliveryPersonsIdIndexLazyImport = createFileRoute(
+  '/_authenticated/delivery-persons/$id/',
+)()
+const AuthenticatedDeliveryPersonsIdEditLazyImport = createFileRoute(
+  '/_authenticated/delivery-persons/$id/edit',
+)()
 
 // Create/Update Routes
 
@@ -220,6 +234,17 @@ const AuthenticatedHelpCenterIndexLazyRoute =
     ),
   )
 
+const AuthenticatedDeliveryPersonsIndexLazyRoute =
+  AuthenticatedDeliveryPersonsIndexLazyImport.update({
+    id: '/delivery-persons/',
+    path: '/delivery-persons/',
+    getParentRoute: () => AuthenticatedRouteRoute,
+  } as any).lazy(() =>
+    import('./routes/_authenticated/delivery-persons/index.lazy').then(
+      (d) => d.Route,
+    ),
+  )
+
 const AuthenticatedChatsIndexLazyRoute =
   AuthenticatedChatsIndexLazyImport.update({
     id: '/chats/',
@@ -292,13 +317,47 @@ const AuthenticatedPackagesCreateLazyRoute =
     import('./routes/_authenticated/packages/create.lazy').then((d) => d.Route),
   )
 
-const AuthenticatedPackagesIdRoute = AuthenticatedPackagesIdImport.update({
-  id: '/packages/$id',
-  path: '/packages/$id',
-  getParentRoute: () => AuthenticatedRouteRoute,
-} as any).lazy(() =>
-  import('./routes/_authenticated/packages/$id.lazy').then((d) => d.Route),
-)
+const AuthenticatedPackagesIdLazyRoute =
+  AuthenticatedPackagesIdLazyImport.update({
+    id: '/packages/$id',
+    path: '/packages/$id',
+    getParentRoute: () => AuthenticatedRouteRoute,
+  } as any).lazy(() =>
+    import('./routes/_authenticated/packages/$id.lazy').then((d) => d.Route),
+  )
+
+const AuthenticatedDeliveryPersonsCreateLazyRoute =
+  AuthenticatedDeliveryPersonsCreateLazyImport.update({
+    id: '/delivery-persons/create',
+    path: '/delivery-persons/create',
+    getParentRoute: () => AuthenticatedRouteRoute,
+  } as any).lazy(() =>
+    import('./routes/_authenticated/delivery-persons/create.lazy').then(
+      (d) => d.Route,
+    ),
+  )
+
+const AuthenticatedDeliveryPersonsIdIndexLazyRoute =
+  AuthenticatedDeliveryPersonsIdIndexLazyImport.update({
+    id: '/delivery-persons/$id/',
+    path: '/delivery-persons/$id/',
+    getParentRoute: () => AuthenticatedRouteRoute,
+  } as any).lazy(() =>
+    import('./routes/_authenticated/delivery-persons/$id/index.lazy').then(
+      (d) => d.Route,
+    ),
+  )
+
+const AuthenticatedDeliveryPersonsIdEditLazyRoute =
+  AuthenticatedDeliveryPersonsIdEditLazyImport.update({
+    id: '/delivery-persons/$id/edit',
+    path: '/delivery-persons/$id/edit',
+    getParentRoute: () => AuthenticatedRouteRoute,
+  } as any).lazy(() =>
+    import('./routes/_authenticated/delivery-persons/$id/edit.lazy').then(
+      (d) => d.Route,
+    ),
+  )
 
 // Populate the FileRoutesByPath interface
 
@@ -409,11 +468,18 @@ declare module '@tanstack/react-router' {
       preLoaderRoute: typeof AuthenticatedIndexImport
       parentRoute: typeof AuthenticatedRouteImport
     }
+    '/_authenticated/delivery-persons/create': {
+      id: '/_authenticated/delivery-persons/create'
+      path: '/delivery-persons/create'
+      fullPath: '/delivery-persons/create'
+      preLoaderRoute: typeof AuthenticatedDeliveryPersonsCreateLazyImport
+      parentRoute: typeof AuthenticatedRouteImport
+    }
     '/_authenticated/packages/$id': {
       id: '/_authenticated/packages/$id'
       path: '/packages/$id'
       fullPath: '/packages/$id'
-      preLoaderRoute: typeof AuthenticatedPackagesIdImport
+      preLoaderRoute: typeof AuthenticatedPackagesIdLazyImport
       parentRoute: typeof AuthenticatedRouteImport
     }
     '/_authenticated/packages/create': {
@@ -465,6 +531,13 @@ declare module '@tanstack/react-router' {
       preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
       parentRoute: typeof AuthenticatedRouteImport
     }
+    '/_authenticated/delivery-persons/': {
+      id: '/_authenticated/delivery-persons/'
+      path: '/delivery-persons'
+      fullPath: '/delivery-persons'
+      preLoaderRoute: typeof AuthenticatedDeliveryPersonsIndexLazyImport
+      parentRoute: typeof AuthenticatedRouteImport
+    }
     '/_authenticated/help-center/': {
       id: '/_authenticated/help-center/'
       path: '/help-center'
@@ -493,6 +566,20 @@ declare module '@tanstack/react-router' {
       preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
       parentRoute: typeof AuthenticatedRouteImport
     }
+    '/_authenticated/delivery-persons/$id/edit': {
+      id: '/_authenticated/delivery-persons/$id/edit'
+      path: '/delivery-persons/$id/edit'
+      fullPath: '/delivery-persons/$id/edit'
+      preLoaderRoute: typeof AuthenticatedDeliveryPersonsIdEditLazyImport
+      parentRoute: typeof AuthenticatedRouteImport
+    }
+    '/_authenticated/delivery-persons/$id/': {
+      id: '/_authenticated/delivery-persons/$id/'
+      path: '/delivery-persons/$id'
+      fullPath: '/delivery-persons/$id'
+      preLoaderRoute: typeof AuthenticatedDeliveryPersonsIdIndexLazyImport
+      parentRoute: typeof AuthenticatedRouteImport
+    }
   }
 }
 
@@ -527,26 +614,38 @@ const AuthenticatedSettingsRouteLazyRouteWithChildren =
 interface AuthenticatedRouteRouteChildren {
   AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
   AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
-  AuthenticatedPackagesIdRoute: typeof AuthenticatedPackagesIdRoute
+  AuthenticatedDeliveryPersonsCreateLazyRoute: typeof AuthenticatedDeliveryPersonsCreateLazyRoute
+  AuthenticatedPackagesIdLazyRoute: typeof AuthenticatedPackagesIdLazyRoute
   AuthenticatedPackagesCreateLazyRoute: typeof AuthenticatedPackagesCreateLazyRoute
   AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
   AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
+  AuthenticatedDeliveryPersonsIndexLazyRoute: typeof AuthenticatedDeliveryPersonsIndexLazyRoute
   AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
   AuthenticatedPackagesIndexLazyRoute: typeof AuthenticatedPackagesIndexLazyRoute
   AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
+  AuthenticatedDeliveryPersonsIdEditLazyRoute: typeof AuthenticatedDeliveryPersonsIdEditLazyRoute
+  AuthenticatedDeliveryPersonsIdIndexLazyRoute: typeof AuthenticatedDeliveryPersonsIdIndexLazyRoute
 }
 
 const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
   AuthenticatedSettingsRouteLazyRoute:
     AuthenticatedSettingsRouteLazyRouteWithChildren,
   AuthenticatedIndexRoute: AuthenticatedIndexRoute,
-  AuthenticatedPackagesIdRoute: AuthenticatedPackagesIdRoute,
+  AuthenticatedDeliveryPersonsCreateLazyRoute:
+    AuthenticatedDeliveryPersonsCreateLazyRoute,
+  AuthenticatedPackagesIdLazyRoute: AuthenticatedPackagesIdLazyRoute,
   AuthenticatedPackagesCreateLazyRoute: AuthenticatedPackagesCreateLazyRoute,
   AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
   AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
+  AuthenticatedDeliveryPersonsIndexLazyRoute:
+    AuthenticatedDeliveryPersonsIndexLazyRoute,
   AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
   AuthenticatedPackagesIndexLazyRoute: AuthenticatedPackagesIndexLazyRoute,
   AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
+  AuthenticatedDeliveryPersonsIdEditLazyRoute:
+    AuthenticatedDeliveryPersonsIdEditLazyRoute,
+  AuthenticatedDeliveryPersonsIdIndexLazyRoute:
+    AuthenticatedDeliveryPersonsIdIndexLazyRoute,
 }
 
 const AuthenticatedRouteRouteWithChildren =
@@ -567,7 +666,8 @@ export interface FileRoutesByFullPath {
   '/404': typeof errors404LazyRoute
   '/503': typeof errors503LazyRoute
   '/': typeof AuthenticatedIndexRoute
-  '/packages/$id': typeof AuthenticatedPackagesIdRoute
+  '/delivery-persons/create': typeof AuthenticatedDeliveryPersonsCreateLazyRoute
+  '/packages/$id': typeof AuthenticatedPackagesIdLazyRoute
   '/packages/create': typeof AuthenticatedPackagesCreateLazyRoute
   '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
   '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
@@ -575,10 +675,13 @@ export interface FileRoutesByFullPath {
   '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
   '/apps': typeof AuthenticatedAppsIndexLazyRoute
   '/chats': typeof AuthenticatedChatsIndexLazyRoute
+  '/delivery-persons': typeof AuthenticatedDeliveryPersonsIndexLazyRoute
   '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
   '/packages': typeof AuthenticatedPackagesIndexLazyRoute
   '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
   '/users': typeof AuthenticatedUsersIndexLazyRoute
+  '/delivery-persons/$id/edit': typeof AuthenticatedDeliveryPersonsIdEditLazyRoute
+  '/delivery-persons/$id': typeof AuthenticatedDeliveryPersonsIdIndexLazyRoute
 }
 
 export interface FileRoutesByTo {
@@ -594,7 +697,8 @@ export interface FileRoutesByTo {
   '/404': typeof errors404LazyRoute
   '/503': typeof errors503LazyRoute
   '/': typeof AuthenticatedIndexRoute
-  '/packages/$id': typeof AuthenticatedPackagesIdRoute
+  '/delivery-persons/create': typeof AuthenticatedDeliveryPersonsCreateLazyRoute
+  '/packages/$id': typeof AuthenticatedPackagesIdLazyRoute
   '/packages/create': typeof AuthenticatedPackagesCreateLazyRoute
   '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
   '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
@@ -602,10 +706,13 @@ export interface FileRoutesByTo {
   '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
   '/apps': typeof AuthenticatedAppsIndexLazyRoute
   '/chats': typeof AuthenticatedChatsIndexLazyRoute
+  '/delivery-persons': typeof AuthenticatedDeliveryPersonsIndexLazyRoute
   '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
   '/packages': typeof AuthenticatedPackagesIndexLazyRoute
   '/settings': typeof AuthenticatedSettingsIndexLazyRoute
   '/users': typeof AuthenticatedUsersIndexLazyRoute
+  '/delivery-persons/$id/edit': typeof AuthenticatedDeliveryPersonsIdEditLazyRoute
+  '/delivery-persons/$id': typeof AuthenticatedDeliveryPersonsIdIndexLazyRoute
 }
 
 export interface FileRoutesById {
@@ -625,7 +732,8 @@ export interface FileRoutesById {
   '/(errors)/500': typeof errors500LazyRoute
   '/(errors)/503': typeof errors503LazyRoute
   '/_authenticated/': typeof AuthenticatedIndexRoute
-  '/_authenticated/packages/$id': typeof AuthenticatedPackagesIdRoute
+  '/_authenticated/delivery-persons/create': typeof AuthenticatedDeliveryPersonsCreateLazyRoute
+  '/_authenticated/packages/$id': typeof AuthenticatedPackagesIdLazyRoute
   '/_authenticated/packages/create': typeof AuthenticatedPackagesCreateLazyRoute
   '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
   '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
@@ -633,10 +741,13 @@ export interface FileRoutesById {
   '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
   '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
   '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
+  '/_authenticated/delivery-persons/': typeof AuthenticatedDeliveryPersonsIndexLazyRoute
   '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
   '/_authenticated/packages/': typeof AuthenticatedPackagesIndexLazyRoute
   '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
   '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
+  '/_authenticated/delivery-persons/$id/edit': typeof AuthenticatedDeliveryPersonsIdEditLazyRoute
+  '/_authenticated/delivery-persons/$id/': typeof AuthenticatedDeliveryPersonsIdIndexLazyRoute
 }
 
 export interface FileRouteTypes {
@@ -656,6 +767,7 @@ export interface FileRouteTypes {
     | '/404'
     | '/503'
     | '/'
+    | '/delivery-persons/create'
     | '/packages/$id'
     | '/packages/create'
     | '/settings/account'
@@ -664,10 +776,13 @@ export interface FileRouteTypes {
     | '/settings/notifications'
     | '/apps'
     | '/chats'
+    | '/delivery-persons'
     | '/help-center'
     | '/packages'
     | '/settings/'
     | '/users'
+    | '/delivery-persons/$id/edit'
+    | '/delivery-persons/$id'
   fileRoutesByTo: FileRoutesByTo
   to:
     | '/500'
@@ -682,6 +797,7 @@ export interface FileRouteTypes {
     | '/404'
     | '/503'
     | '/'
+    | '/delivery-persons/create'
     | '/packages/$id'
     | '/packages/create'
     | '/settings/account'
@@ -690,10 +806,13 @@ export interface FileRouteTypes {
     | '/settings/notifications'
     | '/apps'
     | '/chats'
+    | '/delivery-persons'
     | '/help-center'
     | '/packages'
     | '/settings'
     | '/users'
+    | '/delivery-persons/$id/edit'
+    | '/delivery-persons/$id'
   id:
     | '__root__'
     | '/_authenticated'
@@ -711,6 +830,7 @@ export interface FileRouteTypes {
     | '/(errors)/500'
     | '/(errors)/503'
     | '/_authenticated/'
+    | '/_authenticated/delivery-persons/create'
     | '/_authenticated/packages/$id'
     | '/_authenticated/packages/create'
     | '/_authenticated/settings/account'
@@ -719,10 +839,13 @@ export interface FileRouteTypes {
     | '/_authenticated/settings/notifications'
     | '/_authenticated/apps/'
     | '/_authenticated/chats/'
+    | '/_authenticated/delivery-persons/'
     | '/_authenticated/help-center/'
     | '/_authenticated/packages/'
     | '/_authenticated/settings/'
     | '/_authenticated/users/'
+    | '/_authenticated/delivery-persons/$id/edit'
+    | '/_authenticated/delivery-persons/$id/'
   fileRoutesById: FileRoutesById
 }
 
@@ -788,13 +911,17 @@ export const routeTree = rootRoute
       "children": [
         "/_authenticated/settings",
         "/_authenticated/",
+        "/_authenticated/delivery-persons/create",
         "/_authenticated/packages/$id",
         "/_authenticated/packages/create",
         "/_authenticated/apps/",
         "/_authenticated/chats/",
+        "/_authenticated/delivery-persons/",
         "/_authenticated/help-center/",
         "/_authenticated/packages/",
-        "/_authenticated/users/"
+        "/_authenticated/users/",
+        "/_authenticated/delivery-persons/$id/edit",
+        "/_authenticated/delivery-persons/$id/"
       ]
     },
     "/(auth)/500": {
@@ -848,8 +975,12 @@ export const routeTree = rootRoute
       "filePath": "_authenticated/index.tsx",
       "parent": "/_authenticated"
     },
+    "/_authenticated/delivery-persons/create": {
+      "filePath": "_authenticated/delivery-persons/create.lazy.tsx",
+      "parent": "/_authenticated"
+    },
     "/_authenticated/packages/$id": {
-      "filePath": "_authenticated/packages/$id.tsx",
+      "filePath": "_authenticated/packages/$id.lazy.tsx",
       "parent": "/_authenticated"
     },
     "/_authenticated/packages/create": {
@@ -880,6 +1011,10 @@ export const routeTree = rootRoute
       "filePath": "_authenticated/chats/index.lazy.tsx",
       "parent": "/_authenticated"
     },
+    "/_authenticated/delivery-persons/": {
+      "filePath": "_authenticated/delivery-persons/index.lazy.tsx",
+      "parent": "/_authenticated"
+    },
     "/_authenticated/help-center/": {
       "filePath": "_authenticated/help-center/index.lazy.tsx",
       "parent": "/_authenticated"
@@ -895,6 +1030,14 @@ export const routeTree = rootRoute
     "/_authenticated/users/": {
       "filePath": "_authenticated/users/index.lazy.tsx",
       "parent": "/_authenticated"
+    },
+    "/_authenticated/delivery-persons/$id/edit": {
+      "filePath": "_authenticated/delivery-persons/$id/edit.lazy.tsx",
+      "parent": "/_authenticated"
+    },
+    "/_authenticated/delivery-persons/$id/": {
+      "filePath": "_authenticated/delivery-persons/$id/index.lazy.tsx",
+      "parent": "/_authenticated"
     }
   }
 }
diff --git a/src/routes/_authenticated/delivery-persons/$id/edit.lazy.tsx b/src/routes/_authenticated/delivery-persons/$id/edit.lazy.tsx
new file mode 100644
index 0000000..71021df
--- /dev/null
+++ b/src/routes/_authenticated/delivery-persons/$id/edit.lazy.tsx
@@ -0,0 +1,6 @@
+import { createLazyFileRoute } from '@tanstack/react-router'
+import EditDeliveryPerson from '@/features/delivery-persons/edit'
+
+export const Route = createLazyFileRoute('/_authenticated/delivery-persons/$id/edit')({
+  component: EditDeliveryPerson,
+}) 
\ No newline at end of file
diff --git a/src/routes/_authenticated/delivery-persons/$id/index.lazy.tsx b/src/routes/_authenticated/delivery-persons/$id/index.lazy.tsx
new file mode 100644
index 0000000..087f5c5
--- /dev/null
+++ b/src/routes/_authenticated/delivery-persons/$id/index.lazy.tsx
@@ -0,0 +1,6 @@
+import { createLazyFileRoute } from '@tanstack/react-router'
+import DeliveryPersonDetails from '@/features/delivery-persons/details'
+
+export const Route = createLazyFileRoute('/_authenticated/delivery-persons/$id/')({
+  component: DeliveryPersonDetails,
+}) 
\ No newline at end of file
diff --git a/src/routes/_authenticated/delivery-persons/create.lazy.tsx b/src/routes/_authenticated/delivery-persons/create.lazy.tsx
new file mode 100644
index 0000000..6be9b44
--- /dev/null
+++ b/src/routes/_authenticated/delivery-persons/create.lazy.tsx
@@ -0,0 +1,6 @@
+import { createLazyFileRoute } from '@tanstack/react-router'
+import CreateDeliveryPerson from '@/features/delivery-persons/create'
+
+export const Route = createLazyFileRoute('/_authenticated/delivery-persons/create')({
+  component: CreateDeliveryPerson,
+}) 
\ No newline at end of file
diff --git a/src/routes/_authenticated/delivery-persons/index.lazy.tsx b/src/routes/_authenticated/delivery-persons/index.lazy.tsx
new file mode 100644
index 0000000..2b13127
--- /dev/null
+++ b/src/routes/_authenticated/delivery-persons/index.lazy.tsx
@@ -0,0 +1,6 @@
+import { createLazyFileRoute } from '@tanstack/react-router'
+import DeliveryPersons from '@/features/delivery-persons'
+
+export const Route = createLazyFileRoute('/_authenticated/delivery-persons/')({
+  component: DeliveryPersons,
+}) 
\ No newline at end of file
diff --git a/src/routes/_authenticated/packages/$id.lazy.tsx b/src/routes/_authenticated/packages/$id.lazy.tsx
index c1003d2..8b5c739 100644
--- a/src/routes/_authenticated/packages/$id.lazy.tsx
+++ b/src/routes/_authenticated/packages/$id.lazy.tsx
@@ -1,7 +1,6 @@
 import { createLazyFileRoute } from '@tanstack/react-router'
-import PackageDetailsRoute from '@/features/packages/details/routes/package-details-route'
+import PackageDetailsPage from '@/features/packages/details'
 
 export const Route = createLazyFileRoute('/_authenticated/packages/$id')({
-  component: PackageDetailsRoute,
-  loader: ({ params: { id } }) => ({ id })
+  component: PackageDetailsPage,
 }) 
\ No newline at end of file
diff --git a/src/routes/_authenticated/packages/$id.tsx b/src/routes/_authenticated/packages/$id.tsx
deleted file mode 100644
index 7beb856..0000000
--- a/src/routes/_authenticated/packages/$id.tsx
+++ /dev/null
@@ -1,5 +0,0 @@
-import { createFileRoute } from '@tanstack/react-router'
-
-export const Route = createFileRoute('/_authenticated/packages/$id')({
-  loader: ({ params: { id } }) => ({ id })
-}) 
\ No newline at end of file
diff --git a/src/routes/_authenticated/route.tsx b/src/routes/_authenticated/route.tsx
index 6aea20e..69b58c2 100644
--- a/src/routes/_authenticated/route.tsx
+++ b/src/routes/_authenticated/route.tsx
@@ -41,8 +41,7 @@ function RouteComponent() {
             'transition-[width] ease-linear duration-200',
             'h-svh flex flex-col',
             'group-data-[scroll-locked=1]/body:h-full',
-            'group-data-[scroll-locked=1]/body:has-[main.fixed-main]:h-svh',
-            'md:ml-0' // Add margin on mobile to account for menu button
+            'group-data-[scroll-locked=1]/body:has-[main.fixed-main]:h-svh'
           )}
         >
           <Outlet />
diff --git a/src/stores/authStore.ts b/src/stores/authStore.ts
index 5a2517d..24bb373 100644
--- a/src/stores/authStore.ts
+++ b/src/stores/authStore.ts
@@ -1,8 +1,9 @@
 import Cookies from 'js-cookie'
 import { create } from 'zustand'
 
-const ACCESS_TOKEN = 'thisisjustarandomstring'
-const USER_COOKIE = 'thisisjustarandomstring2'
+// Cookie names for storing auth state
+const ACCESS_TOKEN = 'auth_token'
+const USER_COOKIE = 'user_data'
 
 export interface AuthUser {
   accountNo?: string
@@ -25,26 +26,32 @@ interface AuthState {
 }
 
 export const useAuthStore = create<AuthState>()((set) => {
+  // Initialize state from cookies
   const cookieState = Cookies.get(ACCESS_TOKEN)
   const userCookieState = Cookies.get(USER_COOKIE)
   const initToken = cookieState ? JSON.parse(cookieState) : ''
   const initUser = userCookieState ? JSON.parse(userCookieState) : null
+
   return {
     auth: {
       user: initUser,
       setUser: (user) =>
         set((state) => {
-          Cookies.set(USER_COOKIE, JSON.stringify(user))
+          if (user) {
+            Cookies.set(USER_COOKIE, JSON.stringify(user))
+          } else {
+            Cookies.remove(USER_COOKIE)
+          }
           return { ...state, auth: { ...state.auth, user } }
         }),
-      // set((state) => {
-      //   Cookies.set(ACCESS_TOKEN, JSON.stringify(accessToken))
-      //   return { ...state, auth: { ...state.auth, accessToken } }
-      // }),
       accessToken: initToken,
       setAccessToken: (accessToken) =>
         set((state) => {
-          Cookies.set(ACCESS_TOKEN, JSON.stringify(accessToken))
+          if (accessToken) {
+            Cookies.set(ACCESS_TOKEN, JSON.stringify(accessToken))
+          } else {
+            Cookies.remove(ACCESS_TOKEN)
+          }
           return { ...state, auth: { ...state.auth, accessToken } }
         }),
       resetAccessToken: () =>
diff --git a/src/utils/handle-server-error.ts b/src/utils/handle-server-error.ts
index f7f1040..48ded3a 100644
--- a/src/utils/handle-server-error.ts
+++ b/src/utils/handle-server-error.ts
@@ -6,7 +6,6 @@ export function handleServerError(error: unknown) {
   console.log(error)
 
   let errMsg = 'Something went wrong!'
-  let description: string | undefined
 
   if (
     error &&
@@ -18,43 +17,8 @@ export function handleServerError(error: unknown) {
   }
 
   if (error instanceof AxiosError) {
-    const status = error.response?.status
-    const responseData = error.response?.data
-
-    switch (status) {
-      case 429:
-        errMsg = 'Rate limit exceeded'
-        description = 'Please try again later'
-        break
-      case 400:
-        errMsg = responseData?.message || 'Invalid request'
-        break
-      case 401:
-        errMsg = 'Authentication required'
-        description = 'Please sign in to continue'
-        break
-      case 403:
-        errMsg = 'Access denied'
-        description = 'You do not have permission to perform this action'
-        break
-      case 404:
-        errMsg = 'Resource not found'
-        break
-      case 422:
-        errMsg = responseData?.message || 'Validation error'
-        break
-      case 500:
-        errMsg = 'Internal server error'
-        description = 'Please try again later'
-        break
-      default:
-        errMsg = responseData?.message || responseData?.title || 'Something went wrong!'
-    }
+    errMsg = error.response?.data.title
   }
 
-  toast({ 
-    variant: 'destructive', 
-    title: errMsg,
-    description
-  })
+  toast({ variant: 'destructive', title: errMsg })
 }
diff --git a/src/webhook instructions.txt b/src/webhook instructions.txt
new file mode 100644
index 0000000..b9cd18a
--- /dev/null
+++ b/src/webhook instructions.txt	
@@ -0,0 +1,155 @@
+Here's a clear explanation of WebSocket usage in the courier project:
+// WebSocket Events Guide for Frontend Team
+
+/*
+1. PACKAGE STATUS UPDATES
+-----------------------
+The backend emits real-time updates whenever a package's status changes.
+Event name: 'package:update'
+
+Example subscription:
+*/
+socket.on('package:update', (data: {
+  packageId: string;
+  status: 'PENDING' | 'ASSIGNED' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILED' | 'CANCELLED';
+  timestamp: Date;
+  // May include additional data like deliveryPerson, location, etc.
+}) => {
+  // Update your UI with the new status
+});
+
+/*
+2. LOCATION UPDATES
+-----------------
+When a delivery person's location changes, the backend emits an update.
+Event name: 'location:update'
+
+Example subscription:
+*/
+socket.on('location:update', (data: {
+  deliveryPersonId: string;
+  packageId: string;
+  location: {
+    latitude: number;
+    longitude: number;
+  };
+  timestamp: Date;
+}) => {
+  // Update delivery person's location on map
+  // Update ETA calculations
+});
+
+/*
+3. CONNECTING TO WEBSOCKET
+------------------------
+The WebSocket connection should be established when your app initializes.
+*/
+import { io } from 'socket.io-client';
+
+const socket = io('http://localhost:3000', {
+  auth: {
+    token: 'your-auth-token' // Same token used for REST API
+  }
+});
+
+// Handle connection
+socket.on('connect', () => {
+  console.log('Connected to WebSocket');
+});
+
+// Handle disconnection
+socket.on('disconnect', () => {
+  console.log('Disconnected from WebSocket');
+  // Implement reconnection logic if needed
+});
+
+/*
+4. IMPORTANT NOTES
+----------------
+- The WebSocket connection requires authentication
+- Events are package-specific, so you'll receive updates only for relevant packages
+- Location updates are sent approximately every 30 seconds or when significant changes occur
+- All timestamps are in UTC
+- The connection will automatically attempt to reconnect if lost
+
+5. ERROR HANDLING
+---------------
+*/
+socket.on('connect_error', (error) => {
+  console.error('WebSocket connection error:', error);
+  // Handle connection errors (show offline status, retry connection, etc.)
+});
+
+/*
+6. CLEANUP
+---------
+When component unmounts or user logs out:
+*/
+useEffect(() => {
+  // Setup socket listeners
+
+  return () => {
+    socket.off('package:update');
+    socket.off('location:update');
+    // Remove other listeners
+  };
+}, []);
+
+/*
+7. EXAMPLE USAGE IN A REACT COMPONENT
+----------------------------------
+*/
+function PackageTracker({ packageId }: { packageId: string }) {
+  const [packageStatus, setPackageStatus] = useState<PackageStatus>();
+  const [deliveryLocation, setDeliveryLocation] = useState<Location>();
+
+  useEffect(() => {
+    // Listen for status updates
+    socket.on('package:update', (data) => {
+      if (data.packageId === packageId) {
+        setPackageStatus(data.status);
+      }
+    });
+
+    // Listen for location updates
+    socket.on('location:update', (data) => {
+      if (data.packageId === packageId) {
+        setDeliveryLocation(data.location);
+      }
+    });
+
+    return () => {
+      socket.off('package:update');
+      socket.off('location:update');
+    };
+  }, [packageId]);
+
+  return (
+    <div>
+      <PackageStatus status={packageStatus} />
+      <DeliveryMap location={deliveryLocation} />
+    </div>
+  );
+}
+
+/*
+8. AVAILABLE EVENTS
+-----------------
+Currently implemented WebSocket events:
+
+- 'package:update'     - Package status changes
+- 'location:update'    - Delivery person location updates
+- 'package:cancelled'  - Package cancellation
+- 'delivery:assigned'  - New delivery assignment
+- 'delivery:started'   - Delivery journey started
+- 'delivery:completed' - Delivery completed
+*/   This is the actual implementation in the project. The WebSocket server is already set up and running, and these events are being emitted by the backend. You can rely on these events for real-time updates in your frontend components.
+The most important events for package tracking are:
+package:update - For status changes
+location:update - For delivery person location
+Each event includes a timestamp and relevant data, allowing you to maintain an accurate, real-time view of delivery progress.
+Remember to:
+Handle connection errors gracefully
+Clean up listeners when components unmount
+Use the same authentication token as your REST API calls
+Consider implementing a reconnection strategy for dropped connections here's one that was just emitted Emitting package update for 9d5639ec-df5d-4ce1-b0f2-907a23310e9b: { status: 'ASSIGNED', timestamp: 2025-03-19T07:45:25.819Z }
\ No newline at end of file
